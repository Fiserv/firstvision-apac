openapi: 3.0.1
info:
  title: Vision10 API Documentation
  description: V10 open API document.
  version: 1.3.0
servers:
- url: https://stg34.visionplus.io/sandbox/
tags:
- name: Card Management
paths:
  /v1/cards/{paymentInstrumentId}/tokenStatus:
    put:
      tags:
      - Card Management
      summary: Update Token Status
      description: This API is used to update the token status (Deactivate/Resume/Suspend)
        for a given payment instrument Id.
      operationId: UpdateVisaTokenStatus
      parameters:
      - name: Authorization
        in: header
        description: Token is used in token-based authentication to allow an application
          to access an API.
        required: true
        schema:
          type: string
          example: Bearer eyJhbGciOiJSUzI1NiJ9.eyJzY29wZSI6ImFsbCIsImNsaWVudF9pZCI6InZpc2lvbi1hcGktdXNlciIsImZpcnN0VmlzaW9uSWQiOiIwMDAwMEFVTkFCIiwiZXhwIjoxNzUwMzkyMDAwfQ.O6ZW0FnlWN09GqPeTEgWTQ9Gq6LPyt7BWTx65z7a0DKJQWBZ-pz29NX9xcuk-1ZdoLbKd_jPpwLNYGfS4KsuOLz1tQj1-teV2JO10DHxxthlG1-IGUIMyI5MivzNFlvLEG6TipqdQd3WdNl2juqlHKpDY86N0Z_Fg3n9igw4pFDzdGpHle5_4vGnl9PkYBA_WoWtgic05_63s5j6kmWbPkrV22NsHtOjJIh0sN1Q7sArecVnJCI7mwGVC5xasLGTO-Nn3hx6r8Y2mBv1Fv39LO_rUYcaK1RXS_xkoJV_3NdopGgfq4hp9F0naCKWxUxW1oaCaGCqk3p6xhkyDsJgaQ
      - name: x-client-correlation-id
        in: header
        description: Client specified identifier to correlate the request with the
          response of the API within their application. Any value passed in the request
          message will be return back as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-trace-id
        in: header
        description: Client specified trace-id to track the request within their application.
          Any value passed in the request message will be return back as-is in the
          API response message.
        required: false
        schema:
          maxLength: 256
          type: string
          example: ABC123
      - name: x-client-source-channel
        in: header
        description: Client specified identifier of the channel that initiated the
          API request. Any value passed in the request message will be return back
          as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-user-id
        in: header
        description: Client specified identifier of their user** that initiated the
          API request.  Any value passed in the request message will be return back
          as-is in the API response message.<BR><BR><i>**The value passed in this
          field will not be used for any Identity and access management</i>
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: businessUnit
        in: query
        description: Unique identification number associated with the organization.
          Valid values from 1-998.
        required: false
        schema:
          maximum: 999
          maxLength: 3
          type: integer
          example: '100'
      - name: paymentInstrumentId
        in: path
        description: Unique alternate identification number associated with Payment
          Card Number.
        required: true
        schema:
          maxLength: 19
          type: string
          example: '0009846801010273613'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVisaTokenstatusV1ReqModel'
        required: true
      responses:
        '200':
          description: " \nSuccess"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateVisaTokenstatusV1ResponseModel'
        '503':
          description: " \nThe service was unavailable"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '403':
          description: " \nThe request resource is forbidden for user"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '400':
          description: " \nThe request cannot be validated"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '401':
          description: " \nThe request was unauthorized"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '422':
          description: " \nThe request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '404':
          description: " \nThe request resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '500':
          description: " \nAn unexpected internal server error occurred"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '504':
          description: " \nThe request timed out while waiting for a response"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
      security:
      - Authorization: [
          ]
      x-proxy-name: Update Visa Token Status
      x-group-name: Card Management
  /v1/cards/{paymentInstrumentId}/spendLimits:
    get:
      tags:
      - Card Management
      summary: Inquire Spend Limits
      description: This API is used to fetch the spending limits to control the card
        usage. These limits are set to individual card level like maximum ATM, OTC,
        Retail etc authorization amount and count.
      operationId: InquireSpendLimit
      parameters:
      - name: Authorization
        in: header
        description: Token is used in token-based authentication to allow an application
          to access an API.
        required: true
        schema:
          maxLength: 1200
          type: string
          example: Bearer eyJhbGciOiJSUzI1NiJ9.eyJzY29wZSI6ImFsbCIsImNsaWVudF9pZCI6InZpc2lvbi1hcGktdXNlciIsImZpcnN0VmlzaW9uSWQiOiIwMDAwMEFVTkFCIiwiZXhwIjoxNzUwMzkyMDAwfQ.O6ZW0FnlWN09GqPeTEgWTQ9Gq6LPyt7BWTx65z7a0DKJQWBZ-pz29NX9xcuk-1ZdoLbKd_jPpwLNYGfS4KsuOLz1tQj1-teV2JO10DHxxthlG1-IGUIMyI5MivzNFlvLEG6TipqdQd3WdNl2juqlHKpDY86N0Z_Fg3n9igw4pFDzdGpHle5_4vGnl9PkYBA_WoWtgic05_63s5j6kmWbPkrV22NsHtOjJIh0sN1Q7sArecVnJCI7mwGVC5xasLGTO-Nn3hx6r8Y2mBv1Fv39LO_rUYcaK1RXS_xkoJV_3NdopGgfq4hp9F0naCKWxUxW1oaCaGCqk3p6xhkyDsJgaQ
      - name: x-client-correlation-id
        in: header
        description: Client specified identifier to correlate the request with the
          response of the API within their application. Any value passed in the request
          message will be return back as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-trace-id
        in: header
        description: Client specified trace-id to track the request within their application.
          Any value passed in the request message will be return back as-is in the
          API response message.
        required: false
        schema:
          maxLength: 256
          type: string
          example: ABC123
      - name: x-client-source-channel
        in: header
        description: Client specified identifier of the channel that initiated the
          API request. Any value passed in the request message will be return back
          as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-user-id
        in: header
        description: Client specified identifier of their user** that initiated the
          API request.  Any value passed in the request message will be return back
          as-is in the API response message.<BR><BR><i>**The value passed in this
          field will not be used for any Identity and access management</i>
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: businessUnit
        in: query
        description: Unique identification number associated with the organization.
          Valid values from 1-998.
        required: false
        schema:
          maximum: 999
          maxLength: 3
          type: integer
          example: '100'
      - name: paymentInstrumentId
        in: path
        description: Unique alternate identification number associated with Payment
          Card Number.
        required: true
        schema:
          maxLength: 19
          type: string
          example: '0009846801010434272'
      responses:
        '503':
          description: " \nThe service was unavailable"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '403':
          description: " \nThe request resource is forbidden for user"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '200':
          description: " \nSuccess"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InquireSpendLimitV1ResponseModel'
        '400':
          description: " \nThe request cannot be validated"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '401':
          description: " \nThe request was unauthorized"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '422':
          description: " \nThe request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '404':
          description: " \nThe request resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '500':
          description: " \nAn unexpected internal server error occurred"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '504':
          description: " \nThe request timed out while waiting for a response"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
      security:
      - Authorization: [
          ]
      x-proxy-name: Inquire Spend Limits
      x-group-name: Card Management
    put:
      tags:
      - Card Management
      summary: Update Spend Limits
      description: This API is used to update the spending limits to control the card
        usage. These limits are updated at individual card level.
      operationId: UpdateSpendLimit
      parameters:
      - name: Authorization
        in: header
        description: Token is used in token-based authentication to allow an application
          to access an API.
        required: true
        schema:
          maxLength: 1200
          type: string
          example: Bearer eyJhbGciOiJSUzI1NiJ9.eyJzY29wZSI6ImFsbCIsImNsaWVudF9pZCI6InZpc2lvbi1hcGktdXNlciIsImZpcnN0VmlzaW9uSWQiOiIwMDAwMEFVTkFCIiwiZXhwIjoxNzUwMzkyMDAwfQ.O6ZW0FnlWN09GqPeTEgWTQ9Gq6LPyt7BWTx65z7a0DKJQWBZ-pz29NX9xcuk-1ZdoLbKd_jPpwLNYGfS4KsuOLz1tQj1-teV2JO10DHxxthlG1-IGUIMyI5MivzNFlvLEG6TipqdQd3WdNl2juqlHKpDY86N0Z_Fg3n9igw4pFDzdGpHle5_4vGnl9PkYBA_WoWtgic05_63s5j6kmWbPkrV22NsHtOjJIh0sN1Q7sArecVnJCI7mwGVC5xasLGTO-Nn3hx6r8Y2mBv1Fv39LO_rUYcaK1RXS_xkoJV_3NdopGgfq4hp9F0naCKWxUxW1oaCaGCqk3p6xhkyDsJgaQ
      - name: x-client-correlation-id
        in: header
        description: Client specified identifier to correlate the request with the
          response of the API within their application. Any value passed in the request
          message will be return back as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-trace-id
        in: header
        description: Client specified trace-id to track the request within their application.
          Any value passed in the request message will be return back as-is in the
          API response message.
        required: false
        schema:
          maxLength: 256
          type: string
          example: ABC123
      - name: x-client-source-channel
        in: header
        description: Client specified identifier of the channel that initiated the
          API request. Any value passed in the request message will be return back
          as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-user-id
        in: header
        description: Client specified identifier of their user** that initiated the
          API request.  Any value passed in the request message will be return back
          as-is in the API response message.<BR><BR><i>**The value passed in this
          field will not be used for any Identity and access management</i>
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: businessUnit
        in: query
        description: Unique identification number associated with the organization.
          Valid values from 1-998.
        required: false
        schema:
          maximum: 999
          maxLength: 3
          type: integer
          example: '100'
      - name: paymentInstrumentId
        in: path
        description: Unique alternate identification number associated with Payment
          Card Number.
        required: true
        schema:
          maxLength: 19
          type: string
          example: '0009846801010434272'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSpendLimitV1ReqModel'
        required: true
      responses:
        '503':
          description: " \nThe service was unavailable"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '403':
          description: " \nThe request resource is forbidden for user"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '400':
          description: " \nThe request cannot be validated"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '401':
          description: " \nThe request was unauthorized"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '200':
          description: " \nSuccess"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSpendLimitV1ResponseModel'
        '422':
          description: " \nThe request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '404':
          description: " \nThe request resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '500':
          description: " \nAn unexpected internal server error occurred"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '504':
          description: " \nThe request timed out while waiting for a response"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
      security:
      - Authorization: [
          ]
      x-proxy-name: Update Spend Limits
      x-group-name: Card Management
  /v1/cards/{paymentInstrumentId}/profile:
    put:
      tags:
      - Card Management
      summary: Update Card Type
      description: This API is used to update type of card for a given payment instrument
        Id.
      operationId: UpdateCardType
      parameters:
      - name: Authorization
        in: header
        description: Token is used in token-based authentication to allow an application
          to access an API.
        required: true
        schema:
          type: string
          example: Bearer eyJhbGciOiJSUzI1NiJ9.eyJzY29wZSI6ImFsbCIsImNsaWVudF9pZCI6InZpc2lvbi1hcGktdXNlciIsImZpcnN0VmlzaW9uSWQiOiIwMDAwMEFVTkFCIiwiZXhwIjoxNzUwMzkyMDAwfQ.O6ZW0FnlWN09GqPeTEgWTQ9Gq6LPyt7BWTx65z7a0DKJQWBZ-pz29NX9xcuk-1ZdoLbKd_jPpwLNYGfS4KsuOLz1tQj1-teV2JO10DHxxthlG1-IGUIMyI5MivzNFlvLEG6TipqdQd3WdNl2juqlHKpDY86N0Z_Fg3n9igw4pFDzdGpHle5_4vGnl9PkYBA_WoWtgic05_63s5j6kmWbPkrV22NsHtOjJIh0sN1Q7sArecVnJCI7mwGVC5xasLGTO-Nn3hx6r8Y2mBv1Fv39LO_rUYcaK1RXS_xkoJV_3NdopGgfq4hp9F0naCKWxUxW1oaCaGCqk3p6xhkyDsJgaQ
      - name: x-client-correlation-id
        in: header
        description: Client specified identifier to correlate the request with the
          response of the API within their application. Any value passed in the request
          message will be return back as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-trace-id
        in: header
        description: Client specified trace-id to track the request within their application.
          Any value passed in the request message will be return back as-is in the
          API response message.
        required: false
        schema:
          maxLength: 256
          type: string
          example: ABC123
      - name: x-client-source-channel
        in: header
        description: Client specified identifier of the channel that initiated the
          API request. Any value passed in the request message will be return back
          as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-user-id
        in: header
        description: Client specified identifier of their user** that initiated the
          API request.  Any value passed in the request message will be return back
          as-is in the API response message.<BR><BR><i>**The value passed in this
          field will not be used for any Identity and access management</i>
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: businessUnit
        in: query
        description: Unique identification number associated with the organization.
          Valid values from 1-998.
        required: false
        schema:
          maximum: 999
          maxLength: 3
          type: integer
          example: '100'
      - name: paymentInstrumentId
        in: path
        description: Unique alternate identification number associated with Payment
          Card Number.
        required: true
        schema:
          maxLength: 19
          type: string
          example: '0009846801010273613'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCardTypeV1ReqModel'
        required: true
      responses:
        '503':
          description: " \nThe service was unavailable"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '403':
          description: " \nThe request resource is forbidden for user"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '400':
          description: " \nThe request cannot be validated"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '401':
          description: " \nThe request was unauthorized"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '422':
          description: " \nThe request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '404':
          description: " \nThe request resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '200':
          description: " \nSuccess"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCardTypeV1ResponseModel'
        '500':
          description: " \nAn unexpected internal server error occurred"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '504':
          description: " \nThe request timed out while waiting for a response"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
      security:
      - Authorization: [
          ]
      x-proxy-name: Update Card Type
      x-group-name: Card Management
  /v1/cards/{paymentInstrumentId}/preference:
    get:
      tags:
      - Card Management
      summary: Inquire Card Preference
      description: This API is used to fetch various details like cardholder type,
        issue/reissue delivery options, address, Dynamic CVV2 method and address Id
        etc for a given payment instrument Id.
      operationId: InquireCardPreference
      parameters:
      - name: Authorization
        in: header
        description: Token is used in token-based authentication to allow an application
          to access an API.
        required: true
        schema:
          type: string
          example: Bearer eyJhbGciOiJSUzI1NiJ9.eyJzY29wZSI6ImFsbCIsImNsaWVudF9pZCI6InZpc2lvbi1hcGktdXNlciIsImZpcnN0VmlzaW9uSWQiOiIwMDAwMEFVTkFCIiwiZXhwIjoxNzUwMzkyMDAwfQ.O6ZW0FnlWN09GqPeTEgWTQ9Gq6LPyt7BWTx65z7a0DKJQWBZ-pz29NX9xcuk-1ZdoLbKd_jPpwLNYGfS4KsuOLz1tQj1-teV2JO10DHxxthlG1-IGUIMyI5MivzNFlvLEG6TipqdQd3WdNl2juqlHKpDY86N0Z_Fg3n9igw4pFDzdGpHle5_4vGnl9PkYBA_WoWtgic05_63s5j6kmWbPkrV22NsHtOjJIh0sN1Q7sArecVnJCI7mwGVC5xasLGTO-Nn3hx6r8Y2mBv1Fv39LO_rUYcaK1RXS_xkoJV_3NdopGgfq4hp9F0naCKWxUxW1oaCaGCqk3p6xhkyDsJgaQ
      - name: x-client-correlation-id
        in: header
        description: Client specified identifier to correlate the request with the
          response of the API within their application. Any value passed in the request
          message will be return back as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-trace-id
        in: header
        description: Client specified trace-id to track the request within their application.
          Any value passed in the request message will be return back as-is in the
          API response message.
        required: false
        schema:
          maxLength: 256
          type: string
          example: ABC123
      - name: x-client-source-channel
        in: header
        description: Client specified identifier of the channel that initiated the
          API request. Any value passed in the request message will be return back
          as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-user-id
        in: header
        description: Client specified identifier of their user** that initiated the
          API request.  Any value passed in the request message will be return back
          as-is in the API response message.<BR><BR><i>**The value passed in this
          field will not be used for any Identity and access management</i>
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: businessUnit
        in: query
        description: Unique identification number associated with the organization.
          Valid values from 1-998.
        required: false
        schema:
          maximum: 999
          maxLength: 3
          type: integer
          example: '100'
      - name: paymentInstrumentId
        in: path
        description: Unique alternate identification number associated with Payment
          Card Number.
        required: true
        schema:
          maxLength: 19
          type: string
          example: '0009846801010273613'
      responses:
        '503':
          description: " \nThe service was unavailable"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '403':
          description: " \nThe request resource is forbidden for user"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '400':
          description: " \nThe request cannot be validated"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '401':
          description: " \nThe request was unauthorized"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '422':
          description: " \nThe request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '404':
          description: " \nThe request resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '500':
          description: " \nAn unexpected internal server error occurred"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '504':
          description: " \nThe request timed out while waiting for a response"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '200':
          description: " \nSuccess"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InquireCardPreferenceV1ResponseModel'
      security:
      - Authorization: [
          ]
      x-proxy-name: Inquire Card Preference
      x-group-name: Card Management
    put:
      tags:
      - Card Management
      summary: Update Card Preference
      description: This API is used to update cardholder type, issue/reissue delivery
        options, card address detail and Dynamic CVV2 method, address Id etc. for
        a given payment instrument Id.
      operationId: UpdateCardPreference
      parameters:
      - name: Authorization
        in: header
        description: Token is used in token-based authentication to allow an application
          to access an API.
        required: true
        schema:
          type: string
          example: Bearer eyJhbGciOiJSUzI1NiJ9.eyJzY29wZSI6ImFsbCIsImNsaWVudF9pZCI6InZpc2lvbi1hcGktdXNlciIsImZpcnN0VmlzaW9uSWQiOiIwMDAwMEFVTkFCIiwiZXhwIjoxNzUwMzkyMDAwfQ.O6ZW0FnlWN09GqPeTEgWTQ9Gq6LPyt7BWTx65z7a0DKJQWBZ-pz29NX9xcuk-1ZdoLbKd_jPpwLNYGfS4KsuOLz1tQj1-teV2JO10DHxxthlG1-IGUIMyI5MivzNFlvLEG6TipqdQd3WdNl2juqlHKpDY86N0Z_Fg3n9igw4pFDzdGpHle5_4vGnl9PkYBA_WoWtgic05_63s5j6kmWbPkrV22NsHtOjJIh0sN1Q7sArecVnJCI7mwGVC5xasLGTO-Nn3hx6r8Y2mBv1Fv39LO_rUYcaK1RXS_xkoJV_3NdopGgfq4hp9F0naCKWxUxW1oaCaGCqk3p6xhkyDsJgaQ
      - name: x-client-correlation-id
        in: header
        description: Client specified identifier to correlate the request with the
          response of the API within their application. Any value passed in the request
          message will be return back as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-trace-id
        in: header
        description: Client specified trace-id to track the request within their application.
          Any value passed in the request message will be return back as-is in the
          API response message.
        required: false
        schema:
          maxLength: 256
          type: string
          example: ABC123
      - name: x-client-source-channel
        in: header
        description: Client specified identifier of the channel that initiated the
          API request. Any value passed in the request message will be return back
          as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-user-id
        in: header
        description: Client specified identifier of their user** that initiated the
          API request.  Any value passed in the request message will be return back
          as-is in the API response message.<BR><BR><i>**The value passed in this
          field will not be used for any Identity and access management</i>
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: businessUnit
        in: query
        description: Unique identification number associated with the organization.
          Valid values from 1-998.
        required: false
        schema:
          maximum: 999
          maxLength: 3
          type: integer
          example: '100'
      - name: paymentInstrumentId
        in: path
        description: Unique alternate identification number associated with Payment
          Card Number.
        required: true
        schema:
          maxLength: 19
          type: string
          example: '0009846801010273613'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCardPreferenceV1ReqModel'
        required: true
      responses:
        '503':
          description: " \nThe service was unavailable"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '200':
          description: " \nSuccess"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCardPreferenceV1ResponseModel'
        '403':
          description: " \nThe request resource is forbidden for user"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '400':
          description: " \nThe request cannot be validated"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '401':
          description: " \nThe request was unauthorized"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '422':
          description: " \nThe request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '404':
          description: " \nThe request resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '500':
          description: " \nAn unexpected internal server error occurred"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '504':
          description: " \nThe request timed out while waiting for a response"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
      security:
      - Authorization: [
          ]
      x-proxy-name: Update Card Preference
      x-group-name: Card Management
  /v1/cards/{paymentInstrumentId}/pinBlockChange:
    put:
      tags:
      - Card Management
      summary: Change PIN
      description: This API is used to update the PIN Block with the prerequisite
        that the existing PIN block must be supplied and validated before the new
        PIN block is replaced. This API could be triggered from the ATM or other digital
        channels such as online (WEB) or mobile banking.
      operationId: ChangePIN
      parameters:
      - name: Authorization
        in: header
        description: Token is used in token-based authentication to allow an application
          to access an API.
        required: true
        schema:
          maxLength: 1200
          type: string
          example: Bearer eyJhbGciOiJSUzI1NiJ9.eyJzY29wZSI6ImFsbCIsImNsaWVudF9pZCI6InZpc2lvbi1hcGktdXNlciIsImZpcnN0VmlzaW9uSWQiOiIwMDAwMEFVTkFCIiwiZXhwIjoxNzUwMzkyMDAwfQ.O6ZW0FnlWN09GqPeTEgWTQ9Gq6LPyt7BWTx65z7a0DKJQWBZ-pz29NX9xcuk-1ZdoLbKd_jPpwLNYGfS4KsuOLz1tQj1-teV2JO10DHxxthlG1-IGUIMyI5MivzNFlvLEG6TipqdQd3WdNl2juqlHKpDY86N0Z_Fg3n9igw4pFDzdGpHle5_4vGnl9PkYBA_WoWtgic05_63s5j6kmWbPkrV22NsHtOjJIh0sN1Q7sArecVnJCI7mwGVC5xasLGTO-Nn3hx6r8Y2mBv1Fv39LO_rUYcaK1RXS_xkoJV_3NdopGgfq4hp9F0naCKWxUxW1oaCaGCqk3p6xhkyDsJgaQ
      - name: x-client-correlation-id
        in: header
        description: Client specified identifier to correlate the request with the
          response of the API within their application. Any value passed in the request
          message will be return back as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-trace-id
        in: header
        description: Client specified trace-id to track the request within their application.
          Any value passed in the request message will be return back as-is in the
          API response message.
        required: false
        schema:
          maxLength: 256
          type: string
          example: ABC123
      - name: x-client-source-channel
        in: header
        description: Client specified identifier of the channel that initiated the
          API request. Any value passed in the request message will be return back
          as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-user-id
        in: header
        description: Client specified identifier of their user** that initiated the
          API request.  Any value passed in the request message will be return back
          as-is in the API response message.<BR><BR><i>**The value passed in this
          field will not be used for any Identity and access management</i>
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: businessUnit
        in: query
        description: Unique identification number associated with the organization.
          Valid values from 1-998.
        required: false
        schema:
          maximum: 999
          maxLength: 3
          type: integer
          example: '600'
      - name: paymentInstrumentId
        in: path
        description: Unique alternate identification number associated with Payment
          card number.
        required: true
        schema:
          maxLength: 19
          type: string
          example: '0009544410000000047'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePINV1ReqModel'
        required: true
      responses:
        '200':
          description: " \nSuccess"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePINV1ResponseModel'
        '503':
          description: " \nThe service was unavailable"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '403':
          description: " \nThe request resource is forbidden for user"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '400':
          description: " \nThe request cannot be validated"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '401':
          description: " \nThe request was unauthorized"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '422':
          description: " \nThe request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '404':
          description: " \nThe request resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '500':
          description: " \nAn unexpected internal server error occurred"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '504':
          description: " \nThe request timed out while waiting for a response"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
      security:
      - Authorization: [
          ]
      x-proxy-name: Change PIN
      x-group-name: Card Management
  /v1/cards/{paymentInstrumentId}/issueReissueDeliveryOption:
    put:
      tags:
      - Card Management
      summary: Issue Reissue Delivery Option
      description: This API is used to update the issue and re-issue delivery options
        for a given Payment instrument Id.
      operationId: UpdateIssueReissueDeliveryOption
      parameters:
      - name: Authorization
        in: header
        description: Token is used in token-based authentication to allow an application
          to access an API.
        required: true
        schema:
          type: string
          example: Bearer eyJhbGciOiJSUzI1NiJ9.eyJzY29wZSI6ImFsbCIsImNsaWVudF9pZCI6InZpc2lvbi1hcGktdXNlciIsImZpcnN0VmlzaW9uSWQiOiIwMDAwMEFVTkFCIiwiZXhwIjoxNzUwMzkyMDAwfQ.O6ZW0FnlWN09GqPeTEgWTQ9Gq6LPyt7BWTx65z7a0DKJQWBZ-pz29NX9xcuk-1ZdoLbKd_jPpwLNYGfS4KsuOLz1tQj1-teV2JO10DHxxthlG1-IGUIMyI5MivzNFlvLEG6TipqdQd3WdNl2juqlHKpDY86N0Z_Fg3n9igw4pFDzdGpHle5_4vGnl9PkYBA_WoWtgic05_63s5j6kmWbPkrV22NsHtOjJIh0sN1Q7sArecVnJCI7mwGVC5xasLGTO-Nn3hx6r8Y2mBv1Fv39LO_rUYcaK1RXS_xkoJV_3NdopGgfq4hp9F0naCKWxUxW1oaCaGCqk3p6xhkyDsJgaQ
      - name: x-client-correlation-id
        in: header
        description: Client specified identifier to correlate the request with the
          response of the API within their application. Any value passed in the request
          message will be return back as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-trace-id
        in: header
        description: Client specified trace-id to track the request within their application.
          Any value passed in the request message will be return back as-is in the
          API response message.
        required: false
        schema:
          maxLength: 256
          type: string
          example: ABC123
      - name: x-client-source-channel
        in: header
        description: Client specified identifier of the channel that initiated the
          API request. Any value passed in the request message will be return back
          as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-user-id
        in: header
        description: Client specified identifier of their user** that initiated the
          API request.  Any value passed in the request message will be return back
          as-is in the API response message.<BR><BR><i>**The value passed in this
          field will not be used for any Identity and access management</i>
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: businessUnit
        in: query
        description: Unique identification number associated with the organization.
          Valid values from 1-998.
        required: false
        schema:
          maximum: 999
          maxLength: 3
          type: integer
          example: '600'
      - name: paymentInstrumentId
        in: path
        description: Unique alternate identification number associated with Payment
          Card Number.
        required: true
        schema:
          maxLength: 19
          type: string
          example: '0009544410000000047'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIssueReissueDeliveryOptionV1ReqModel'
        required: true
      responses:
        '503':
          description: " \nThe service was unavailable"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '403':
          description: " \nThe request resource is forbidden for user"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '400':
          description: " \nThe request cannot be validated"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '401':
          description: " \nThe request was unauthorized"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '200':
          description: " \nSuccess"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateIssueReissueDeliveryOptionV1ResponseModel'
        '422':
          description: " \nThe request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '404':
          description: " \nThe request resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '500':
          description: " \nAn unexpected internal server error occurred"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '504':
          description: " \nThe request timed out while waiting for a response"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
      security:
      - Authorization: [
          ]
      x-proxy-name: Update Issue Reissue Delivery Option
      x-group-name: Card Management
  /v1/cards/{paymentInstrumentId}/controls:
    put:
      tags:
      - Card Management
      summary: Update Card Controls
      description: This API is used to update the card control restriction flags for
        a given payment instrument Id and provide details whether the ATM, POS, ECOM
        etc transitions are enabled or disabled.
      operationId: UpdateCardControls
      parameters:
      - name: Authorization
        in: header
        description: Token is used in token-based authentication to allow an application
          to access an API.
        required: true
        schema:
          maxLength: 1200
          type: string
          example: Bearer eyJhbGciOiJSUzI1NiJ9.eyJzY29wZSI6ImFsbCIsImNsaWVudF9pZCI6InZpc2lvbi1hcGktdXNlciIsImZpcnN0VmlzaW9uSWQiOiIwMDAwMEFVTkFCIiwiZXhwIjoxNzUwMzkyMDAwfQ.O6ZW0FnlWN09GqPeTEgWTQ9Gq6LPyt7BWTx65z7a0DKJQWBZ-pz29NX9xcuk-1ZdoLbKd_jPpwLNYGfS4KsuOLz1tQj1-teV2JO10DHxxthlG1-IGUIMyI5MivzNFlvLEG6TipqdQd3WdNl2juqlHKpDY86N0Z_Fg3n9igw4pFDzdGpHle5_4vGnl9PkYBA_WoWtgic05_63s5j6kmWbPkrV22NsHtOjJIh0sN1Q7sArecVnJCI7mwGVC5xasLGTO-Nn3hx6r8Y2mBv1Fv39LO_rUYcaK1RXS_xkoJV_3NdopGgfq4hp9F0naCKWxUxW1oaCaGCqk3p6xhkyDsJgaQ
      - name: x-client-correlation-id
        in: header
        description: Client specified identifier to correlate the request with the
          response of the API within their application. Any value passed in the request
          message will be return back as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-trace-id
        in: header
        description: Client specified trace-id to track the request within their application.
          Any value passed in the request message will be return back as-is in the
          API response message.
        required: false
        schema:
          maxLength: 256
          type: string
          example: ABC123
      - name: x-client-source-channel
        in: header
        description: Client specified identifier of the channel that initiated the
          API request. Any value passed in the request message will be return back
          as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-user-id
        in: header
        description: Client specified identifier of their user** that initiated the
          API request.  Any value passed in the request message will be return back
          as-is in the API response message.<BR><BR><i>**The value passed in this
          field will not be used for any Identity and access management</i>
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: businessUnit
        in: query
        description: Unique identification number associated with the organization.
          Valid values from 1-998.
        required: false
        schema:
          maximum: 999
          maxLength: 3
          type: integer
          example: '100'
      - name: paymentInstrumentId
        in: path
        description: Unique alternate identification number associated with Payment
          Card Number.
        required: true
        schema:
          maxLength: 19
          type: string
          example: '0009846801010434751'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCardControlV1ReqModel'
        required: true
      responses:
        '503':
          description: " \nThe service was unavailable"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '403':
          description: " \nThe request resource is forbidden for user"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '400':
          description: " \nThe request cannot be validated"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '401':
          description: " \nThe request was unauthorized"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '422':
          description: " \nThe request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '404':
          description: " \nThe request resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '500':
          description: " \nAn unexpected internal server error occurred"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '504':
          description: " \nThe request timed out while waiting for a response"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '200':
          description: " \nSuccess"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCardControlV1ResponseModel'
      security:
      - Authorization: [
          ]
      x-proxy-name: Update Card Controls
      x-group-name: Card Management
  /v1/cards/{paymentInstrumentId}/blockUnblock:
    put:
      tags:
      - Card Management
      summary: Block Unblock Card
      description: This API is used to block or unblock the given payment instrument
        Id.
      operationId: BlockUnblockCard
      parameters:
      - name: Authorization
        in: header
        description: Token is used in token-based authentication to allow an application
          to access an API.
        required: true
        schema:
          type: string
          example: Bearer eyJhbGciOiJSUzI1NiJ9.eyJzY29wZSI6ImFsbCIsImNsaWVudF9pZCI6InZpc2lvbi1hcGktdXNlciIsImZpcnN0VmlzaW9uSWQiOiIwMDAwMEFVTkFCIiwiZXhwIjoxNzUwMzkyMDAwfQ.O6ZW0FnlWN09GqPeTEgWTQ9Gq6LPyt7BWTx65z7a0DKJQWBZ-pz29NX9xcuk-1ZdoLbKd_jPpwLNYGfS4KsuOLz1tQj1-teV2JO10DHxxthlG1-IGUIMyI5MivzNFlvLEG6TipqdQd3WdNl2juqlHKpDY86N0Z_Fg3n9igw4pFDzdGpHle5_4vGnl9PkYBA_WoWtgic05_63s5j6kmWbPkrV22NsHtOjJIh0sN1Q7sArecVnJCI7mwGVC5xasLGTO-Nn3hx6r8Y2mBv1Fv39LO_rUYcaK1RXS_xkoJV_3NdopGgfq4hp9F0naCKWxUxW1oaCaGCqk3p6xhkyDsJgaQ
      - name: x-client-correlation-id
        in: header
        description: Client specified identifier to correlate the request with the
          response of the API within their application. Any value passed in the request
          message will be return back as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-trace-id
        in: header
        description: Client specified trace-id to track the request within their application.
          Any value passed in the request message will be return back as-is in the
          API response message.
        required: false
        schema:
          maxLength: 256
          type: string
          example: ABC123
      - name: x-client-source-channel
        in: header
        description: Client specified identifier of the channel that initiated the
          API request. Any value passed in the request message will be return back
          as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-user-id
        in: header
        description: Client specified identifier of their user** that initiated the
          API request.  Any value passed in the request message will be return back
          as-is in the API response message.<BR><BR><i>**The value passed in this
          field will not be used for any Identity and access management</i>
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: businessUnit
        in: query
        description: Unique identification number associated with the organization.
          Valid values from 1-998.
        required: false
        schema:
          maximum: 999
          maxLength: 3
          type: integer
          example: '100'
      - name: paymentInstrumentId
        in: path
        description: Unique alternate identification number associated with Payment
          card number.
        required: true
        schema:
          maxLength: 19
          type: string
          example: '0009846801010273605'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlockUnblockCardV1ReqModel'
        required: true
      responses:
        '503':
          description: " \nThe service was unavailable"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '200':
          description: " \nSuccess"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockUnblockCardV1ResponseModel'
        '403':
          description: " \nThe request resource is forbidden for user"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '400':
          description: " \nThe request cannot be validated"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '401':
          description: " \nThe request was unauthorized"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '422':
          description: " \nThe request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '404':
          description: " \nThe request resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '500':
          description: " \nAn unexpected internal server error occurred"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '504':
          description: " \nThe request timed out while waiting for a response"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
      security:
      - Authorization: [
          ]
      x-proxy-name: Block Unblock Card
      x-group-name: Card Management
  /v1/cards/{paymentInstrumentId}/addressId:
    put:
      tags:
      - Card Management
      summary: Update Cards' Address ID
      description: This API is used to update address ID field at card level for given
        payment instrument Id upon successful validation of customer ID, if given
        in the request.
      operationId: UpdateCardAddressId
      parameters:
      - name: Authorization
        in: header
        description: Token is used in token-based authentication to allow an application
          to access an API.
        required: true
        schema:
          type: string
          example: Bearer eyJhbGciOiJSUzI1NiJ9.eyJzY29wZSI6ImFsbCIsImNsaWVudF9pZCI6InZpc2lvbi1hcGktdXNlciIsImZpcnN0VmlzaW9uSWQiOiIwMDAwMEFVTkFCIiwiZXhwIjoxNzUwMzkyMDAwfQ.O6ZW0FnlWN09GqPeTEgWTQ9Gq6LPyt7BWTx65z7a0DKJQWBZ-pz29NX9xcuk-1ZdoLbKd_jPpwLNYGfS4KsuOLz1tQj1-teV2JO10DHxxthlG1-IGUIMyI5MivzNFlvLEG6TipqdQd3WdNl2juqlHKpDY86N0Z_Fg3n9igw4pFDzdGpHle5_4vGnl9PkYBA_WoWtgic05_63s5j6kmWbPkrV22NsHtOjJIh0sN1Q7sArecVnJCI7mwGVC5xasLGTO-Nn3hx6r8Y2mBv1Fv39LO_rUYcaK1RXS_xkoJV_3NdopGgfq4hp9F0naCKWxUxW1oaCaGCqk3p6xhkyDsJgaQ
      - name: x-client-correlation-id
        in: header
        description: Client specified identifier to correlate the request with the
          response of the API within their application. Any value passed in the request
          message will be return back as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-trace-id
        in: header
        description: Client specified trace-id to track the request within their application.
          Any value passed in the request message will be return back as-is in the
          API response message.
        required: false
        schema:
          maxLength: 256
          type: string
          example: ABC123
      - name: x-client-source-channel
        in: header
        description: Client specified identifier of the channel that initiated the
          API request. Any value passed in the request message will be return back
          as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-user-id
        in: header
        description: Client specified identifier of their user** that initiated the
          API request.  Any value passed in the request message will be return back
          as-is in the API response message.<BR><BR><i>**The value passed in this
          field will not be used for any Identity and access management</i>
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: businessUnit
        in: query
        description: Unique identification number associated with the organization.
          Valid values from 1-998.
        required: false
        schema:
          maximum: 999
          maxLength: 3
          type: integer
          example: '600'
      - name: customerId
        in: query
        description: Unique identification number assigned to a customer.
        required: false
        schema:
          maxLength: 19
          type: string
          example: '0000000001000000032'
      - name: paymentInstrumentId
        in: path
        description: Unique alternate identification number associated with Payment
          Card Number.
        required: true
        schema:
          maxLength: 19
          type: string
          example: '0004440010000000017'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCardAddressIdV1ReqModel'
        required: true
      responses:
        '503':
          description: " \nThe service was unavailable"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '403':
          description: " \nThe request resource is forbidden for user"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '400':
          description: " \nThe request cannot be validated"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '401':
          description: " \nThe request was unauthorized"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '422':
          description: " \nThe request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '404':
          description: " \nThe request resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '200':
          description: " \nSuccess"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCardAddressIdV1ResponseModel'
        '500':
          description: " \nAn unexpected internal server error occurred"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '504':
          description: " \nThe request timed out while waiting for a response"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
      security:
      - Authorization: [
          ]
      x-proxy-name: Update Cards' Address ID
      x-group-name: Card Management
  /v1/cards/{paymentInstrumentId}/activate:
    put:
      tags:
      - Card Management
      summary: Activate Card
      description: This API is used to activate the card after successful verification
        of the cardholder for a given payment instrument Id.
      operationId: ActivateCard
      parameters:
      - name: Authorization
        in: header
        description: Token is used in token-based authentication to allow an application
          to access an API.
        required: true
        schema:
          type: string
          example: Bearer eyJhbGciOiJSUzI1NiJ9.eyJzY29wZSI6ImFsbCIsImNsaWVudF9pZCI6InZpc2lvbi1hcGktdXNlciIsImZpcnN0VmlzaW9uSWQiOiIwMDAwMEFVTkFCIiwiZXhwIjoxNzUwMzkyMDAwfQ.O6ZW0FnlWN09GqPeTEgWTQ9Gq6LPyt7BWTx65z7a0DKJQWBZ-pz29NX9xcuk-1ZdoLbKd_jPpwLNYGfS4KsuOLz1tQj1-teV2JO10DHxxthlG1-IGUIMyI5MivzNFlvLEG6TipqdQd3WdNl2juqlHKpDY86N0Z_Fg3n9igw4pFDzdGpHle5_4vGnl9PkYBA_WoWtgic05_63s5j6kmWbPkrV22NsHtOjJIh0sN1Q7sArecVnJCI7mwGVC5xasLGTO-Nn3hx6r8Y2mBv1Fv39LO_rUYcaK1RXS_xkoJV_3NdopGgfq4hp9F0naCKWxUxW1oaCaGCqk3p6xhkyDsJgaQ
      - name: x-client-correlation-id
        in: header
        description: Client specified identifier to correlate the request with the
          response of the API within their application. Any value passed in the request
          message will be return back as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-trace-id
        in: header
        description: Client specified trace-id to track the request within their application.
          Any value passed in the request message will be return back as-is in the
          API response message.
        required: false
        schema:
          maxLength: 256
          type: string
          example: ABC123
      - name: x-client-source-channel
        in: header
        description: Client specified identifier of the channel that initiated the
          API request. Any value passed in the request message will be return back
          as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-user-id
        in: header
        description: Client specified identifier of their user** that initiated the
          API request.  Any value passed in the request message will be return back
          as-is in the API response message.<BR><BR><i>**The value passed in this
          field will not be used for any Identity and access management</i>
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: businessUnit
        in: query
        description: Unique identification number associated with the organization.
          Valid values from 1-998.
        required: false
        schema:
          maximum: 999
          maxLength: 3
          type: integer
          example: '100'
      - name: paymentInstrumentId
        in: path
        description: Unique alternate identification number associated with Payment
          Card Number.
        required: true
        schema:
          maxLength: 19
          type: string
          example: '0009846801010273613'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivateCardV1ReqModel'
        required: true
      responses:
        '200':
          description: " \nSuccess"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivateCardV1ResponseModel'
        '503':
          description: " \nThe service was unavailable"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '403':
          description: " \nThe request resource is forbidden for user"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '400':
          description: " \nThe request cannot be validated"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '401':
          description: " \nThe request was unauthorized"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '422':
          description: " \nThe request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '404':
          description: " \nThe request resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '500':
          description: " \nAn unexpected internal server error occurred"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '504':
          description: " \nThe request timed out while waiting for a response"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
      security:
      - Authorization: [
          ]
      x-proxy-name: Activate Card
      x-group-name: Card Management
  /v1/cards/{paymentInstrumentId}/action:
    put:
      tags:
      - Card Management
      summary: Update Card Action
      description: This API is used to update the card action for a given payment
        instrument Id.
      operationId: UpdateCardAction
      parameters:
      - name: Authorization
        in: header
        description: Token is used in token-based authentication to allow an application
          to access an API.
        required: true
        schema:
          maxLength: 1200
          type: string
          example: Bearer eyJhbGciOiJSUzI1NiJ9.eyJzY29wZSI6ImFsbCIsImNsaWVudF9pZCI6InZpc2lvbi1hcGktdXNlciIsImZpcnN0VmlzaW9uSWQiOiIwMDAwMEFVTkFCIiwiZXhwIjoxNzUwMzkyMDAwfQ.O6ZW0FnlWN09GqPeTEgWTQ9Gq6LPyt7BWTx65z7a0DKJQWBZ-pz29NX9xcuk-1ZdoLbKd_jPpwLNYGfS4KsuOLz1tQj1-teV2JO10DHxxthlG1-IGUIMyI5MivzNFlvLEG6TipqdQd3WdNl2juqlHKpDY86N0Z_Fg3n9igw4pFDzdGpHle5_4vGnl9PkYBA_WoWtgic05_63s5j6kmWbPkrV22NsHtOjJIh0sN1Q7sArecVnJCI7mwGVC5xasLGTO-Nn3hx6r8Y2mBv1Fv39LO_rUYcaK1RXS_xkoJV_3NdopGgfq4hp9F0naCKWxUxW1oaCaGCqk3p6xhkyDsJgaQ
      - name: x-client-correlation-id
        in: header
        description: Client specified identifier to correlate the request with the
          response of the API within their application. Any value passed in the request
          message will be return back as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-trace-id
        in: header
        description: Client specified trace-id to track the request within their application.
          Any value passed in the request message will be return back as-is in the
          API response message.
        required: false
        schema:
          maxLength: 256
          type: string
          example: ABC123
      - name: x-client-source-channel
        in: header
        description: Client specified identifier of the channel that initiated the
          API request. Any value passed in the request message will be return back
          as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-user-id
        in: header
        description: Client specified identifier of their user** that initiated the
          API request.  Any value passed in the request message will be return back
          as-is in the API response message.<BR><BR><i>**The value passed in this
          field will not be used for any Identity and access management</i>
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: businessUnit
        in: query
        description: Unique identification number associated with the organization.
          Valid values from 1-998.
        required: false
        schema:
          maximum: 999
          maxLength: 3
          type: integer
          example: '600'
      - name: paymentInstrumentId
        in: path
        description: Unique alternate identification number associated with Payment
          Card Number.
        required: true
        schema:
          maxLength: 19
          type: string
          example: '0009544410000000021'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCardActionV1ReqModel'
        required: true
      responses:
        '503':
          description: " \nThe service was unavailable"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '403':
          description: " \nThe request resource is forbidden for user"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '400':
          description: " \nThe request cannot be validated"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '401':
          description: " \nThe request was unauthorized"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '422':
          description: " \nThe request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '200':
          description: " \nSuccess"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCardActionV1ResponseModel'
        '404':
          description: " \nThe request resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '500':
          description: " \nAn unexpected internal server error occurred"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '504':
          description: " \nThe request timed out while waiting for a response"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
      security:
      - Authorization: [
          ]
      x-proxy-name: Update Card Action
      x-group-name: Card Management
  /v1/cards/{paymentInstrumentId}/generateDynamicCVV2:
    post:
      tags:
      - Card Management
      summary: Generate dynamic CVV2
      description: This API is used to generate encrypted dynamic CVV2 and provide
        other additional details like encrypted payment card number, encrypted expiry
        date, embossed name 1, embossed name 2, dynamic CVV2 expire date and time
        for a given payment instrument Id.
      operationId: GenerateDynamicCVV2
      parameters:
      - name: Authorization
        in: header
        description: Token is used in token-based authentication to allow an application
          to access an API.
        required: true
        schema:
          type: string
          example: Bearer eyJhbGciOiJSUzI1NiJ9.eyJzY29wZSI6ImFsbCIsImNsaWVudF9pZCI6InZpc2lvbi1hcGktdXNlciIsImZpcnN0VmlzaW9uSWQiOiIwMDAwMEFVTkFCIiwiZXhwIjoxNzUwMzkyMDAwfQ.O6ZW0FnlWN09GqPeTEgWTQ9Gq6LPyt7BWTx65z7a0DKJQWBZ-pz29NX9xcuk-1ZdoLbKd_jPpwLNYGfS4KsuOLz1tQj1-teV2JO10DHxxthlG1-IGUIMyI5MivzNFlvLEG6TipqdQd3WdNl2juqlHKpDY86N0Z_Fg3n9igw4pFDzdGpHle5_4vGnl9PkYBA_WoWtgic05_63s5j6kmWbPkrV22NsHtOjJIh0sN1Q7sArecVnJCI7mwGVC5xasLGTO-Nn3hx6r8Y2mBv1Fv39LO_rUYcaK1RXS_xkoJV_3NdopGgfq4hp9F0naCKWxUxW1oaCaGCqk3p6xhkyDsJgaQ
      - name: x-client-correlation-id
        in: header
        description: Client specified identifier to correlate the request with the
          response of the API within their application. Any value passed in the request
          message will be return back as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-trace-id
        in: header
        description: Client specified trace-id to track the request within their application.
          Any value passed in the request message will be return back as-is in the
          API response message.
        required: false
        schema:
          maxLength: 256
          type: string
          example: ABC123
      - name: x-client-source-channel
        in: header
        description: Client specified identifier of the channel that initiated the
          API request. Any value passed in the request message will be return back
          as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-user-id
        in: header
        description: Client specified identifier of their user** that initiated the
          API request.  Any value passed in the request message will be return back
          as-is in the API response message.<BR><BR><i>**The value passed in this
          field will not be used for any Identity and access management</i>
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: businessUnit
        in: query
        description: Unique identification number associated with the organization.
          Valid values from 1-998.
        required: false
        schema:
          maximum: 999
          maxLength: 3
          type: integer
          example: '600'
      - name: paymentInstrumentId
        in: path
        description: Unique alternate identification number associated with Payment
          Card Number.
        required: true
        schema:
          maxLength: 19
          type: string
          example: '0009846801010065787'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateDynamicCVV2V1ReqModel'
        required: true
      responses:
        '503':
          description: " \nThe service was unavailable"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '403':
          description: " \nThe request resource is forbidden for user"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '200':
          description: " \nSuccess"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateDynamicCVV2V1ResponseModel'
        '400':
          description: " \nThe request cannot be validated"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '401':
          description: " \nThe request was unauthorized"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '422':
          description: " \nThe request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '404':
          description: " \nThe request resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '500':
          description: " \nAn unexpected internal server error occurred"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '504':
          description: " \nThe request timed out while waiting for a response"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
      security:
      - Authorization: [
          ]
      x-proxy-name: Generate Dynamic CVV2
      x-group-name: Card Management
  /v1/cards/validateCVV2:
    post:
      tags:
      - Card Management
      summary: Validate CVV2
      description: This API is used to validate the CVV2 for a given payment instrument
        Id along with expiry date.
      operationId: CardSecureCode
      parameters:
      - name: Authorization
        in: header
        description: Token is used in token-based authentication to allow an application
          to access an API.
        required: true
        schema:
          type: string
          example: Bearer eyJhbGciOiJSUzI1NiJ9.eyJzY29wZSI6ImFsbCIsImNsaWVudF9pZCI6InZpc2lvbi1hcGktdXNlciIsImZpcnN0VmlzaW9uSWQiOiIwMDAwMEFVTkFCIiwiZXhwIjoxNzUwMzkyMDAwfQ.O6ZW0FnlWN09GqPeTEgWTQ9Gq6LPyt7BWTx65z7a0DKJQWBZ-pz29NX9xcuk-1ZdoLbKd_jPpwLNYGfS4KsuOLz1tQj1-teV2JO10DHxxthlG1-IGUIMyI5MivzNFlvLEG6TipqdQd3WdNl2juqlHKpDY86N0Z_Fg3n9igw4pFDzdGpHle5_4vGnl9PkYBA_WoWtgic05_63s5j6kmWbPkrV22NsHtOjJIh0sN1Q7sArecVnJCI7mwGVC5xasLGTO-Nn3hx6r8Y2mBv1Fv39LO_rUYcaK1RXS_xkoJV_3NdopGgfq4hp9F0naCKWxUxW1oaCaGCqk3p6xhkyDsJgaQ
      - name: x-client-correlation-id
        in: header
        description: Client specified identifier to correlate the request with the
          response of the API within their application. Any value passed in the request
          message will be return back as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-trace-id
        in: header
        description: Client specified trace-id to track the request within their application.
          Any value passed in the request message will be return back as-is in the
          API response message.
        required: false
        schema:
          maxLength: 256
          type: string
          example: ABC123
      - name: x-client-source-channel
        in: header
        description: Client specified identifier of the channel that initiated the
          API request. Any value passed in the request message will be return back
          as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-user-id
        in: header
        description: Client specified identifier of their user** that initiated the
          API request.  Any value passed in the request message will be return back
          as-is in the API response message.<BR><BR><i>**The value passed in this
          field will not be used for any Identity and access management</i>
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardSecureCodeV1ReqModel'
        required: true
      responses:
        '503':
          description: " \nThe service was unavailable"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '403':
          description: " \nThe request resource is forbidden for user"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '400':
          description: " \nThe request cannot be validated"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '401':
          description: " \nThe request was unauthorized"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '422':
          description: " \nThe request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '404':
          description: " \nThe request resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '500':
          description: " \nAn unexpected internal server error occurred"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '504':
          description: " \nThe request timed out while waiting for a response"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '201':
          description: " \nSuccess"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardSecureCodeV1ResponseModel'
      security:
      - Authorization: [
          ]
      x-proxy-name: Validate CVV2
      x-group-name: Card Management
  /v1/cards/lostStolenCardTransfer:
    post:
      tags:
      - Card Management
      summary: Transfer Lost Stolen Card
      description: This API is used to block the lost or stolen card and request for
        the replacement card. Based on the input field values the corresponding actions
        will be taken like creating new card number and updating the existing card
        with block codes etc.
      operationId: TransferLostStolenCard
      parameters:
      - name: Authorization
        in: header
        description: Token is used in token-based authentication to allow an application
          to access an API.
        required: true
        schema:
          maxLength: 1200
          type: string
          example: Bearer eyJhbGciOiJSUzI1NiJ9.eyJzY29wZSI6ImFsbCIsImNsaWVudF9pZCI6InZpc2lvbi1hcGktdXNlciIsImZpcnN0VmlzaW9uSWQiOiIwMDAwMEFVTkFCIiwiZXhwIjoxNzUwMzkyMDAwfQ.O6ZW0FnlWN09GqPeTEgWTQ9Gq6LPyt7BWTx65z7a0DKJQWBZ-pz29NX9xcuk-1ZdoLbKd_jPpwLNYGfS4KsuOLz1tQj1-teV2JO10DHxxthlG1-IGUIMyI5MivzNFlvLEG6TipqdQd3WdNl2juqlHKpDY86N0Z_Fg3n9igw4pFDzdGpHle5_4vGnl9PkYBA_WoWtgic05_63s5j6kmWbPkrV22NsHtOjJIh0sN1Q7sArecVnJCI7mwGVC5xasLGTO-Nn3hx6r8Y2mBv1Fv39LO_rUYcaK1RXS_xkoJV_3NdopGgfq4hp9F0naCKWxUxW1oaCaGCqk3p6xhkyDsJgaQ
      - name: x-client-correlation-id
        in: header
        description: Client specified identifier to correlate the request with the
          response of the API within their application. Any value passed in the request
          message will be return back as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-trace-id
        in: header
        description: Client specified trace-id to track the request within their application.
          Any value passed in the request message will be return back as-is in the
          API response message.
        required: false
        schema:
          maxLength: 256
          type: string
          example: ABC123
      - name: x-client-source-channel
        in: header
        description: Client specified identifier of the channel that initiated the
          API request. Any value passed in the request message will be return back
          as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-user-id
        in: header
        description: Client specified identifier of their user** that initiated the
          API request.  Any value passed in the request message will be return back
          as-is in the API response message.<BR><BR><i>**The value passed in this
          field will not be used for any Identity and access management</i>
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferLostStolenCardV1ReqModel'
        required: true
      responses:
        '503':
          description: " \nThe service was unavailable"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '403':
          description: " \nThe request resource is forbidden for user"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '400':
          description: " \nThe request cannot be validated"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '401':
          description: " \nThe request was unauthorized"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '201':
          description: " \nSuccess"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferLostStolenCardV1ResponseModel'
        '422':
          description: " \nThe request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '404':
          description: " \nThe request resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '500':
          description: " \nAn unexpected internal server error occurred"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '504':
          description: " \nThe request timed out while waiting for a response"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
      security:
      - Authorization: [
          ]
      x-proxy-name: Transfer Lost Stolen Card
      x-group-name: Card Management
  /v1/cards/googlePaySamsungPayPushProvisioning:
    post:
      tags:
      - Card Management
      summary: GooglePay – SamsungPay VTS Push Provisioning
      description: This API is used for push provisioning of Visa Card. Card push
        provisioning refers to the creation of a secure digital copy of a preexisting
        card (either physical or virtual). The copy is then added to a Google Pay
        or Samsung Pay wallet.
      operationId: GooglePaySamsungPayPushProvisioning
      parameters:
      - name: Authorization
        in: header
        description: Token is used in token-based authentication to allow an application
          to access an API.
        required: true
        schema:
          maxLength: 1200
          type: string
          example: Bearer eyJhbGciOiJSUzI1NiJ9.eyJzY29wZSI6ImFsbCIsImNsaWVudF9pZCI6InZpc2lvbi1hcGktdXNlciIsImZpcnN0VmlzaW9uSWQiOiIwMDAwMEFVTkFCIiwiZXhwIjoxNzUwMzkyMDAwfQ.O6ZW0FnlWN09GqPeTEgWTQ9Gq6LPyt7BWTx65z7a0DKJQWBZ-pz29NX9xcuk-1ZdoLbKd_jPpwLNYGfS4KsuOLz1tQj1-teV2JO10DHxxthlG1-IGUIMyI5MivzNFlvLEG6TipqdQd3WdNl2juqlHKpDY86N0Z_Fg3n9igw4pFDzdGpHle5_4vGnl9PkYBA_WoWtgic05_63s5j6kmWbPkrV22NsHtOjJIh0sN1Q7sArecVnJCI7mwGVC5xasLGTO-Nn3hx6r8Y2mBv1Fv39LO_rUYcaK1RXS_xkoJV_3NdopGgfq4hp9F0naCKWxUxW1oaCaGCqk3p6xhkyDsJgaQ
      - name: x-client-correlation-id
        in: header
        description: Client specified identifier to correlate the request with the
          response of the API within their application. Any value passed in the request
          message will be return back as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-trace-id
        in: header
        description: Client specified trace-id to track the request within their application.
          Any value passed in the request message will be return back as-is in the
          API response message.
        required: false
        schema:
          maxLength: 256
          type: string
          example: ABC123
      - name: x-client-source-channel
        in: header
        description: Client specified identifier of the channel that initiated the
          API request. Any value passed in the request message will be return back
          as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-user-id
        in: header
        description: Client specified identifier of their user** that initiated the
          API request.  Any value passed in the request message will be return back
          as-is in the API response message.<BR><BR><i>**The value passed in this
          field will not be used for any Identity and access management</i>
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GooglePaySamsungPayPushProvisioningV1ReqModel'
        required: true
      responses:
        '503':
          description: " \nThe service was unavailable"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '200':
          description: " \nSuccess"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GooglePayEncResponseModel'
        '403':
          description: " \nThe request resource is forbidden for user"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '400':
          description: " \nThe request cannot be validated"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '401':
          description: " \nThe request was unauthorized"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '422':
          description: " \nThe request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '404':
          description: " \nThe request resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '500':
          description: " \nAn unexpected internal server error occurred"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '504':
          description: " \nThe request timed out while waiting for a response"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
      security:
      - Authorization: [
          ]
      x-proxy-name: GooglePay - SamsungPay VTS Push Provisioning
      x-group-name: Card Management
  /v1/cards/boardCard:
    post:
      tags:
      - Card Management
      summary: Board Card
      description: This API allows to create a new card for an existing account. This
        API can be invoked with required fields and new card can be generated in real
        time mode.
      operationId: BoardCard
      parameters:
      - name: Authorization
        in: header
        description: Token is used in token-based authentication to allow an application
          to access an API.
        required: true
        schema:
          type: string
          example: Bearer eyJhbGciOiJSUzI1NiJ9.eyJzY29wZSI6ImFsbCIsImNsaWVudF9pZCI6InZpc2lvbi1hcGktdXNlciIsImZpcnN0VmlzaW9uSWQiOiIwMDAwMEFVTkFCIiwiZXhwIjoxNzUwMzkyMDAwfQ.O6ZW0FnlWN09GqPeTEgWTQ9Gq6LPyt7BWTx65z7a0DKJQWBZ-pz29NX9xcuk-1ZdoLbKd_jPpwLNYGfS4KsuOLz1tQj1-teV2JO10DHxxthlG1-IGUIMyI5MivzNFlvLEG6TipqdQd3WdNl2juqlHKpDY86N0Z_Fg3n9igw4pFDzdGpHle5_4vGnl9PkYBA_WoWtgic05_63s5j6kmWbPkrV22NsHtOjJIh0sN1Q7sArecVnJCI7mwGVC5xasLGTO-Nn3hx6r8Y2mBv1Fv39LO_rUYcaK1RXS_xkoJV_3NdopGgfq4hp9F0naCKWxUxW1oaCaGCqk3p6xhkyDsJgaQ
      - name: x-client-correlation-id
        in: header
        description: Client specified identifier to correlate the request with the
          response of the API within their application. Any value passed in the request
          message will be return back as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-trace-id
        in: header
        description: Client specified trace-id to track the request within their application.
          Any value passed in the request message will be return back as-is in the
          API response message.
        required: false
        schema:
          maxLength: 256
          type: string
          example: ABC123
      - name: x-client-source-channel
        in: header
        description: Client specified identifier of the channel that initiated the
          API request. Any value passed in the request message will be return back
          as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-user-id
        in: header
        description: Client specified identifier of their user** that initiated the
          API request.  Any value passed in the request message will be return back
          as-is in the API response message.<BR><BR><i>**The value passed in this
          field will not be used for any Identity and access management</i>
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BoardCardV1ReqModel'
        required: true
      responses:
        '503':
          description: " \nThe service was unavailable"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '403':
          description: " \nThe request resource is forbidden for user"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '400':
          description: " \nThe request cannot be validated"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '401':
          description: " \nThe request was unauthorized"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '201':
          description: " \nSuccess"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoardCardV1ResponseModel'
        '422':
          description: " \nThe request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '404':
          description: " \nThe request resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '500':
          description: " \nAn unexpected internal server error occurred"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '504':
          description: " \nThe request timed out while waiting for a response"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
      security:
      - Authorization: [
          ]
      x-proxy-name: Board Card
      x-group-name: Card Management
  /v1/cards/applePayPushProvisioning:
    post:
      tags:
      - Card Management
      summary: ApplePay Push Provisioning
      description: This API is used for push provisioning of Visa Card. Card push
        provisioning refers to the creation of a secure digital copy of a preexisting
        card (either physical or virtual). The copy is then added to a Apple Pay wallet.
      operationId: ApplePayPushProvisioning
      parameters:
      - name: Authorization
        in: header
        description: Token is used in token-based authentication to allow an application
          to access an API.
        required: true
        schema:
          maxLength: 1200
          type: string
          example: Bearer eyJhbGciOiJSUzI1NiJ9.eyJzY29wZSI6ImFsbCIsImNsaWVudF9pZCI6InZpc2lvbi1hcGktdXNlciIsImZpcnN0VmlzaW9uSWQiOiIwMDAwMEFVTkFCIiwiZXhwIjoxNzUwMzkyMDAwfQ.O6ZW0FnlWN09GqPeTEgWTQ9Gq6LPyt7BWTx65z7a0DKJQWBZ-pz29NX9xcuk-1ZdoLbKd_jPpwLNYGfS4KsuOLz1tQj1-teV2JO10DHxxthlG1-IGUIMyI5MivzNFlvLEG6TipqdQd3WdNl2juqlHKpDY86N0Z_Fg3n9igw4pFDzdGpHle5_4vGnl9PkYBA_WoWtgic05_63s5j6kmWbPkrV22NsHtOjJIh0sN1Q7sArecVnJCI7mwGVC5xasLGTO-Nn3hx6r8Y2mBv1Fv39LO_rUYcaK1RXS_xkoJV_3NdopGgfq4hp9F0naCKWxUxW1oaCaGCqk3p6xhkyDsJgaQ
      - name: x-client-correlation-id
        in: header
        description: Client specified identifier to correlate the request with the
          response of the API within their application. Any value passed in the request
          message will be return back as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-trace-id
        in: header
        description: Client specified trace-id to track the request within their application.
          Any value passed in the request message will be return back as-is in the
          API response message.
        required: false
        schema:
          maxLength: 256
          type: string
          example: ABC123
      - name: x-client-source-channel
        in: header
        description: Client specified identifier of the channel that initiated the
          API request. Any value passed in the request message will be return back
          as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-user-id
        in: header
        description: Client specified identifier of their user** that initiated the
          API request.  Any value passed in the request message will be return back
          as-is in the API response message.<BR><BR><i>**The value passed in this
          field will not be used for any Identity and access management</i>
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplePayPushProvisioningV1ReqModel'
        required: true
      responses:
        '503':
          description: " \nThe service was unavailable"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '201':
          description: " \nSuccess"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplePayPushProvisioningV1ResponseModel'
        '403':
          description: " \nThe request resource is forbidden for user"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '400':
          description: " \nThe request cannot be validated"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '401':
          description: " \nThe request was unauthorized"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '422':
          description: " \nThe request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '404':
          description: " \nThe request resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '500':
          description: " \nAn unexpected internal server error occurred"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '504':
          description: " \nThe request timed out while waiting for a response"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
      security:
      - Authorization: [
          ]
      x-proxy-name: ApplePay Push Provisioning
      x-group-name: Card Management
  /v1/cards/{paymentInstrumentId}/spendStatistics:
    get:
      tags:
      - Card Management
      summary: Inquire Card Spend Statistics
      description: This API is used to fetch the spending limit statistics to control
        the card usage. These limits are set at individual card level.
      operationId: InquireCardSpendStatistics
      parameters:
      - name: Authorization
        in: header
        description: Token is used in token-based authentication to allow an application
          to access an API.
        required: true
        schema:
          type: string
          example: Bearer eyJhbGciOiJSUzI1NiJ9.eyJzY29wZSI6ImFsbCIsImNsaWVudF9pZCI6InZpc2lvbi1hcGktdXNlciIsImZpcnN0VmlzaW9uSWQiOiIwMDAwMEFVTkFCIiwiZXhwIjoxNzUwMzkyMDAwfQ.O6ZW0FnlWN09GqPeTEgWTQ9Gq6LPyt7BWTx65z7a0DKJQWBZ-pz29NX9xcuk-1ZdoLbKd_jPpwLNYGfS4KsuOLz1tQj1-teV2JO10DHxxthlG1-IGUIMyI5MivzNFlvLEG6TipqdQd3WdNl2juqlHKpDY86N0Z_Fg3n9igw4pFDzdGpHle5_4vGnl9PkYBA_WoWtgic05_63s5j6kmWbPkrV22NsHtOjJIh0sN1Q7sArecVnJCI7mwGVC5xasLGTO-Nn3hx6r8Y2mBv1Fv39LO_rUYcaK1RXS_xkoJV_3NdopGgfq4hp9F0naCKWxUxW1oaCaGCqk3p6xhkyDsJgaQ
      - name: x-client-correlation-id
        in: header
        description: Client specified identifier to correlate the request with the
          response of the API within their application. Any value passed in the request
          message will be return back as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-trace-id
        in: header
        description: Client specified trace-id to track the request within their application.
          Any value passed in the request message will be return back as-is in the
          API response message.
        required: false
        schema:
          maxLength: 256
          type: string
          example: ABC123
      - name: x-client-source-channel
        in: header
        description: Client specified identifier of the channel that initiated the
          API request. Any value passed in the request message will be return back
          as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-user-id
        in: header
        description: Client specified identifier of their user** that initiated the
          API request.  Any value passed in the request message will be return back
          as-is in the API response message.<BR><BR><i>**The value passed in this
          field will not be used for any Identity and access management</i>
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: businessUnit
        in: query
        description: Unique identification number associated with the organization.
          Valid values from 1-998.
        required: false
        schema:
          maximum: 999
          maxLength: 3
          type: integer
          example: '600'
      - name: paymentInstrumentId
        in: path
        description: Unique alternate identification number associated with Payment
          Card Number.
        required: true
        schema:
          maxLength: 19
          type: string
          example: '0009544410000000047'
      responses:
        '503':
          description: " \nThe service was unavailable"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '403':
          description: " \nThe request resource is forbidden for user"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '400':
          description: " \nThe request cannot be validated"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '401':
          description: " \nThe request was unauthorized"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '422':
          description: " \nThe request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '404':
          description: " \nThe request resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '200':
          description: " \nSuccess"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InquireCardSpendStatisticV1ResponseModel'
        '500':
          description: " \nAn unexpected internal server error occurred"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '504':
          description: " \nThe request timed out while waiting for a response"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
      security:
      - Authorization: [
          ]
      x-proxy-name: Inquire Card Spend Statistics
      x-group-name: Card Management
  /v1/cards/{paymentInstrumentId}/listVisaToken:
    get:
      tags:
      - Card Management
      summary: List Visa Token
      description: This API is used to fetch token details like VTS token number,
        card wallet account id and token requestor/reference id associated with given
        payment instrument Id.
      operationId: ListVisaToken
      parameters:
      - name: Authorization
        in: header
        description: Token is used in token-based authentication to allow an application
          to access an API.
        required: true
        schema:
          type: string
          example: Bearer eyJhbGciOiJSUzI1NiJ9.eyJzY29wZSI6ImFsbCIsImNsaWVudF9pZCI6InZpc2lvbi1hcGktdXNlciIsImZpcnN0VmlzaW9uSWQiOiIwMDAwMEFVTkFCIiwiZXhwIjoxNzUwMzkyMDAwfQ.O6ZW0FnlWN09GqPeTEgWTQ9Gq6LPyt7BWTx65z7a0DKJQWBZ-pz29NX9xcuk-1ZdoLbKd_jPpwLNYGfS4KsuOLz1tQj1-teV2JO10DHxxthlG1-IGUIMyI5MivzNFlvLEG6TipqdQd3WdNl2juqlHKpDY86N0Z_Fg3n9igw4pFDzdGpHle5_4vGnl9PkYBA_WoWtgic05_63s5j6kmWbPkrV22NsHtOjJIh0sN1Q7sArecVnJCI7mwGVC5xasLGTO-Nn3hx6r8Y2mBv1Fv39LO_rUYcaK1RXS_xkoJV_3NdopGgfq4hp9F0naCKWxUxW1oaCaGCqk3p6xhkyDsJgaQ
      - name: x-client-correlation-id
        in: header
        description: Client specified identifier to correlate the request with the
          response of the API within their application. Any value passed in the request
          message will be return back as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-trace-id
        in: header
        description: Client specified trace-id to track the request within their application.
          Any value passed in the request message will be return back as-is in the
          API response message.
        required: false
        schema:
          maxLength: 256
          type: string
          example: ABC123
      - name: x-client-source-channel
        in: header
        description: Client specified identifier of the channel that initiated the
          API request. Any value passed in the request message will be return back
          as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-user-id
        in: header
        description: Client specified identifier of their user** that initiated the
          API request.  Any value passed in the request message will be return back
          as-is in the API response message.<BR><BR><i>**The value passed in this
          field will not be used for any Identity and access management</i>
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: businessUnit
        in: query
        description: Unique identification number associated with the organization.
          Valid values from 1-998.
        required: false
        schema:
          maximum: 999
          maxLength: 3
          type: integer
          example: '200'
      - name: paymentInstrumentId
        in: path
        description: Unique alternate identification number associated with Payment
          Card Number.
        required: true
        schema:
          maxLength: 19
          type: string
          example: '0009545880002462305'
      responses:
        '503':
          description: " \nThe service was unavailable"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '403':
          description: " \nThe request resource is forbidden for user"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '400':
          description: " \nThe request cannot be validated"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '401':
          description: " \nThe request was unauthorized"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '422':
          description: " \nThe request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '404':
          description: " \nThe request resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '200':
          description: " \nSuccess"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVisaTokenV1ResponseModel'
        '500':
          description: " \nAn unexpected internal server error occurred"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '504':
          description: " \nThe request timed out while waiting for a response"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
      security:
      - Authorization: [
          ]
      x-proxy-name: List Visa Token
      x-group-name: Card Management
  /v1/cards/{paymentInstrumentId}/dynamicCVV2:
    get:
      tags:
      - Card Management
      summary: Inquire dynamic CVV2
      description: This API is used to fetch encrypted dynamic CVV2 provide other
        additional details like encrypted payment card number, encrypted expiry date,
        embossed name 1, embossed name 2, dynamic CVV2 expire date and time for a
        given payment instrument Id.
      operationId: InquireDynamicCvv2
      parameters:
      - name: Authorization
        in: header
        description: Token is used in token-based authentication to allow an application
          to access an API.
        required: true
        schema:
          type: string
          example: Bearer eyJhbGciOiJSUzI1NiJ9.eyJzY29wZSI6ImFsbCIsImNsaWVudF9pZCI6InZpc2lvbi1hcGktdXNlciIsImZpcnN0VmlzaW9uSWQiOiIwMDAwMEFVTkFCIiwiZXhwIjoxNzUwMzkyMDAwfQ.O6ZW0FnlWN09GqPeTEgWTQ9Gq6LPyt7BWTx65z7a0DKJQWBZ-pz29NX9xcuk-1ZdoLbKd_jPpwLNYGfS4KsuOLz1tQj1-teV2JO10DHxxthlG1-IGUIMyI5MivzNFlvLEG6TipqdQd3WdNl2juqlHKpDY86N0Z_Fg3n9igw4pFDzdGpHle5_4vGnl9PkYBA_WoWtgic05_63s5j6kmWbPkrV22NsHtOjJIh0sN1Q7sArecVnJCI7mwGVC5xasLGTO-Nn3hx6r8Y2mBv1Fv39LO_rUYcaK1RXS_xkoJV_3NdopGgfq4hp9F0naCKWxUxW1oaCaGCqk3p6xhkyDsJgaQ
      - name: x-client-correlation-id
        in: header
        description: Client specified identifier to correlate the request with the
          response of the API within their application. Any value passed in the request
          message will be return back as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-trace-id
        in: header
        description: Client specified trace-id to track the request within their application.
          Any value passed in the request message will be return back as-is in the
          API response message.
        required: false
        schema:
          maxLength: 256
          type: string
          example: ABC123
      - name: x-client-source-channel
        in: header
        description: Client specified identifier of the channel that initiated the
          API request. Any value passed in the request message will be return back
          as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-user-id
        in: header
        description: Client specified identifier of their user** that initiated the
          API request.  Any value passed in the request message will be return back
          as-is in the API response message.<BR><BR><i>**The value passed in this
          field will not be used for any Identity and access management</i>
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: businessUnit
        in: query
        description: Unique identification number associated with the organization.
          Valid values from 1-998.
        required: false
        schema:
          maximum: 999
          maxLength: 3
          type: integer
          example: '600'
      - name: paymentInstrumentId
        in: path
        description: Unique alternate identification number associated with Payment
          Card Number.
        required: true
        schema:
          maxLength: 19
          type: string
          example: '0009846801010065787'
      responses:
        '503':
          description: " \nThe service was unavailable"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '200':
          description: " \nSuccess"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InquireDynamicCvv2V1ResponseModel'
        '403':
          description: " \nThe request resource is forbidden for user"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '400':
          description: " \nThe request cannot be validated"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '401':
          description: " \nThe request was unauthorized"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '422':
          description: " \nThe request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '404':
          description: " \nThe request resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '500':
          description: " \nAn unexpected internal server error occurred"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '504':
          description: " \nThe request timed out while waiting for a response"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
      security:
      - Authorization: [
          ]
      x-proxy-name: Inquire Dynamic CVV2
      x-group-name: Card Management
  /v1/cards/{paymentInstrumentId}/details:
    get:
      tags:
      - Card Management
      summary: Inquire Card
      description: This API is used to fetch detailed information for a given payment
        instrument Id. This API response provides information about card demographic
        and processing parameters.
      operationId: InquireCard
      parameters:
      - name: Authorization
        in: header
        description: Token is used in token-based authentication to allow an application
          to access an API.
        required: true
        schema:
          type: string
          example: Bearer eyJhbGciOiJSUzI1NiJ9.eyJzY29wZSI6ImFsbCIsImNsaWVudF9pZCI6InZpc2lvbi1hcGktdXNlciIsImZpcnN0VmlzaW9uSWQiOiIwMDAwMEFVTkFCIiwiZXhwIjoxNzUwMzkyMDAwfQ.O6ZW0FnlWN09GqPeTEgWTQ9Gq6LPyt7BWTx65z7a0DKJQWBZ-pz29NX9xcuk-1ZdoLbKd_jPpwLNYGfS4KsuOLz1tQj1-teV2JO10DHxxthlG1-IGUIMyI5MivzNFlvLEG6TipqdQd3WdNl2juqlHKpDY86N0Z_Fg3n9igw4pFDzdGpHle5_4vGnl9PkYBA_WoWtgic05_63s5j6kmWbPkrV22NsHtOjJIh0sN1Q7sArecVnJCI7mwGVC5xasLGTO-Nn3hx6r8Y2mBv1Fv39LO_rUYcaK1RXS_xkoJV_3NdopGgfq4hp9F0naCKWxUxW1oaCaGCqk3p6xhkyDsJgaQ
      - name: x-client-correlation-id
        in: header
        description: Client specified identifier to correlate the request with the
          response of the API within their application. Any value passed in the request
          message will be return back as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-trace-id
        in: header
        description: Client specified trace-id to track the request within their application.
          Any value passed in the request message will be return back as-is in the
          API response message.
        required: false
        schema:
          maxLength: 256
          type: string
          example: ABC123
      - name: x-client-source-channel
        in: header
        description: Client specified identifier of the channel that initiated the
          API request. Any value passed in the request message will be return back
          as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-user-id
        in: header
        description: Client specified identifier of their user** that initiated the
          API request.  Any value passed in the request message will be return back
          as-is in the API response message.<BR><BR><i>**The value passed in this
          field will not be used for any Identity and access management</i>
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: businessUnit
        in: query
        description: Unique identification number associated with the organization.
          Valid values from 1-998.
        required: false
        schema:
          maximum: 999
          maxLength: 3
          type: integer
          example: '600'
      - name: paymentInstrumentId
        in: path
        description: Unique alternate identification number associated with Payment
          Card Number.
        required: true
        schema:
          maxLength: 19
          type: string
          example: '0009544410000000047'
      responses:
        '503':
          description: " \nThe service was unavailable"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '403':
          description: " \nThe request resource is forbidden for user"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '400':
          description: " \nThe request cannot be validated"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '401':
          description: " \nThe request was unauthorized"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '422':
          description: " \nThe request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '200':
          description: " \nSuccess"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InquireCardV1ResponseModel'
        '404':
          description: " \nThe request resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '500':
          description: " \nAn unexpected internal server error occurred"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '504':
          description: " \nThe request timed out while waiting for a response"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
      security:
      - Authorization: [
          ]
      x-proxy-name: Inquire Card
      x-group-name: Card Management
  /v1/cards/{paymentInstrumentId}/controlDetails:
    get:
      tags:
      - Card Management
      summary: Inquire Card Controls
      description: This API is used to fetch the card control restriction flags for
        a given payment instrument Id and provide details whether the ATM, POS, ECOM
        etc transitions are enabled or disabled.
      operationId: InquireCardControls
      parameters:
      - name: Authorization
        in: header
        description: Token is used in token-based authentication to allow an application
          to access an API.
        required: true
        schema:
          maxLength: 1200
          type: string
          example: Bearer eyJhbGciOiJSUzI1NiJ9.eyJzY29wZSI6ImFsbCIsImNsaWVudF9pZCI6InZpc2lvbi1hcGktdXNlciIsImZpcnN0VmlzaW9uSWQiOiIwMDAwMEFVTkFCIiwiZXhwIjoxNzUwMzkyMDAwfQ.O6ZW0FnlWN09GqPeTEgWTQ9Gq6LPyt7BWTx65z7a0DKJQWBZ-pz29NX9xcuk-1ZdoLbKd_jPpwLNYGfS4KsuOLz1tQj1-teV2JO10DHxxthlG1-IGUIMyI5MivzNFlvLEG6TipqdQd3WdNl2juqlHKpDY86N0Z_Fg3n9igw4pFDzdGpHle5_4vGnl9PkYBA_WoWtgic05_63s5j6kmWbPkrV22NsHtOjJIh0sN1Q7sArecVnJCI7mwGVC5xasLGTO-Nn3hx6r8Y2mBv1Fv39LO_rUYcaK1RXS_xkoJV_3NdopGgfq4hp9F0naCKWxUxW1oaCaGCqk3p6xhkyDsJgaQ
      - name: x-client-correlation-id
        in: header
        description: Client specified identifier to correlate the request with the
          response of the API within their application. Any value passed in the request
          message will be return back as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-trace-id
        in: header
        description: Client specified trace-id to track the request within their application.
          Any value passed in the request message will be return back as-is in the
          API response message.
        required: false
        schema:
          maxLength: 256
          type: string
          example: ABC123
      - name: x-client-source-channel
        in: header
        description: Client specified identifier of the channel that initiated the
          API request. Any value passed in the request message will be return back
          as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-user-id
        in: header
        description: Client specified identifier of their user** that initiated the
          API request.  Any value passed in the request message will be return back
          as-is in the API response message.<BR><BR><i>**The value passed in this
          field will not be used for any Identity and access management</i>
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: businessUnit
        in: query
        description: Unique identification number associated with the organization.
          Valid values from 1-998.
        required: false
        schema:
          maximum: 999
          maxLength: 3
          type: integer
          example: '100'
      - name: paymentInstrumentId
        in: path
        description: Unique alternate identification number associated with Payment
          card number.
        required: true
        schema:
          maxLength: 19
          type: string
          example: '0009846801010434751'
      responses:
        '503':
          description: " \nThe service was unavailable"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '403':
          description: " \nThe request resource is forbidden for user"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '400':
          description: " \nThe request cannot be validated"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '401':
          description: " \nThe request was unauthorized"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '422':
          description: " \nThe request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '404':
          description: " \nThe request resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '500':
          description: " \nAn unexpected internal server error occurred"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '504':
          description: " \nThe request timed out while waiting for a response"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '200':
          description: " \nSuccess"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InquireCardControlV1ResponseModel'
      security:
      - Authorization: [
          ]
      x-proxy-name: Inquire Card Controls
      x-group-name: Card Management
  /v1/cards/{paymentInstrumentId}/clearPAN:
    get:
      tags:
      - Card Management
      summary: Fetch Clear PAN from Token PAN
      description: This API is used to fetch the encrypted payment card number for
        a given payment instrument Id.
      operationId: FetchClearPANFromTokenPAN
      parameters:
      - name: Authorization
        in: header
        description: Token is used in token-based authentication to allow an application
          to access an API.
        required: true
        schema:
          type: string
          example: Bearer eyJhbGciOiJSUzI1NiJ9.eyJzY29wZSI6ImFsbCIsImNsaWVudF9pZCI6InZpc2lvbi1hcGktdXNlciIsImZpcnN0VmlzaW9uSWQiOiIwMDAwMEFVTkFCIiwiZXhwIjoxNzUwMzkyMDAwfQ.O6ZW0FnlWN09GqPeTEgWTQ9Gq6LPyt7BWTx65z7a0DKJQWBZ-pz29NX9xcuk-1ZdoLbKd_jPpwLNYGfS4KsuOLz1tQj1-teV2JO10DHxxthlG1-IGUIMyI5MivzNFlvLEG6TipqdQd3WdNl2juqlHKpDY86N0Z_Fg3n9igw4pFDzdGpHle5_4vGnl9PkYBA_WoWtgic05_63s5j6kmWbPkrV22NsHtOjJIh0sN1Q7sArecVnJCI7mwGVC5xasLGTO-Nn3hx6r8Y2mBv1Fv39LO_rUYcaK1RXS_xkoJV_3NdopGgfq4hp9F0naCKWxUxW1oaCaGCqk3p6xhkyDsJgaQ
      - name: x-client-correlation-id
        in: header
        description: Client specified identifier to correlate the request with the
          response of the API within their application. Any value passed in the request
          message will be return back as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-trace-id
        in: header
        description: Client specified trace-id to track the request within their application.
          Any value passed in the request message will be return back as-is in the
          API response message.
        required: false
        schema:
          maxLength: 256
          type: string
          example: ABC123
      - name: x-client-source-channel
        in: header
        description: Client specified identifier of the channel that initiated the
          API request. Any value passed in the request message will be return back
          as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-user-id
        in: header
        description: Client specified identifier of their user** that initiated the
          API request.  Any value passed in the request message will be return back
          as-is in the API response message.<BR><BR><i>**The value passed in this
          field will not be used for any Identity and access management</i>
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: businessUnit
        in: query
        description: Unique identification number associated with the organization.
          Valid values from 1-998.
        required: false
        schema:
          maximum: 999
          maxLength: 3
          type: integer
          example: '100'
      - name: paymentInstrumentId
        in: path
        description: Unique alternate identification number associated with Payment
          Card Number.
        required: true
        schema:
          maxLength: 19
          type: string
          example: '0009846801010273605'
      responses:
        '503':
          description: " \nThe service was unavailable"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '403':
          description: " \nThe request resource is forbidden for user"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '400':
          description: " \nThe request cannot be validated"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '401':
          description: " \nThe request was unauthorized"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '200':
          description: " \nSuccess"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchClearPANFromTokenPANV1ResponseModel'
        '422':
          description: " \nThe request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '404':
          description: " \nThe request resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '500':
          description: " \nAn unexpected internal server error occurred"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '504':
          description: " \nThe request timed out while waiting for a response"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
      security:
      - Authorization: [
          ]
      x-proxy-name: Fetch Clear PAN from Token PAN
      x-group-name: Card Management
  /v1/cards/{encryptedPaymentCardNumber}/tokenPAN:
    get:
      tags:
      - Card Management
      summary: Fetch Token PAN from Clear PAN
      description: This API is used to fetch the payment instrument Id for a given
        payment card number in encrypted format.
      operationId: FetchTokenPANFromClearPAN
      parameters:
      - name: Authorization
        in: header
        description: Token is used in token-based authentication to allow an application
          to access an API.
        required: true
        schema:
          type: string
          example: Bearer eyJhbGciOiJSUzI1NiJ9.eyJzY29wZSI6ImFsbCIsImNsaWVudF9pZCI6InZpc2lvbi1hcGktdXNlciIsImZpcnN0VmlzaW9uSWQiOiIwMDAwMEFVTkFCIiwiZXhwIjoxNzUwMzkyMDAwfQ.O6ZW0FnlWN09GqPeTEgWTQ9Gq6LPyt7BWTx65z7a0DKJQWBZ-pz29NX9xcuk-1ZdoLbKd_jPpwLNYGfS4KsuOLz1tQj1-teV2JO10DHxxthlG1-IGUIMyI5MivzNFlvLEG6TipqdQd3WdNl2juqlHKpDY86N0Z_Fg3n9igw4pFDzdGpHle5_4vGnl9PkYBA_WoWtgic05_63s5j6kmWbPkrV22NsHtOjJIh0sN1Q7sArecVnJCI7mwGVC5xasLGTO-Nn3hx6r8Y2mBv1Fv39LO_rUYcaK1RXS_xkoJV_3NdopGgfq4hp9F0naCKWxUxW1oaCaGCqk3p6xhkyDsJgaQ
      - name: x-client-correlation-id
        in: header
        description: Client specified identifier to correlate the request with the
          response of the API within their application. Any value passed in the request
          message will be return back as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-trace-id
        in: header
        description: Client specified trace-id to track the request within their application.
          Any value passed in the request message will be return back as-is in the
          API response message.
        required: false
        schema:
          maxLength: 256
          type: string
          example: ABC123
      - name: x-client-source-channel
        in: header
        description: Client specified identifier of the channel that initiated the
          API request. Any value passed in the request message will be return back
          as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-user-id
        in: header
        description: Client specified identifier of their user** that initiated the
          API request.  Any value passed in the request message will be return back
          as-is in the API response message.<BR><BR><i>**The value passed in this
          field will not be used for any Identity and access management</i>
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: businessUnit
        in: query
        description: Unique identification number associated with the organization.
          Valid values from 1-998.
        required: true
        schema:
          maximum: 999
          maxLength: 3
          type: integer
          example: '100'
      - name: encryptedPaymentCardNumber
        in: path
        description: Unique identification number that appears on the front of the
          card (PAN) in encrypted format.
        required: true
        schema:
          maxLength: 32
          type: string
          example: 217E8A00536C7A101B055563FBF49C9A
      responses:
        '200':
          description: " \nSuccess"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchTokenPANFromClearPANV1ResponseModel'
        '503':
          description: " \nThe service was unavailable"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '403':
          description: " \nThe request resource is forbidden for user"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '400':
          description: " \nThe request cannot be validated"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '401':
          description: " \nThe request was unauthorized"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '422':
          description: " \nThe request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '404':
          description: " \nThe request resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '500':
          description: " \nAn unexpected internal server error occurred"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '504':
          description: " \nThe request timed out while waiting for a response"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
      security:
      - Authorization: [
          ]
      x-proxy-name: Fetch Token PAN from Clear PAN
      x-group-name: Card Management
  /v1/cards/{encryptedPaymentCardNumber}/customerId:
    get:
      tags:
      - Card Management
      summary: Fetch customer identification from Clear PAN
      description: This API is used to fetch customer Id for a given payment card
        number in encrypted format.
      operationId: FetchCustomerIDFromClearPAN
      parameters:
      - name: Authorization
        in: header
        description: Token is used in token-based authentication to allow an application
          to access an API.
        required: true
        schema:
          type: string
          example: Bearer eyJhbGciOiJSUzI1NiJ9.eyJzY29wZSI6ImFsbCIsImNsaWVudF9pZCI6InZpc2lvbi1hcGktdXNlciIsImZpcnN0VmlzaW9uSWQiOiIwMDAwMEFVTkFCIiwiZXhwIjoxNzUwMzkyMDAwfQ.O6ZW0FnlWN09GqPeTEgWTQ9Gq6LPyt7BWTx65z7a0DKJQWBZ-pz29NX9xcuk-1ZdoLbKd_jPpwLNYGfS4KsuOLz1tQj1-teV2JO10DHxxthlG1-IGUIMyI5MivzNFlvLEG6TipqdQd3WdNl2juqlHKpDY86N0Z_Fg3n9igw4pFDzdGpHle5_4vGnl9PkYBA_WoWtgic05_63s5j6kmWbPkrV22NsHtOjJIh0sN1Q7sArecVnJCI7mwGVC5xasLGTO-Nn3hx6r8Y2mBv1Fv39LO_rUYcaK1RXS_xkoJV_3NdopGgfq4hp9F0naCKWxUxW1oaCaGCqk3p6xhkyDsJgaQ
      - name: x-client-correlation-id
        in: header
        description: Client specified identifier to correlate the request with the
          response of the API within their application. Any value passed in the request
          message will be return back as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-trace-id
        in: header
        description: Client specified trace-id to track the request within their application.
          Any value passed in the request message will be return back as-is in the
          API response message.
        required: false
        schema:
          maxLength: 256
          type: string
          example: ABC123
      - name: x-client-source-channel
        in: header
        description: Client specified identifier of the channel that initiated the
          API request. Any value passed in the request message will be return back
          as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-user-id
        in: header
        description: Client specified identifier of their user** that initiated the
          API request.  Any value passed in the request message will be return back
          as-is in the API response message.<BR><BR><i>**The value passed in this
          field will not be used for any Identity and access management</i>
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: businessUnit
        in: query
        description: Unique identification number associated with the organization.
          Valid values from 1-998.
        required: true
        schema:
          maximum: 999
          maxLength: 3
          type: integer
          example: '100'
      - name: encryptedPaymentCardNumber
        in: path
        description: Unique identification number that appears on the front of the
          card (PAN) in encrypted format.
        required: true
        schema:
          maxLength: 32
          type: string
          example: 217E8A00536C7A101B055563FBF49C9A
      responses:
        '503':
          description: " \nThe service was unavailable"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '403':
          description: " \nThe request resource is forbidden for user"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '400':
          description: " \nThe request cannot be validated"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '401':
          description: " \nThe request was unauthorized"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '422':
          description: " \nThe request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '200':
          description: " \nSuccess"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchCustomerIDFromClearPANV1ResponseModel'
        '404':
          description: " \nThe request resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '500':
          description: " \nAn unexpected internal server error occurred"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '504':
          description: " \nThe request timed out while waiting for a response"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
      security:
      - Authorization: [
          ]
      x-proxy-name: Fetch Customer ID from Clear PAN
      x-group-name: Card Management
components:
  schemas:
    UpdateVisaTokenstatusV1ReqModel:
      required:
      - status
      - vtsTokenNumber
      type: object
      properties:
        status:
          maxLength: 1
          type: string
          description: 'This field indicate the status of token <br/>The values are:
            <br/>&nbsp; ''1'' - Deactivate <br/>&nbsp; ''2'' - Suspend<br/>&nbsp;
            ''3'' - Resume'
          example: '1'
          enum:
          - '1'
          - '2'
          - '3'
        vtsTokenNumber:
          maxLength: 19
          type: string
          description: Token number assigned by the Visa Tokenization Service(VTS).
          example: '5077400005048482515'
    UpdateVisaTokenstatusV1ResponseModel:
      type: object
      properties:
        businessUnit:
          maximum: 999
          maxLength: 3
          type: integer
          description: Unique identification number associated with the organization.
            Valid values from 1-998.
          example: '100'
        paymentInstrumentId:
          maxLength: 19
          type: string
          description: Unique alternate identification number associated with Payment
            Card Number.
          example: '0009846801010273613'
        status:
          maxLength: 1
          type: string
          description: 'This field indicate the status of token <br/>The values are:
            <br/>&nbsp; ''1'' - Deactivate<br/>&nbsp; ''2'' - Suspend<br/>&nbsp; ''3''
            - Resume'
          example: '1'
    ResponseErrorMessageInfo:
      type: object
      properties:
        errorCode:
          type: string
          example: ''
        detail:
          type: string
          example: ''
        title:
          type: string
          example: ''
        instance:
          type: string
          example: ''
        source:
          type: string
          example: ''
        status:
          type: integer
          example: '0'
        invalid-params:
          type: array
          items:
            type: string
    UpdateSpendLimitV1ReqModel:
      type: object
      properties:
        spendLimitControls:
          type: object
          properties:
            maximumAuthorizationsFrequency:
              maxLength: 1
              type: string
              description: 'Code that indicates the frequency for the maximum authorization
                parameters. <br/>The values are: <br/>&nbsp; ''0'' - Not used(default)
                <br/>&nbsp; ''1'' - Daily<br/>&nbsp; ''2'' - Cycle-to-date <br/>&nbsp;
                ''3'' - Year-to-date'
              example: '1'
              enum:
              - '0'
              - '1'
              - '2'
              - '3'
            maximumAtmCashAuthorizationsAmount:
              maxLength: 17
              type: string
              description: Maximum amount in monetary units and subunits of ATM cash
                authorizations allowed for this Embosser entity for the frequency
                defined in the FREQ field.
              example: $10000.00
            maximumAtmCashAuthorizationsCount:
              maximum: 999999999
              maxLength: 9
              type: integer
              description: Maximum number of ATM cash authorizations allowed for this
                Embosser entity for the frequency defined in the FREQ field.
              example: '1'
            maximumSingleAtmTransactionAmount:
              maxLength: 17
              type: string
              description: Maximum authorization amount in monetary units and subunits
                of a single ATM transaction allowed for this Embosser entity for the
                frequency defined in the FREQ field.
              example: $10000.00
            maximumOtcCashAuthorizationsAmount:
              maxLength: 17
              type: string
              description: Maximum amount in monetary units and subunits of OTC cash
                authorizations allowed for this Embosser entity for the frequency
                defined in the FREQ field.
              example: $20000.00
            maximumOtcAuthorizationsCount:
              maximum: 999999999
              maxLength: 9
              type: integer
              description: Maximum number of OTC authorizations allowed for this Embosser
                entity for the frequency defined in the FREQ field.
              example: '1'
            maximumSingleOtcCashAuthorizationAmount:
              maxLength: 17
              type: string
              description: Maximum amount in monetary units and subunits of OTC authorizations
                allowed for this Embosser entity for the frequency defined in the
                FREQ field.
              example: $10000.00
            maximumRetailAuthorizationsAmount:
              maxLength: 17
              type: string
              description: Maximum amount in monetary units and subunits of retail
                authorizations allowed for this Embosser entity for the frequency
                defined in the FREQ field.
              example: $10000.00
            maximumRetailAuthorizationsCount:
              maximum: 999999999
              maxLength: 9
              type: integer
              description: Maximum number of retail authorizations allowed for this
                Embosser entity for the frequency defined in the FREQ field.
              example: '1'
            maximumSingleRetailAuthorizationAmount:
              maxLength: 17
              type: string
              description: Maximum amount in monetary units and subunits of OTC authorizations
                allowed for this Embosser entity for the frequency defined in the
                FREQ field.
              example: $10000.00
    UpdateSpendLimitV1ResponseModel:
      type: object
      properties:
        businessUnit:
          maximum: 999
          maxLength: 3
          type: integer
          description: Unique identification number associated with the organization.
            Valid values from 1-998.
          example: '100'
        paymentInstrumentId:
          maxLength: 19
          type: string
          description: Unique alternate identification number associated with Payment
            Card Number.
          example: '0009846801010434272'
        spendLimitControls:
          type: object
          properties:
            maximumAuthorizationsFrequency:
              maxLength: 1
              type: string
              description: 'Code that indicates the frequency for the maximum authorization
                parameters. <br/>The values are: <br/>&nbsp; ''0'' - Not used(default)
                <br/>&nbsp; ''1'' - Daily<br/>&nbsp; ''2'' - Cycle-to-date <br/>&nbsp;
                ''3'' - Year-to-date'
              example: '1'
            maximumAtmCashAuthorizationsAmount:
              maxLength: 24
              type: string
              description: Maximum amount in monetary units and subunits of ATM cash
                authorizations allowed for this Embosser entity for the frequency
                defined in the FREQ field.
              example: $10000.00
            maximumAtmCashAuthorizationsCount:
              maximum: 999999999
              maxLength: 9
              type: integer
              description: Maximum number of ATM cash authorizations allowed for this
                Embosser entity for the frequency defined in the FREQ field.
              example: '1'
            maximumSingleAtmTransactionAmount:
              maxLength: 24
              type: string
              description: Maximum authorization amount in monetary units and subunits
                of a single ATM transaction allowed for this Embosser entity for the
                frequency defined in the FREQ field.
              example: $10000.00
            maximumOtcCashAuthorizationsAmount:
              maxLength: 24
              type: string
              description: Maximum amount in monetary units and subunits of OTC cash
                authorizations allowed for this Embosser entity for the frequency
                defined in the FREQ field.
              example: $20000.00
            maximumOtcAuthorizationsCount:
              maximum: 999999999
              maxLength: 9
              type: integer
              description: Maximum number of OTC authorizations allowed for this Embosser
                entity for the frequency defined in the FREQ field.
              example: '1'
            maximumSingleOtcCashAuthorizationAmount:
              maxLength: 24
              type: string
              description: Maximum amount in monetary units and subunits of OTC authorizations
                allowed for this Embosser entity for the frequency defined in the
                FREQ field.
              example: $10000.00
            maximumRetailAuthorizationsAmount:
              maxLength: 24
              type: string
              description: Maximum amount in monetary units and subunits of retail
                authorizations allowed for this Embosser entity for the frequency
                defined in the FREQ field.
              example: $10000.00
            maximumRetailAuthorizationsCount:
              maximum: 999999999
              maxLength: 9
              type: integer
              description: Maximum number of retail authorizations allowed for this
                Embosser entity for the frequency defined in the FREQ field.
              example: '1'
            maximumSingleRetailAuthorizationAmount:
              maxLength: 24
              type: string
              description: Maximum amount in monetary units and subunits of OTC authorizations
                allowed for this Embosser entity for the frequency defined in the
                FREQ field.
              example: $10000.00
    UpdateCardTypeV1ReqModel:
      type: object
      properties:
        cardholderType:
          maxLength: 1
          type: string
          description: Code that indicates whether the cardholder is the primary cardholder
            or an additional cardholder associated with the account. <br/>The values
            are:<br/>&nbsp; '0' - Additional cardholder<br/>&nbsp; '1' - Primary cardholder
          example: '1'
          enum:
          - '0'
          - '1'
    UpdateCardTypeV1ResponseModel:
      type: object
      properties:
        businessUnit:
          maximum: 999
          maxLength: 3
          type: integer
          description: Unique identification number associated with the organization.
            Valid values from 1-998.
          example: '100'
        paymentInstrumentId:
          maxLength: 19
          type: string
          description: Unique alternate identification number associated with Payment
            Card Number.
          example: '0009846801010273613'
        cardholderType:
          maxLength: 1
          type: string
          description: Code that indicates whether the cardholder is the primary cardholder
            or an additional cardholder associated with the account. <br/>The values
            are:<br/>&nbsp; '0' - Additional cardholder<br/>&nbsp; '1' - Primary cardholder
          example: '1'
    UpdateCardPreferenceV1ReqModel:
      type: object
      properties:
        cardholderType:
          maxLength: 1
          type: string
          description: Code that indicates whether the cardholder is the primary cardholder
            or an additional cardholder associated with the account. <br/>The values
            are:<br/>&nbsp; '0' - Additional cardholder<br/>&nbsp; '1' - Primary cardholder
          example: '1'
          enum:
          - '0'
          - '1'
        reissueDeliveryOption:
          maxLength: 3
          type: string
          description: Delivery option for reissued cards (all card actions except
            1). <br/>The values are:<br/>&nbsp; '000' - Regular mail (Default)<br/>&nbsp;
            '001' - First-class mail<br/>&nbsp; '002' - Registered mail<br/>&nbsp;
            '003' - Internal delivery mail<br/>&nbsp; '004–999' - User defined
          example: '5'
          enum:
          - 0-999
        issueDeliveryOption:
          maxLength: 3
          type: string
          description: Delivery option for new cards. <br/>The values are:<br/>&nbsp;
            '000' - Regular mail (Default)<br/>&nbsp; '001' - First-class mail<br/>&nbsp;
            '002' - Registered mail<br/>&nbsp; '003' - Internal delivery mail<br/>&nbsp;
            '004–999' - User defined
          example: '1'
          enum:
          - 0-999
        isDynamicCVV2Enabled:
          maxLength: 1
          type: string
          description: 'Code that indicates whether to enable or disable dynamic CVV2
            flag. <br/>The values are: <br/>&nbsp; ''0'' - Dynamic CVV2 disabled/CVV2
            in effect<br/>&nbsp; ''1'' - Dynamic CVV2 enabled'
          example: '0'
          enum:
          - '0'
          - '1'
        addressFields:
          type: object
          properties:
            addressLine1:
              maxLength: 40
              type: string
              description: First line of address used for mailing the card and PIN
                mailer.
              example: Shinzo abe
            addressLine2:
              maxLength: 40
              type: string
              description: Second line of address used for mailing the card and PIN
                mailer.
              example: Main
            city:
              maxLength: 30
              type: string
              description: City portion of the mailing address for cards and PIN mailers.
              example: JPN
            stateProvince:
              maxLength: 3
              type: string
              description: State or province of the mailing address for cards and
                PIN mailers.
              example: Tok
            postalCode:
              maxLength: 10
              type: string
              description: Postal code of the mailing address for cards and PIN mailers.
              example: '234226'
            addressId:
              maxLength: 15
              type: string
              description: 'Address identifier to determine the type of address. Ex:
                Home, Office, etc.'
              example: Home
    UpdateCardPreferenceV1ResponseModel:
      type: object
      properties:
        businessUnit:
          maximum: 999
          maxLength: 3
          type: integer
          description: Unique identification number associated with the organization.
            Valid values from 1-998.
          example: '100'
        paymentInstrumentId:
          maxLength: 19
          type: string
          description: Unique alternate identification number associated with Payment
            Card Number.
          example: '0009846801010273613'
        cardholderType:
          maxLength: 1
          type: string
          description: Code that indicates whether the cardholder is the primary cardholder
            or an additional cardholder associated with the account. <br/>The values
            are:<br/>&nbsp; '0' - Additional cardholder<br/>&nbsp; '1' - Primary cardholder
          example: '1'
        reissueDeliveryOption:
          maxLength: 3
          type: string
          description: Delivery option for reissued cards (all card actions except
            1). <br/>The values are:<br/>&nbsp; '000' - Regular mail (Default)<br/>&nbsp;
            '001' - First-class mail<br/>&nbsp; '002' - Registered mail<br/>&nbsp;
            '003' - Internal delivery mail<br/>&nbsp; '004–999' - User defined
          example: '5'
        issueDeliveryOption:
          maxLength: 3
          type: string
          description: Delivery option for new cards. <br/>The values are:<br/>&nbsp;
            '000' - Regular mail (Default)<br/>&nbsp; '001' - First-class mail<br/>&nbsp;
            '002' - Registered mail<br/>&nbsp; '003' - Internal delivery mail<br/>&nbsp;
            '004–999' - User defined
          example: '1'
        isDynamicCVV2Enabled:
          maxLength: 1
          type: string
          description: 'Code that indicates whether to enable or disable dynamic CVV2
            flag. <br/>The values are: <br/>&nbsp; ''0'' - Dynamic CVV2 disabled/CVV2
            in effect<br/>&nbsp; ''1'' - Dynamic CVV2 enabled'
          example: '0'
        addressFields:
          type: object
          properties:
            addressLine1:
              maxLength: 40
              type: string
              description: First line of address used for mailing the card and PIN
                mailer.
              example: Shinzo abe
            addressLine2:
              maxLength: 40
              type: string
              description: Second line of address used for mailing the card and PIN
                mailer.
              example: Main
            city:
              maxLength: 30
              type: string
              description: City portion of the mailing address for cards and PIN mailers.
              example: JPN
            stateProvince:
              maxLength: 3
              type: string
              description: State or province of the mailing address for cards and
                PIN mailers.
              example: Tok
            postalCode:
              maxLength: 10
              type: string
              description: Postal code of the mailing address for cards and PIN mailers.
              example: '234226'
            addressId:
              maxLength: 15
              type: string
              description: 'Address identifier to determine the type of address. Ex:
                Home, Office, etc.'
              example: Home
    ChangePINV1ReqModel:
      required:
      - pinChannel
      - requestedPinBlock
      type: object
      properties:
        requestedPinBlock:
          maxLength: 16
          type: string
          description: Code that indicates the requested PIN encrypted under a zone
            PIN key.
          example: 0B84D9726EF0F480
        currentPinBlock:
          maxLength: 16
          type: string
          description: Code that indicates the original PIN encrypted under a zone
            PIN key.
          example: B2AFACDD4874EC07
        pinOffset:
          maximum: 9999
          maxLength: 4
          type: integer
          description: The old PIN block should be provided, This will be old PIN
            Enter by customer.
          example: '0'
        pinChannel:
          maxLength: 1
          type: string
          description: Code that indicates the source for reporting purposes. <br/>The
            values are:<br/>&nbsp; 'A' = ATM (Automated Teller Machine) <br/>&nbsp;
            'I' = IVR (Interactive Voice Response) <br/>&nbsp; 'W' = WEB
          example: A
          enum:
          - A
          - I
          - W
          - N
        keyAssociation:
          maxLength: 3
          type: string
          description: The value will be used to read the keys stored in KMS files,from
            input we always receive spaces.
          example: ' '
        pinSetOrResetActionCode:
          maxLength: 4
          type: string
          description: This field is used to provide action code for PIN set or reset.
          example: PNRS
        pinSetOrResetMemo:
          maxLength: 60
          type: string
          description: This field is used to provide memo description for PIN set
            or reset.
          example: Set PIN
        pinTryCounterResetActionCode:
          maxLength: 4
          type: string
          description: This field is used to provide action code for PIN try counter
            reset.
          example: PNRT
        pinTryCounterResetMemo:
          maxLength: 60
          type: string
          description: This field is used to provide memo description for PIN try
            counter reset action code.
          example: PIN try counter reset
    ChangePINV1ResponseModel:
      type: object
    UpdateIssueReissueDeliveryOptionV1ReqModel:
      type: object
      properties:
        issueDeliveryOption:
          maximum: 999
          maxLength: 3
          type: integer
          description: Delivery option for new cards. <br/>The values are:<br/>&nbsp;
            '0' - Regular mail (Default)<br/>&nbsp; '1' - First-class mail<br/>&nbsp;
            '2' - Registered mail<br/>&nbsp; '3' - Internal delivery mail<br/>&nbsp;
            '4–999' - User defined
          example: '1'
        reissueDeliveryOption:
          maximum: 999
          maxLength: 3
          type: integer
          description: Delivery option for reissued cards (all card actions except
            1). <br/>The values are:<br/>&nbsp; '0' - Regular mail (Default)<br/>&nbsp;
            '1' - First-class mail<br/>&nbsp; '2' - Registered mail<br/>&nbsp; '3'
            - Internal delivery mail<br/>&nbsp; '4–999' - User defined
          example: '5'
    UpdateIssueReissueDeliveryOptionV1ResponseModel:
      type: object
      properties:
        businessUnit:
          maximum: 999
          maxLength: 3
          type: integer
          description: Unique identification number associated with the organization.
            Valid values from 1-998.
          example: '600'
        paymentInstrumentId:
          maxLength: 19
          type: string
          description: Unique alternate identification number associated with Payment
            Card Number.
          example: '0009544410000000047'
        issueDeliveryOption:
          maximum: 999
          maxLength: 3
          type: integer
          description: Delivery option for new cards. <br/>The values are:<br/>&nbsp;
            '0' - Regular mail (Default)<br/>&nbsp; '1' - First-class mail<br/>&nbsp;
            '2' - Registered mail<br/>&nbsp; '3' - Internal delivery mail<br/>&nbsp;
            '4–999' - User defined
          example: '1'
        reissueDeliveryOption:
          maximum: 999
          maxLength: 3
          type: integer
          description: Delivery option for reissued cards (all card actions except
            1). <br/>The values are:<br/>&nbsp; '0' - Regular mail (Default)<br/>&nbsp;
            '1' - First-class mail<br/>&nbsp; '2' - Registered mail<br/>&nbsp; '3'
            - Internal delivery mail<br/>&nbsp; '4–999' - User defined
          example: '5'
    UpdateCardControlV1ReqModel:
      type: object
      properties:
        isPosEnabled:
          maxLength: 1
          type: string
          description: This is to enable or disable a POS based transaction for a
            cardholder. <br/>The values are:<br/> &nbsp; 'Y' - POS transactions Allowed
            <br/> &nbsp; 'N' - POS transactions not Allowed
          example: N
          enum:
          - N
          - Y
        isAtmEnabled:
          maxLength: 1
          type: string
          description: This is to enable or disable a ATM based transaction for a
            cardholder. <br/>The values are:<br/> &nbsp; 'Y' - ATM transactions Allowed
            <br/> &nbsp; 'N' - ATM transactions not Allowed
          example: Y
          enum:
          - N
          - Y
        isPayWaveEnabled:
          maxLength: 1
          type: string
          description: This is to enable or disable a Contactless or Paywave based
            transaction for a cardholder. <br/>The values are:<br/> &nbsp; 'Y' - PayWave
            transactions Allowed <br/> &nbsp; 'N' - PayWave transactions not Allowed
          example: N
          enum:
          - Y
          - N
        isInternationalAtmPosEnabled:
          maxLength: 1
          type: string
          description: This is to enable or disable an international ATM or POS  based
            transaction for a cardholder. <br/>The values are:<br/> &nbsp; 'Y' - International
            ATM or POS transactions Allowed <br/> &nbsp; 'N' - International ATM or
            POS transactions not Allowed
          example: Y
          enum:
          - Y
          - N
        isCashBackEnabled:
          maxLength: 1
          type: string
          description: This is to enable or disable cashback at POS  transaction for
            a cardholder. <br/>The values are:<br/> &nbsp; 'Y' - Cash Back transactions
            Allowed <br/> &nbsp; 'N' - Cash Back transactions not Allowed
          example: Y
          enum:
          - Y
          - N
        isEcomEnabled:
          maximum: 9
          maxLength: 1
          type: integer
          description: This is to enable or disable  ECOMM based transaction for a
            cardholder. <br/>The values are:<br/> &nbsp; '1' - ECOMM transactions
            Allowed <br/> &nbsp; '0' - ECOMM transactions not Allowed
          example: '0'
          enum:
          - 0
          - 1
        isMotoEnabled:
          maxLength: 1
          type: string
          description: This is to enable or disable a Mobile based transaction for
            a cardholder. <br/>The values are:<br/> &nbsp; 'Y' - MOTO transactions
            Allowed <br/> &nbsp; 'N' - MOTO transactions not Allowed
          example: Y
          enum:
          - Y
          - N
    UpdateCardControlV1ResponseModel:
      type: object
      properties:
        businessUnit:
          maximum: 999
          maxLength: 3
          type: integer
          description: Unique identification number associated with the organization.
            Valid values from 1-998.
          example: '100'
        paymentInstrumentId:
          maxLength: 19
          type: string
          description: Unique alternate identification number associated with Payment
            Card Number.
          example: '0009846801010434751'
        isPosEnabled:
          maxLength: 1
          type: string
          description: This is to enable or disable a POS based transaction for a
            cardholder. <br/>The values are:<br/> &nbsp; 'Y' - POS transactions Allowed
            <br/> &nbsp; 'N' - POS transactions not Allowed
          example: N
        isAtmEnabled:
          maxLength: 1
          type: string
          description: This is to enable or disable a ATM based transaction for a
            cardholder. <br/>The values are:<br/> &nbsp; 'Y' - ATM transactions Allowed
            <br/> &nbsp; 'N' - ATM transactions not Allowed
          example: Y
        isPayWaveEnabled:
          maxLength: 1
          type: string
          description: This is to enable or disable a Contactless or Paywave based
            transaction for a cardholder. <br/>The values are:<br/> &nbsp; 'Y' - PayWave
            transactions Allowed <br/> &nbsp; 'N' - PayWave transactions not Allowed
          example: N
        isInternationalAtmPosEnabled:
          maxLength: 1
          type: string
          description: This is to enable or disable an international ATM or POS  based
            transaction for a cardholder. <br/>The values are:<br/> &nbsp; 'Y' - International
            ATM or POS transactions Allowed <br/> &nbsp; 'N' - International ATM or
            POS transactions not Allowed
          example: Y
        isCashBackEnabled:
          maxLength: 1
          type: string
          description: This is to enable or disable cashback at POS  transaction for
            a cardholder. <br/>The values are:<br/> &nbsp; 'Y' - Cash Back transactions
            Allowed <br/> &nbsp; 'N' - Cash Back transactions not Allowed
          example: Y
        isEcomEnabled:
          maximum: 9
          maxLength: 1
          type: integer
          description: This is to enable or disable  ECOMM based transaction for a
            cardholder. <br/>The values are:<br/> &nbsp; '1' - ECOMM transactions
            Allowed <br/> &nbsp; '0' - ECOMM transactions not Allowed
          example: '0'
        isMotoEnabled:
          maxLength: 1
          type: string
          description: This is to enable or disable a Mobile based transaction for
            a cardholder. <br/>The values are:<br/> &nbsp; 'Y' - MOTO transactions
            Allowed <br/> &nbsp; 'N' - MOTO transactions not Allowed
          example: Y
    BlockUnblockCardV1ReqModel:
      type: object
      properties:
        blockCode:
          maxLength: 1
          type: string
          description: The block code assigned to the Embosser entity, Block code
            values can be be A- Z or SPACES.
          example: X
          enum:
          - A
          - B
          - C
          - D
          - E
          - F
          - G
          - H
          - I
          - J
          - K
          - L
          - M
          - N
          - O
          - P
          - Q
          - R
          - S
          - T
          - U
          - V
          - W
          - X
          - Y
          - Z
          - ' '
        warningCode1:
          maxLength: 1
          type: string
          description: This field determine whether to authorize or decline authorizations
            for this card. <br/>The values are:<br/> &nbsp; '0' or ' ' - Normal authorizations
            (Default) <br/> &nbsp; '1' - Decline <br/> &nbsp; '2' - Decline and pick
            up <br/> &nbsp; '3' - Decline and pick up for fraud or lost/stolen card
            <br/> &nbsp; '4' - Decline with referral <br/> &nbsp; '6' - Decline for
            suspected fraud <br/> &nbsp; '8' - Decline with a user exit <br/> &nbsp;
            '9' - VIP account, always approve
          example: '1'
          enum:
          - '0'
          - ' '
          - '1'
          - '2'
          - '3'
          - '4'
          - '6'
          - '8'
          - '9'
    BlockUnblockCardV1ResponseModel:
      type: object
      properties:
        businessUnit:
          maximum: 999
          maxLength: 3
          type: integer
          description: Unique identification number associated with the organization.
            Valid values from 1-998.
          example: '100'
        paymentInstrumentId:
          maxLength: 19
          type: string
          description: Unique alternate identification number associated with Payment
            card number.
          example: '0009846801010273605'
        blockCode:
          maxLength: 1
          type: string
          description: The block code assigned to the Embosser entity, Block code
            values can be be A- Z or SPACES.
          example: X
        warningCode1:
          maxLength: 1
          type: string
          description: This field determine whether to authorize or decline authorizations
            for this card. <br/>The values are:<br/> &nbsp; '0' or ' ' - Normal authorizations
            (Default) <br/> &nbsp; '1' - Decline <br/> &nbsp; '2' - Decline and pick
            up <br/> &nbsp; '3' - Decline and pick up for fraud or lost/stolen card
            <br/> &nbsp; '4' - Decline with referral <br/> &nbsp; '6' - Decline for
            suspected fraud <br/> &nbsp; '8' - Decline with a user exit <br/> &nbsp;
            '9' - VIP account, always approve
          example: '1'
        blockDate:
          maxLength: 10
          type: string
          description: The date on which card is blocked. The format is MM/DD/YYYY
            or DD/MM/YYYY depending on the DATE FORMAT on System Control.
          example: 01/03/2020
    UpdateCardAddressIdV1ReqModel:
      type: object
      properties:
        addressId:
          maxLength: 15
          type: string
          description: 'Address identifier to determine the type of address. Ex: Home,
            Office, etc.'
          example: HOME
    UpdateCardAddressIdV1ResponseModel:
      type: object
      properties:
        businessUnit:
          maximum: 999
          maxLength: 3
          type: integer
          description: Unique identification number associated with the organization.
            Valid values from 1-998.
          example: '600'
        paymentInstrumentId:
          maxLength: 19
          type: string
          description: Unique alternate identification number associated with Payment
            Card Number.
          example: '0004440010000000017'
        addressId:
          maxLength: 15
          type: string
          description: 'Address identifier to determine the type of address. Ex: Home,
            Office, etc.'
          example: HOME
        customerId:
          maxLength: 19
          type: string
          description: Unique identification number assigned to a customer.
          example: '0000000001000000032'
    ActivateCardV1ReqModel:
      type: object
      properties:
        currentCardNeedActivation:
          maxLength: 1
          type: string
          description: This field indicates whether card activation needs to occur
            for the most recently issued card. <br/>The values are:<br/>&nbsp; 'N'
            - No card activation is required or card activation has already occurred<br/>&nbsp;
            'Y' - Card activation needs to occur
          example: N
          enum:
          - Y
          - N
        deactivateOldCard:
          maxLength: 1
          type: string
          description: This field indicates whether card activation needs to occur
            for the previously issued card. <br/>The values are:<br/>&nbsp; 'Y' -
            Deactivate Old Card
          example: Y
          enum:
          - Y
    ActivateCardV1ResponseModel:
      type: object
      properties:
        businessUnit:
          maximum: 999
          maxLength: 3
          type: integer
          description: Unique identification number associated with the organization.
            Valid values from 1-998.
          example: '100'
        paymentInstrumentId:
          maxLength: 19
          type: string
          description: Unique alternate identification number associated with Payment
            Card Number.
          example: '0009846801010273613'
        currentCardNeedActivation:
          maxLength: 1
          type: string
          description: This field indicates whether card activation needs to occur
            for the most recently issued card. <br/>The values are:<br/>&nbsp; 'N'
            - No card activation is required or card activation has already occurred<br/>&nbsp;
            'Y' - Card activation needs to occur
          example: N
        deactivateOldCard:
          maxLength: 1
          type: string
          description: This field indicates whether card activation needs to occur
            for the previously issued card. <br/>The values are:<br/>&nbsp; 'Y' -
            Deactivate Old Card
          example: Y
        cardActivatedDate:
          maxLength: 10
          type: string
          description: Date on which the card is activated. This date is systemgenerated,
            The format is MM/DD/YYYY or DD/MM/YYYY depending on the DATE FORMAT on
            System Control.
          example: 03/01/2020
    UpdateCardActionV1ReqModel:
      type: object
      properties:
        cardAction:
          maximum: 9
          maxLength: 1
          type: integer
          description: This field is the card issue action code that determines the
            action CMS performs during the next run. <br/>The values are:<br/> &nbsp;
            '0' - No action. No cards requested <br/> &nbsp; '1' - Issue new card(s).
            If applicable, also issue a PIN mailer <br/> &nbsp; '2' - Issue additional
            card(s). Value 2 is not valid for smart cards <br/> &nbsp; '3' - Issue
            replacement card(s) <br/> &nbsp; '4' - Returned cards <br/> &nbsp; '5'
            - Produce a new PIN mailer <br/> &nbsp; '6' - Issue emergency replacement
            card(s). Use this value if a card is lost or stolen and the replacement
            card is to be embossed and mailed within 24 hour <br/> &nbsp; '7' - Reissue
            card <br/> &nbsp; '8' - Reissue card with different card numbering scheme
            (CNS) <br/> &nbsp; '9' - Card technology reissue
          example: '1'
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
    UpdateCardActionV1ResponseModel:
      type: object
      properties:
        businessUnit:
          maximum: 999
          maxLength: 3
          type: integer
          description: Unique identification number associated with the organization.
            Valid values from 1-998.
          example: '600'
        paymentInstrumentId:
          maxLength: 19
          type: string
          description: Unique alternate identification number associated with Payment
            Card Number.
          example: '0009544410000000021'
        cardAction:
          maximum: 9
          maxLength: 1
          type: integer
          description: This field is the card issue action code that determines the
            action CMS performs during the next run. <br/>The values are:<br/> &nbsp;
            '0' - No action. No cards requested <br/> &nbsp; '1' - Issue new card(s).
            If applicable, also issue a PIN mailer <br/> &nbsp; '2' - Issue additional
            card(s). Value 2 is not valid for smart cards <br/> &nbsp; '3' - Issue
            replacement card(s) <br/> &nbsp; '4' - Returned cards <br/> &nbsp; '5'
            - Produce a new PIN mailer <br/> &nbsp; '6' - Issue emergency replacement
            card(s). Use this value if a card is lost or stolen and the replacement
            card is to be embossed and mailed within 24 hour <br/> &nbsp; '7' - Reissue
            card <br/> &nbsp; '8' - Reissue card with different card numbering scheme
            (CNS) <br/> &nbsp; '9' - Card technology reissue
          example: '1'
        lastCardAction:
          maxLength: 1
          type: string
          description: Last action performed on card. <br/>The values are:<br/>&nbsp;
            '0' - No action<br/>&nbsp; '1' - Issue new card(s)<br/>&nbsp; '2' - Issue
            additional card(s)<br/>&nbsp; '3' - Issue replacement card(s)<br/>&nbsp;
            '4' - Returned cards<br/>&nbsp; '6' - Issue emergency replacement card(s)<br/>&nbsp;
            '7' - Reissue card <br/>&nbsp; '8' - Reissue card with different card
            numbering scheme (CNS) <br/>&nbsp; '9' - Card technology reissue
          example: '1'
        cardActionDate:
          maxLength: 10
          type: string
          description: Date on which the card action was changed.The format is MM/DD/YYYY
            or DD/MM/YYYY depending on the DATE FORMAT on System Control.
          example: 12/04/2022
    GenerateDynamicCVV2V1ReqModel:
      type: object
      properties:
        keyAssociation:
          maxLength: 3
          type: string
          description: Association used to reference keys that are shared with an
            external association such as a card bureau, Visa, or MasterCard.
          example: NUI
    GenerateDynamicCVV2V1ResponseModel:
      type: object
      properties:
        encryptedPaymentCardNumber:
          maxLength: 32
          type: string
          description: Unique identification number that appears on the front of the
            card (PAN) in encrypted format.
          example: 217E8A00536C7A101B055563FBF49C9A
        encryptedDynamicCVV2:
          maxLength: 16
          type: string
          description: Encrypted dynamic CVV2.
          example: C8FB47CB632D1D16
        encryptedCardExpiryDate:
          maxLength: 16
          type: string
          description: Card expiry date (MMYY) in encrypted format.
          example: 6D259F94D6096444
        embossedName1:
          maxLength: 26
          type: string
          description: Name embossed on the first embossing line of the card.
          example: 'John Brono '
        embossedName2:
          maxLength: 26
          type: string
          description: This is the Additional name to be embossed on the second embossing
            line of the card.
          example: Samuel Baro
        dynamicCVV2ExpiryDateTime:
          maxLength: 19
          type: string
          description: Dynamic CVV2 expiry date and time.
          example: 27/07/2022 16:00:23
    CardSecureCodeV1ReqModel:
      required:
      - CVV2
      - expiryDate
      - paymentInstrumentId
      type: object
      properties:
        businessUnit:
          maximum: 999
          maxLength: 3
          type: integer
          description: Unique identification number associated with the organization.
            Valid values from 1-998.
          example: '100'
        paymentInstrumentId:
          maxLength: 19
          type: string
          description: Unique alternate identification number associated with Payment
            Card Number.
          example: '0009846801010065787'
        CVV2:
          maxLength: 3
          type: string
          description: Security code assigned to the payment Instrument id.
          example: '855'
        expiryDate:
          maxLength: 4
          type: string
          description: Valid card expire date should be provided which is of 4 character
            with MMYY format.
          example: '1123'
    CardSecureCodeV1ResponseModel:
      type: object
    TransferLostStolenCardV1ReqModel:
      required:
      - accountId
      - blockCode
      - cardReplacementIndicator
      - paymentInstrumentId
      - productId
      type: object
      properties:
        businessUnit:
          maximum: 999
          maxLength: 3
          type: integer
          description: Unique identification number associated with the organization.
            Valid values from 1-998.
          example: '600'
        paymentInstrumentId:
          maxLength: 19
          type: string
          description: Unique alternate identification number associated with Payment
            card number.
          example: '0009544401000009195'
        accountId:
          maxLength: 19
          type: string
          description: Unique identification number for cardholder billing account.
          example: '0006000011000000178'
        productId:
          maximum: 999
          maxLength: 3
          type: integer
          description: Unique identification number of the product associated with
            the organization. Valid values from 1-998.
          example: '1'
        cardReplacementIndicator:
          maxLength: 1
          type: string
          description: Code that indicates whether CMS replaces the transfer card
            by generating a new Embosser entity on the original account. <br/>The
            values are:<br/>&nbsp; '0' - Replace lost/stolen/fraud card (Default)
            <br/>&nbsp; '1' - Do not replace lost/stolen/fraud card
          example: '0'
          enum:
          - '0'
          - '1'
        blockCode:
          maxLength: 1
          type: string
          description: Block code to apply to the transfer card. The values A to Z.
          example: L
          enum:
          - A
          - B
          - C
          - D
          - E
          - F
          - G
          - H
          - I
          - J
          - K
          - L
          - M
          - N
          - O
          - P
          - Q
          - R
          - S
          - T
          - U
          - V
          - W
          - X
          - Y
          - Z
        startDate:
          maxLength: 10
          type: string
          description: The date when the service was called. The format is MM/DD/YYYY
            or DD/MM/YYYY depending DATE FORMAT on System Control.
          example: 00/00/0000
        transferToAccountId:
          maxLength: 19
          type: string
          description: Number of the account to which you want to transfer the card.
            You can enter a specific account identification or enter a slash (/) if
            the auto-generation functionality is active for account.
          example: ' '
        transferToCustomerId:
          maxLength: 19
          type: string
          description: Number that identifies the Customer Name/Address entity associated
            with the transfer-to account If you are transferring the card to an existing
            account do not make an entry in the CUSTOMER field CMS uses the customer
            id associated with the existing account.
          example: ' '
        effectiveDate:
          maxLength: 10
          type: string
          description: Date that the fraud card transfer is effective The value must
            be a date less than or equal to today’s dateThe default value is today’s
            date. If you enter a future date The system will abend. The format is
            MM/DD/YYYY or DD/MM/YYYY depending on the DATE FORMAT on System Control.
          example: 00/00/0000
        processType:
          maximum: 9
          maxLength: 1
          type: integer
          description: Code that indicates whether CMS processes the card replacement
            during the nightly batch processing cycle or in the same-day embossing
            processing cycle. <br/>The values are:<br/>&nbsp; '0' - Same-day plastic
            processing is not required <br/>&nbsp; '1' - Same-day plastic processing
            is required
          example: '0'
          enum:
          - 0
          - 1
        pinTransferIndicator:
          maxLength: 1
          type: string
          description: This flag drives PIN transfer functionality. <br/>The values
            are:<br/>&nbsp; 'N' - Do not transfer PIN <br/>&nbsp; 'Y' - Transfer PIN
          example: N
          enum:
          - N
          - Y
        cardTransferActionCode:
          maxLength: 4
          type: string
          description: This field is used to provide the action code for card transfer.
          example: CRTR
        cardTransferMemo:
          maxLength: 60
          type: string
          description: This field is used to provide the memo description for card
            transfer.
          example: Card transfer memo
        pinTransferActionCode:
          maxLength: 4
          type: string
          description: This field is used to provide the action code for PIN transfer.
          example: PNTR
        pinTransferMemo:
          maxLength: 60
          type: string
          description: This field is used to provide the memo description for PIN
            transfer.
          example: PIN transfer memo
    TransferLostStolenCardV1ResponseModel:
      type: object
      properties:
        maskedPaymentCardNumber:
          maxLength: 19
          type: string
          description: The clear card number will be masked with XXXX from 9 digit
            to 15th digit.
          example: 0009544401XXXXX9208
        newPaymentInstrumentId:
          maxLength: 19
          type: string
          description: Unique alternate identification number associated with Payment
            card number.
          example: '0009544401000009208'
        transferToAccountId:
          maxLength: 19
          type: string
          description: Unique identification number for cardholder billing account.
          example: ' '
        transferToCustomerId:
          maxLength: 19
          type: string
          description: Unique identification number assigned to a customer.
          example: ' '
        effectiveDate:
          maxLength: 10
          type: string
          description: Date that the fraud card transfer is effective. The format
            is MM/DD/YYYY or DD/MM/YYYY depending on the DATE FORMAT on System Control.
          example: 19/08/2021
    GooglePaySamsungPayPushProvisioningV1ReqModel:
      required:
      - clientAppID
      - clientDeviceID
      - clientWalletAccountID
      - clientWalletProvider
      - paymentInstrumentId
      - walletProvider
      type: object
      properties:
        businessUnit:
          maximum: 999
          maxLength: 3
          type: integer
          description: Unique identification number associated with the organization.
            Valid values from 1-998.
          example: '100'
        paymentInstrumentId:
          maxLength: 19
          type: string
          description: Unique alternate identification number associated with Payment
            Card Number.
          example: '0009644706050000069'
        isIDnV:
          maxLength: 5
          type: string
          description: Specifies if the Issuer wants ID&V to be performed.
          example: 'true'
          enum:
          - 'true'
          - 'false'
        clientAppID:
          maxLength: 32
          type: string
          description: Unique identifier for the client application.
          example: myAppID
        clientDeviceID:
          maxLength: 32
          type: string
          description: Stable device identification set by Wallet Provider.
          example: ed6abb56323ba656521ac476
        clientWalletProvider:
          maxLength: 32
          type: string
          description: Client wallet provider is the token requestor’s ID(TRID).
          example: '40000000047'
        clientWalletAccountID:
          maxLength: 32
          type: string
          description: Client provided consumer ID that identifies the Wallet account
            holder entity.
          example: a3-xLSOCatGskD6LRxNuvZG7
        alg:
          maxLength: 9
          type: string
          description: Identifies the encryption algorithm used to encrypt the Content
            Encryption Key (CEK) in the response.
          example: A256GCMKW
        enc:
          maxLength: 7
          type: string
          description: Identifies the  content encryption algorithm used to perform
            authenticated encryption on the Plaintext to produce the Ciphertext and
            the Authentication Tag, in the response.
          example: A256GCM
        typ:
          maxLength: 5
          type: string
          description: Identifies the MediaType of the complete JWE token created.
          example: JOSE
        walletProvider:
          maxLength: 32
          type: string
          description: Identifies the wallet (Google Pay / Samsung Pay), the payment
            card is going to be provisioned.
          example: GOOGLE
        intent:
          maxLength: 19
          type: string
          description: The intent of the encryptor.
          example: PUSH_PROV_MOBILE
    GooglePayEncResponseModel:
      type: object
      properties:
        vtsToken:
          maxLength: 1200
          type: string
          description: 'This field is a JWE compact serialized token.<br/> The token''s
            plain text contains following fields.<br/>&nbsp; • accountNumber : Unique
            identification number that appears on the front of the card (PAN).<br/>&nbsp;
            • clientAppID : Unique identifier for the client application.<br/>&nbsp;
            • clientDeviceID : Stable device identification set by Wallet Provider.
            <br/>&nbsp; • clientWalletProvider : Client wallet provider is the token
            requestor’s ID(TRID).<br/>&nbsp; • clientWalletAccountID : Client provided
            consumer ID that identifies the Wallet account holder entity.<br/>&nbsp;
            • intent : The intent of the encryptor.<br/>&nbsp; • isIDnV : Specifies
            if the Issuer wants ID&V to be performed. <br/>&nbsp; • country : Code
            of country associated with the address.<br/>&nbsp; • month : Expiry month
            of card issued to customer.<br/>&nbsp; • year: Expiry Year of card issued
            to customer.'
          example: eyJraWQiOiJBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWkFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXIiwiYWxnIjoiQTI1NkdDTUtXIiwiZW5jIjoiQTI1NkdDTSIsInR5cCI6IkpPU0UiLCJjaGFubmVsU2VjdXJpdHlDb250ZXh0IjoiU0hBUkVEX1NFQ1JFVCIsImlhdCI6IjE2NzUxNDk0MDAiLCJpdiI6IndrdnctekVXMUFvLXc1X0ciLCJ0YWciOiJpVUxLNlR4LUdhWTJ5ekUwa2Z2cHRRIn0.OnviL_n18aFKDdW-X8cdZNLBdtsRvx2cz0A3mDVrHrg.YW1GMllYZ3VZM0o1Y0hSdkxuTndaV011U1haUVlYSmhiV1YwWlhKVGNHVmpRREZrTkRjMU5tRXo.uEqMOL_53OTA8KSbyXTZ1s7Cy8I76OVQvk1zxGS3HHDMOuq41CrQyuigW0NLEJPviNALFwCPj55nA8tEja66yf1m3Y9XFLmSsZ40P47aQJ5qxfYC88Y29cOWcdplBMRI4DcodneKCsbyhaWKIifbQpt2nct9qW6RUDFnQ9GVWO-sXmSrWzEhO7y7tcAJ4gWnbhbEG62yZEp_rzjN7lxvQoHOZU3_YpHpqLKfJrBQBp2_rO6Q4ceTrngi8Q0U5WmT5Gn1ddwWEzwGrCdy31w5jwpAVPJBzquHmSSnQlyRvFmpkpQxt5tRo7a5DwZc7WWMvyjWA4-1x-TevCI4A4qAyj9art4d1ktj3CWG-mmWm9wK8qTtLg5qqRfewiiJVJvNrmdkNonPEBqCg8RLxjz1dl-JrA88PH1chsw.rKf95hITqMpUOyvYEC-kIw
    BoardCardV1ReqModel:
      required:
      - accountId
      - businessUnit
      - cardAction
      - customerId
      - productId
      type: object
      properties:
        accountId:
          maxLength: 19
          type: string
          description: Unique identification number for cardholder billing account.
          example: '0006000012000000263'
        businessUnit:
          maximum: 999
          maxLength: 3
          type: integer
          description: Unique identification number associated with the organization.
            Valid values from 1-998.
          example: '600'
        productId:
          maximum: 999
          maxLength: 3
          type: integer
          description: Unique identification number of the product associated with
            the organization. Valid values from 1-998.
          example: '1'
        customerId:
          maxLength: 19
          type: string
          description: Unique identification number assigned to a customer.
          example: '0006000012000000256'
        cardAction:
          maxLength: 1
          type: string
          description: This field is the card issue action code that determines the
            action CMS performs during the next run. <br/>The values are:<br/> &nbsp;
            '0' - No action. No cards requested <br/> &nbsp; '1' - Issue new card(s).
            If applicable, also issue a PIN mailer <br/> &nbsp; '2' - Issue additional
            card(s). Value 2 is not valid for smart cards <br/> &nbsp; '3' - Issue
            replacement card(s) <br/> &nbsp; '4' - Returned cards <br/> &nbsp; '5'
            - Produce a new PIN mailer <br/> &nbsp; '6' - Issue emergency replacement
            card(s). Use this value if a card is lost or stolen and the replacement
            card is to be embossed and mailed within 24 hour <br/> &nbsp; '7' - Reissue
            card <br/> &nbsp; '8' - Reissue card with different card numbering scheme
            (CNS) <br/> &nbsp; '9' - Card technology reissue
          example: '1'
          enum:
          - '0'
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
        numberOfCardsRequested:
          maximum: 99
          maxLength: 2
          type: integer
          description: This field identifies the number of cards required. You must
            enter a value when the card issue CARD ACTION is 1 (new card), 2 (additional
            card), 3 (replacement card), or 6 (emergency replacement card). The default
            is 01.
          example: '0'
        cardType:
          maximum: 99
          maxLength: 2
          type: integer
          description: This field is a user-defined code that indicates the type of
            plastic stock. You can change the value at the Embosser entity level as
            needed.
          example: '0'
        requestedCardType:
          maximum: 99
          maxLength: 2
          type: integer
          description: This field is a user-defined code that identifies the type
            of card requested.
          example: '0'
        cardMailerType:
          maximum: 99
          maxLength: 2
          type: integer
          description: This field is a user-defined code that identifies the type
            of card  mailer to use to mail the card.
          example: '0'
        plasticId:
          maxLength: 10
          type: string
          description: User-defined code that identifies the plastic stock used to
            create a card for this Embosser record.
          example: ' '
        name1TypeIndicator:
          maxLength: 1
          type: string
          description: This field identifies the type of name for NAME LINE 1. This
            field displays only for prepaid cards. <br/>The values are:<br/> &nbsp;
            '0' - Personal name (Default) <br/> &nbsp; '3' - Generic name
          example: '0'
          enum:
          - '0'
          - '3'
        name2TypeIndicator:
          maxLength: 1
          type: string
          description: This field identifies the type of name for NAME LINE 2. This
            field displays only for prepaid cards. <br/>The values are:<br/> &nbsp;
            '0' - Personal name (Default) <br/> &nbsp; '3' - Generic name
          example: '0'
          enum:
          - '0'
          - '3'
        posServiceCode:
          maximum: 999
          maxLength: 3
          type: integer
          description: This field indicates the type of point-of-sale service in effect
            for a card.
          example: '0'
        cardholderFlag:
          maxLength: 1
          type: string
          description: This is the code that indicates whether the card is issued
            as a primary or secondary card. <br/>The values are:<br/> &nbsp; '0' -
            Additional<br/> &nbsp; '1' - Primary
          example: '0'
          enum:
          - '1'
          - '0'
        visaMiniCardVersion:
          maxLength: 1
          type: string
          description: Code that indicates the version of Visa Mini card. <br/>The
            values are:<br/> &nbsp; '0' - None <br/> &nbsp; '1' - Standalone <br/>
            &nbsp; '2' - Companion
          example: '0'
          enum:
          - '0'
          - '1'
          - '2'
        programId:
          maximum: 9
          maxLength: 1
          type: integer
          description: This is the identification number of the smart card program.
          example: '0'
        mobileDeviceId:
          maxLength: 20
          type: string
          description: Identification of the mobile device associated with a mobile
            payment instrument (PI) embosser.
          example: '12343'
        mobileProvisionStatus:
          maxLength: 1
          type: string
          description: This flag indicates whether the embosser is for a mobile payment
            instrument (PI) and the current provisioning status for the PI. <br/>The
            values are:<br/> &nbsp; '0' - Not applicable; not a mobile PI (Default)
            <br/> &nbsp; '1' - Mobile PI is ready to be provisioned <br/> &nbsp; '2'
            - Mobile PI provisioning is complete <br/> &nbsp; '3' - Previous provisioning
            of the mobile PI was unsuccessful <br/> &nbsp; '4' - Previously provisioned
            mobile PI is removed and cannot be provisioned; the embosser is inactive.
            For example, this value can be set when the embosser is transferred for
            fraud
          example: '0'
          enum:
          - '0'
          - '1'
          - '2'
          - '3'
          - '4'
        deviceIndicator:
          maxLength: 1
          type: string
          description: 'Code that indicates the type of device (form factor) written
            to the track data on the card. <br/>The MasterCard values are:<br/> &nbsp;
            '' '' - Default <br/> &nbsp; ''1'' - Chip only with PIN <br/> &nbsp; ''2''
            - Chip only without PIN <br/> &nbsp; ''3'' - Magnetic stripe only <br/>
            &nbsp; ''4'' - PayPass only <br/> &nbsp; ''A'' - Chip with PIN and magnetic
            stripe only <br/> &nbsp; ''B'' - Chip with PIN and PayPass only <br/>
            &nbsp; ''C'' - Chip with PIN and magnetic stripe and PayPass <br/> &nbsp;
            ''D'' - Chip without PIN and with magnetic stripe <br/> &nbsp; ''E'' -
            Chip without PIN and with PayPass <br/> &nbsp; ''F'' - Chip without PIN
            and with magnetic <br/> &nbsp; ''G'' - Magnetic stripe only with PIN.
            <br/> The Visa values are: <br/> &nbsp; ''0'' - Full-size standard card,
            noncontactless (Default) <br/> &nbsp; ''1'' - Full-size contactless card
            <br/> &nbsp; ''2'' - Standard mini card, noncontactless <br/> &nbsp; ''3''
            - Contactless mini card <br/> &nbsp; ''4'' - Micro tag <br/> &nbsp; ''5''
            - Mobile device <br/> &nbsp; ''6'' - Other contactless payment device
            <br/> &nbsp; ''7'' to ''9'' - Reserved'
          example: '0'
          enum:
          - ' '
          - '0'
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - A
          - B
          - C
          - D
          - E
          - F
          - G
        mccGroupLimits:
          maxLength: 11
          type: string
          description: Merchat Limit
          example: ' '
        chequeAccountId:
          maxLength: 17
          type: string
          description: Checking Account associated with the card (Debit Card Only).
          example: ' '
        savingsAccountId:
          maxLength: 17
          type: string
          description: Customer Savings account number.
          example: ' '
        nameDetails:
          required:
          - embossedName1
          type: object
          properties:
            embossedName1:
              maxLength: 26
              type: string
              description: Name to be embossed on the first embossing line of the
                card. Enter the name exactly as it is to appear on the card.
              example: 'John Brono '
            embossedName2:
              maxLength: 26
              type: string
              description: This is the Additional name to be embossed on the second
                embossing line of the card. Enter the name exactly as it is to appear
                on the card.
              example: Samuel Baro
            name1:
              maxLength: 40
              type: string
              description: This field identifies the name of the cardholder.
              example: ABCD
            name2:
              maxLength: 40
              type: string
              description: This field identifies the name of the cardholder used for
                mailing the card and PIN mailers.
              example: QWER
        addressDetails:
          type: object
          properties:
            addressLine1:
              maxLength: 40
              type: string
              description: First line of address used for mailing the card and PIN
                mailer.
              example: 'House no. 12 '
            addressLine2:
              maxLength: 40
              type: string
              description: Second line of address used for mailing the card and PIN
                mailer.
              example: 'St. Paul Road '
            city:
              maxLength: 30
              type: string
              description: City portion of the mailing address for cards and PIN mailers.
              example: ' '
            stateprovince:
              maxLength: 3
              type: string
              description: State or province of the mailing address for cards and
                PIN mailers.
              example: Uth
            postalCode:
              maxLength: 10
              type: string
              description: Postal code of the mailing address for cards and PIN mailers.
              example: '1231'
            addressId:
              maxLength: 15
              type: string
              description: 'Address identifier to determine the type of address. Ex:
                Home, Office, etc.'
              example: ' '
        physicalVirtualIndicator:
          maxLength: 1
          type: string
          description: 'Indicates the card is physical or virtual. <br/>The values
            are: <br/>&nbsp; ''P'' - Physical Card<br/>&nbsp; ''V'' - Virtual Card'
          example: P
          enum:
          - P
          - V
        isDynamicCVV2Enabled:
          maxLength: 1
          type: string
          description: 'Code that indicates whether to enable or disable dynamic CVV2
            flag. <br/>The values are: <br/>&nbsp; ''0'' - Dynamic CVV2 disabled/CVV2
            in effect<br/>&nbsp; ''1'' - Dynamic CVV2 enabled'
          example: '0'
          enum:
          - '0'
          - '1'
        externalContractId:
          maxLength: 14
          type: string
          description: Unique identification number assigned to a customer from external
            system.
          example: '000012672379'
    BoardCardV1ResponseModel:
      type: object
      properties:
        businessUnit:
          maximum: 999
          maxLength: 3
          type: integer
          description: Unique identification number associated with the organization.
            Valid values from 1-998.
          example: '600'
        productId:
          maximum: 999
          maxLength: 3
          type: integer
          description: Unique identification number of the product associated with
            the organization. Valid values from 1-998.
          example: '1'
        paymentInstrumentId:
          maxLength: 19
          type: string
          description: Unique alternate identification number associated with Payment
            card number.
          example: '0004440010057325150'
        maskedPaymentCardNumber:
          maxLength: 19
          type: string
          description: Masked payment card number.
          example: ''
        nameOnCard:
          maxLength: 26
          type: string
          description: Name to be embossed on the first embossing line of the card.
          example: JOHN
        expiryDate:
          maxLength: 10
          type: string
          description: Expiry date of the Card. The format is MM/DD/YYYY or DD/MM/YYYY
            depending on the DATE FORMAT on System Control.
          example: 01/10/2025
        activationStatus:
          maxLength: 1
          type: string
          description: 'Field that indicates the Embosser entity status. <br/>The
            values are: <br/>&nbsp; ''0'' - Permanent<br/>&nbsp; ''1'' - Temporary<br/>&nbsp;
            ''F'' - Fraud<br/>&nbsp; ''S'' - Smart card manually reissued due to smart
            card restriction<br/>&nbsp; ''T'' - Permanent transfer out<br/>&nbsp;
            ''P'' - Purged'
          example: '0'
    ApplePayPushProvisioningV1ReqModel:
      required:
      - paymentInstrumentId
      type: object
      properties:
        version:
          maxLength: 1
          type: string
          description: This field identify the which version used.
          example: '1'
        keysScheme:
          maxLength: 2
          type: string
          description: This field identify the key management scheme used to protect
            the encrypted information component.
          example: FK
        ephemeralKey:
          maxLength: 2
          type: string
          description: A cryptographic key that is generated for each execution of
            a key-establishment process.
          example: ''
        paymentInstrumentId:
          maxLength: 19
          type: string
          description: Unique alternate identification number associated with Payment
            Card Number.
          example: '0009644806050000069'
        businessUnit:
          maxLength: 3
          type: string
          description: Unique identification number associated with the organization.
            Valid values from 1-998.
          example: '100'
        algorithm:
          maxLength: 4
          type: string
          description: This field identify the encryption algorithm and key strength
            used to encipher the encryptedinformation component.
          example: TDEA
        nonce:
          maxLength: 32
          type: string
          description: A one-time-use nonce provided by Apple.
          example: '123456'
    ApplePayPushProvisioningV1ResponseModel:
      type: object
      properties:
        provisionAuthentication:
          maxLength: 200
          type: string
          description: Provision authentication
          example: MBPAD-1-FK-APPLE-  -TDEA-59CBFFAE1E77B0DAE976CCABFEDBAD0EB778DC80163E09002DA60AF75FE04BFACD3070EE3FD8C6BCD2DE52D2D69D432B732D73AF95A32002D22C9F6257B7B
        provisionActivation:
          maxLength: 200
          type: string
          description: Provision activation
          example: MBPAC-1-FK-APPLE-  -TDEA-B0FAA81964D13652F1887E6ADCDEB2AB9CC237BA183DBAC47777692592551A3F57DF1C91E57909D5
    InquireCardSpendStatisticV1ResponseModel:
      type: object
      properties:
        businessUnit:
          maximum: 999
          maxLength: 3
          type: integer
          description: Unique identification number associated with the organization.
            Valid values from 1-998.
          example: '600'
        paymentInstrumentId:
          maxLength: 19
          type: string
          description: Unique alternate identification number associated with Payment
            Card Number.
          example: '0009544410000000047'
        atmCashAuthorizationStatistics:
          type: object
          properties:
            todaysAuthorizationAmount:
              maxLength: 24
              type: string
              description: Total amount of ATM cash authorizations for this card today.
              example: $1000.00
            todaysAuthorizationCount:
              maximum: 999999999
              maxLength: 9
              type: integer
              description: Total number of ATM cash authorizations for this card today.
              example: '5'
            ctdAuthorizationAmount:
              maxLength: 24
              type: string
              description: Total amount of ATM cash authorizations for this card cycle-to-date.
              example: $10234.00
            ctdAuthorizationCount:
              maximum: 999999999
              maxLength: 9
              type: integer
              description: Total number of ATM cash authorizations for this card cycle-to-date.
              example: '6'
            ytdAuthorizationAmount:
              maxLength: 24
              type: string
              description: Total amount of ATM cash authorizations for this card year-to-date.
              example: $123456.00
            ytdAuthorizationCount:
              maximum: 999999999
              maxLength: 9
              type: integer
              description: Total number of ATM cash authorizations for this card year-to-date.
              example: '8'
            ltdAuthorizationAmount:
              maxLength: 24
              type: string
              description: Total amount of ATM cash authorizations for this card life-to-date.
              example: $1234560.00
            ltdAuthorizationCount:
              maximum: 999999999
              maxLength: 9
              type: integer
              description: Total number of ATM cash authorizations for this card life-to-date.
              example: '12'
        otcCashAuthorizationStatistics:
          type: object
          properties:
            todaysAuthorizationAmount:
              maxLength: 24
              type: string
              description: Total amount of OTC cash authorizations for this card today.
              example: $1000.00
            todaysAuthorizationCount:
              maximum: 999999999
              maxLength: 9
              type: integer
              description: Total number of OTC cash authorizations for this card today.
              example: '5'
            ctdAuthorizationAmount:
              maxLength: 24
              type: string
              description: Total amount of OTC cash authorizations for this card cycle-to-date.
              example: $10234.00
            ctdAuthorizationCount:
              maximum: 999999999
              maxLength: 9
              type: integer
              description: Total number of OTC cash authorizations for this card cycle-to-date.
              example: '6'
            ytdAuthorizationAmount:
              maxLength: 24
              type: string
              description: Total amount of OTC cash authorizations for this card year-to-date.
              example: $123456.00
            ytdAuthorizationCount:
              maximum: 999999999
              maxLength: 9
              type: integer
              description: Total number of OTC cash authorizations for this card year-to-date.
              example: '8'
            ltdAuthorizationAmount:
              maxLength: 24
              type: string
              description: Total amount of OTC cash authorizations for this card life-to-date.
              example: $1234560.00
            ltdAuthorizationCount:
              maximum: 999999999
              maxLength: 9
              type: integer
              description: Total number of OTC cash authorizations for this card life-to-date.
              example: '12'
        retailAuthorizationStatistics:
          type: object
          properties:
            todaysAuthorizationAmount:
              maxLength: 24
              type: string
              description: Total amount of Retail cash authorizations for this card
                today.
              example: $1000.00
            todaysAuthorizationCount:
              maximum: 999999999
              maxLength: 9
              type: integer
              description: Total number of Retail cash authorizations for this card
                today.
              example: '5'
            ctdAuthorizationAmount:
              maxLength: 24
              type: string
              description: Total amount of Retail cash authorizations for this card
                cycle-to-date.
              example: $10234.00
            ctdAuthorizationCount:
              maximum: 999999999
              maxLength: 9
              type: integer
              description: Total number of Retail cash authorizations for this card
                cycle-to-date.
              example: '6'
            ytdAuthorizationAmount:
              maxLength: 24
              type: string
              description: Total amount of Retail cash authorizations for this card
                year-to-date.
              example: $123456.00
            ytdAuthorizationCount:
              maximum: 999999999
              maxLength: 9
              type: integer
              description: Total number of Retail cash authorizations for this card
                year-to-date.
              example: '8'
            ltdAuthorizationAmount:
              maxLength: 24
              type: string
              description: Total amount of Retail cash authorizations for this card
                life-to-date.
              example: $1234560.00
            ltdAuthorizationCount:
              maximum: 999999999
              maxLength: 9
              type: integer
              description: Total number of Retail cash authorizations for this card
                life-to-date.
              example: '12'
    InquireSpendLimitV1ResponseModel:
      type: object
      properties:
        businessUnit:
          maximum: 999
          maxLength: 3
          type: integer
          description: Unique identification number associated with the organization.
            Valid values from 1-998.
          example: '100'
        paymentInstrumentId:
          maxLength: 19
          type: string
          description: Unique alternate identification number associated with Payment
            Card Number.
          example: '0009846801010434272'
        spendLimitControls:
          type: object
          properties:
            maximumAuthorizationsFrequency:
              maxLength: 1
              type: string
              description: 'Code that indicates the frequency for the maximum authorization
                parameters. <br/>The values are: <br/>&nbsp; ''0'' - Not used(default)
                <br/>&nbsp; ''1'' - Daily<br/>&nbsp; ''2'' - Cycle-to-date <br/>&nbsp;
                ''3'' - Year-to-date'
              example: '1'
            maximumAtmCashAuthorizationsAmount:
              maxLength: 24
              type: string
              description: Maximum amount in monetary units and subunits of ATM cash
                authorizations allowed for this Embosser entity for the frequency
                defined in the FREQ field.
              example: $10000.00
            maximumAtmCashAuthorizationsCount:
              maximum: 999999999
              maxLength: 9
              type: integer
              description: Maximum number of ATM cash authorizations allowed for this
                Embosser entity for the frequency defined in the FREQ field.
              example: '1'
            maximumSingleAtmTransactionAmount:
              maxLength: 24
              type: string
              description: Maximum authorization amount in monetary units and subunits
                of a single ATM transaction allowed for this Embosser entity for the
                frequency defined in the FREQ field.
              example: $10000.00
            maximumOtcCashAuthorizationsAmount:
              maxLength: 24
              type: string
              description: Maximum amount in monetary units and subunits of OTC cash
                authorizations allowed for this Embosser entity for the frequency
                defined in the FREQ field.
              example: $20000.00
            maximumOtcAuthorizationsCount:
              maximum: 999999999
              maxLength: 9
              type: integer
              description: Maximum number of OTC authorizations allowed for this Embosser
                entity for the frequency defined in the FREQ field.
              example: '1'
            maximumSingleOtcCashAuthorizationAmount:
              maxLength: 24
              type: string
              description: Maximum amount in monetary units and subunits of OTC authorizations
                allowed for this Embosser entity for the frequency defined in the
                FREQ field.
              example: $10000.00
            maximumRetailAuthorizationsAmount:
              maxLength: 24
              type: string
              description: Maximum amount in monetary units and subunits of retail
                authorizations allowed for this Embosser entity for the frequency
                defined in the FREQ field.
              example: $10000.00
            maximumRetailAuthorizationsCount:
              maximum: 999999999
              maxLength: 9
              type: integer
              description: Maximum number of retail authorizations allowed for this
                Embosser entity for the frequency defined in the FREQ field.
              example: '1'
            maximumSingleRetailAuthorizationAmount:
              maxLength: 24
              type: string
              description: Maximum amount in monetary units and subunits of OTC authorizations
                allowed for this Embosser entity for the frequency defined in the
                FREQ field.
              example: $2000.00
    InquireCardPreferenceV1ResponseModel:
      type: object
      properties:
        businessUnit:
          maximum: 999
          maxLength: 3
          type: integer
          description: Unique identification number associated with the organization.
            Valid values from 1-998.
          example: '100'
        paymentInstrumentId:
          maxLength: 19
          type: string
          description: Unique alternate identification number associated with Payment
            Card Number.
          example: '0009846801010273613'
        cardholderType:
          maxLength: 1
          type: string
          description: Code that indicates whether the cardholder is the primary cardholder
            or an additional cardholder associated with the account. <br/>The values
            are:<br/>&nbsp; '0' - Additional cardholder<br/>&nbsp; '1' - Primary cardholder
          example: '1'
        reissueDeliveryOption:
          maxLength: 3
          type: string
          description: Delivery option for reissued cards (all card actions except
            1). <br/>The values are:<br/>&nbsp; '000' - Regular mail (Default)<br/>&nbsp;
            '001' - First-class mail<br/>&nbsp; '002' - Registered mail<br/>&nbsp;
            '003' - Internal delivery mail<br/>&nbsp; '004–999' - User defined
          example: '5'
        issueDeliveryOption:
          maxLength: 3
          type: string
          description: Delivery option for new cards. <br/>The values are:<br/>&nbsp;
            '000' - Regular mail (Default)<br/>&nbsp; '001' - First-class mail<br/>&nbsp;
            '002' - Registered mail<br/>&nbsp; '003' - Internal delivery mail<br/>&nbsp;
            '004–999' - User defined
          example: '1'
        isDynamicCVV2Enabled:
          maxLength: 1
          type: string
          description: 'Code that indicates whether to enable or disable dynamic CVV2
            flag. <br/>The values are: <br/>&nbsp; ''0'' - Dynamic CVV2 disabled/CVV2
            in effect<br/>&nbsp; ''1'' - Dynamic CVV2 enabled'
          example: ''
        addressFields:
          type: object
          properties:
            addressLine1:
              maxLength: 40
              type: string
              description: First line of address used for mailing the card and PIN
                mailer.
              example: Shinzo abe
            addressLine2:
              maxLength: 40
              type: string
              description: Second line of address used for mailing the card and PIN
                mailer.
              example: Main
            city:
              maxLength: 30
              type: string
              description: City portion of the mailing address for cards and PIN mailers.
              example: JPN
            stateProvince:
              maxLength: 3
              type: string
              description: State or province of the mailing address for cards and
                PIN mailers.
              example: Tok
            postalCode:
              maxLength: 10
              type: string
              description: Postal code of the mailing address for cards and PIN mailers.
              example: '234226'
            addressId:
              maxLength: 15
              type: string
              description: 'Address identifier to determine the type of address. Ex:
                Home, Office, etc.'
              example: Home
    ListVisaTokenV1ResponseModel:
      type: object
      properties:
        tokenList:
          type: array
          items:
            $ref: '#/components/schemas/TokenList_ListVisaTokenV1ResponseModel'
    TokenList_ListVisaTokenV1ResponseModel:
      type: object
      properties:
        vtsTokenNumber:
          maxLength: 19
          type: string
          description: Token number assigned by the Visa Tokenization Service(VTS).
          example: '5077400005048482515'
        tokenReferenceId:
          maxLength: 32
          type: string
          description: Reference identification code associated with the token.
          example: f16ae3173df94aa08c6fea051304c4e2
        tokenRequestorId:
          maxLength: 11
          type: string
          description: Identification number of the token requestor.
          example: '06100000005'
        cardWalletAccountId:
          maxLength: 32
          type: string
          description: identifier of the card holder Wallet
          example: ' '
        status:
          maxLength: 1
          type: string
          description: 'This field indicate the status of token <br/>The values are:
            <br/>&nbsp; ''0'' - Active<br/>&nbsp; ''1'' - Suspended<br/>&nbsp; ''2''
            - Deactivated<br/>&nbsp; ''3'' - Inactive'
          example: '0'
    InquireDynamicCvv2V1ResponseModel:
      type: object
      properties:
        encryptedPaymentCardNumber:
          maxLength: 32
          type: string
          description: Unique identification number that appears on the front of the
            card (PAN) in encrypted format.
          example: 217E8A00536C7A101B055563FBF49C9A
        encryptedDynamicCVV2:
          maxLength: 16
          type: string
          description: Encrypted dynamic CVV2.
          example: C8FB47CB632D1D16
        encryptedCardExpiryDate:
          maxLength: 16
          type: string
          description: Card expiry date (MMYY) in encrypted format.
          example: 6D259F94D6096444
        embossedName1:
          maxLength: 26
          type: string
          description: Name embossed on the first embossing line of the card.
          example: 'John Brono '
        embossedName2:
          maxLength: 26
          type: string
          description: This is the Additional name to be embossed on the second embossing
            line of the card.
          example: Samuel Baro
        dynamicCVV2ExpiryDateTime:
          maxLength: 19
          type: string
          description: Dynamic CVV2 expiry date and time.
          example: 27/07/2022 16:00:23
    InquireCardV1ResponseModel:
      type: object
      properties:
        businessUnit:
          maximum: 999
          maxLength: 3
          type: integer
          description: Unique identification number associated with the organization.
            Valid values from 1-998.
          example: '600'
        paymentInstrumentId:
          maxLength: 19
          type: string
          description: Unique alternate identification number associated with Payment
            Card Number.
          example: '0009544410000000047'
        accountId:
          maxLength: 19
          type: string
          description: Unique identification number for cardholder billing account.
          example: '0006000022000000076'
        productId:
          maximum: 999
          maxLength: 3
          type: integer
          description: Unique identification number of the product associated with
            the organization. Valid values from 1-998.
          example: '1'
        status:
          maxLength: 1
          type: string
          description: Status of payment instrument identification. <br/>The value
            are:<br/>&nbsp; '0' - Permanent<br/>&nbsp; '1' - Temporary<br/>&nbsp;
            'T' - Transfer<br/>&nbsp; 'P' - Purged<br/>&nbsp; 'F' - Fraud<br/>&nbsp;
            'S' - Chip Exceeded<br/>&nbsp; 'X' - Fraud X
          example: '0'
        numberOfCardsOutstanding:
          maximum: 999
          maxLength: 3
          type: integer
          description: Number of cards currently outstanding for this embosser entity.
          example: '1'
        cardReturnedCount:
          maximum: 999
          maxLength: 3
          type: integer
          description: Number of cards that were returned for the current day.
          example: '0'
        cardAction:
          type: string
          description: This field is the card issue action code that determines the
            action system performs during the next run. <br/>The values are:<br/>
            &nbsp; '0' - No action. No cards requested <br/> &nbsp; '1' - Issue new
            card(s). If applicable, also issue a PIN mailer <br/> &nbsp; '2' - Issue
            additional card(s). Value 2 is not valid for smart cards <br/> &nbsp;
            '3' - Issue replacement card(s) <br/> &nbsp; '4' - Returned cards <br/>
            &nbsp; '5' - Produce a new PIN mailer <br/> &nbsp; '6' - Issue emergency
            replacement card(s). Use this value if a card is lost or stolen and the
            replacement card is to be embossed and mailed within 24 hour <br/> &nbsp;
            '7' - Reissue card <br/> &nbsp; '8' - Reissue card with different card
            numbering scheme (CNS) <br/> &nbsp; '9' - Card technology reissue
          example: '1'
        cardRequestedCount:
          maximum: 999
          maxLength: 3
          type: integer
          description: Identifies the number of cards required. You must enter a value
            when the card issue CARD ACTION is 1 (new card), 2 (additional card),
            3 (replacement card), or 6 (emergency replacement card). The default is
            01.
          example: '1'
        cardType:
          maximum: 99
          maxLength: 2
          type: integer
          description: This field (CARD) is a user-defined code that indicates the
            type of plastic stock.
          example: '0'
        cardTypeRequested:
          maximum: 99
          maxLength: 2
          type: integer
          description: This field (REQ) is a user-defined code that identifies the
            type of card requested.
          example: '0'
        isSecureCodeEnabled:
          maxLength: 1
          type: string
          description: Code that indicates whether the account number has had at least
            one fully authenticated MasterCard SecureCode transaction and is eligible
            for SecureCode. transaction and is eligible for Secure Code. <br/>The
            values are:<br/>&nbsp; '0' - Secure Code is not active for this account
            (Default)<br/>&nbsp; '1' - Secure Code is active for this account
          example: '0'
        visaPlusIndicator:
          maxLength: 1
          type: string
          description: Code that indicates whether the PLUS, Cirrus, or Maestro symbol
            is displayed on the card. <br/>The values are:<br/>&nbsp; '0' - No Visa
            Plus (Default)<br/>&nbsp; '1' - Cirrus<br/>&nbsp; '2' - Visa Plus<br/>&nbsp;
            '3' - Maestro<br/>&nbsp; '4' - Cirrus Maestro<br/>&nbsp; '5' - Maestro
            Chip Only
          example: '0'
        customerId:
          maxLength: 19
          type: string
          description: Unique identification number assigned to a customer.
          example: ' '
        posServiceCode:
          maxLength: 3
          type: string
          description: Code that indicates the type of point-of-sale service in effect
            for a card.
          example: ' '
        cardholderType:
          maxLength: 1
          type: string
          description: Code that indicates whether the cardholder is the primary cardholder
            or an additional cardholder associated with the account. <br/>The values
            are:<br/>&nbsp; '0' - Additional cardholder<br/>&nbsp; '1' - Primary cardholder
          example: '0'
        pinDelayDaysCount:
          maximum: 99
          maxLength: 2
          type: integer
          description: This field indicates the number of days to warehouse the PIN
            mailer before releasing it for printing.
          example: '0'
        visaMiniCardVersion:
          maxLength: 1
          type: string
          description: Code that indicates the version of Visa Mini card. <br/>The
            values are:<br/>&nbsp; '0' - None (Default)<br/>&nbsp; '1' - Standalone<br/>&nbsp;
            '2' - Companion
          example: '0'
        isPinSuppressionEnabled:
          maxLength: 1
          type: string
          description: Flag indicating whether the PIN number and PIN mailer are produced.
            <br/>The values are:<br/>&nbsp; '0' - Don't suppress (Default)<br/>&nbsp;
            '1' - Suppress PIN
          example: '0'
        reissueAttemptCount:
          maximum: 999
          maxLength: 3
          type: integer
          description: Number of issue or reissue attempts remaining for this card.
          example: '0'
        currentCardNeedActivation:
          maxLength: 1
          type: string
          description: This field indicates whether card activation needs to occur
            for the most recently issued card. <br/>The values are:<br/>&nbsp; 'N'
            - No card activation is required or card activation has already occurred<br/>&nbsp;
            'Y' - Card activation needs to occur
          example: N
        lastCardActivation:
          maxLength: 1
          type: string
          description: This field indicates whether card activation needs to occur
            for the previously issued card. <br/>The values are:<br/>&nbsp; 'N' -
            No card activation is required or card activation has already occurred<br/>&nbsp;
            'Y' - Card activation needs to occur
          example: N
        fraudCardTransferCount:
          maxLength: 19
          type: string
          description: Number of the Embosser entity replacement associated with a
            fraud card transfer.
          example: ' '
        cardReissueDeliveryLocation:
          maximum: 999999999
          maxLength: 9
          type: integer
          description: Branch number that identifies the card mailing location for
            all reissued cards (all card actions except 1) when the branch delivery
            option is used.
          example: '0'
        cardReissueDeliveryOption:
          maxLength: 3
          type: string
          description: Delivery option for reissued cards.
          example: '0'
        firstIssueBranch:
          maximum: 999999999
          maxLength: 9
          type: integer
          description: Branch number that identifies the card mailing location for
            the issue of new cards when the branch delivery option is used.
          example: '0'
        authorizationCriteriaTableId:
          maxLength: 3
          type: string
          description: Identification number of the Authorization Criteria table assigned
            to the Embosser entity.
          example: ' '
        emblemId:
          maximum: 99999
          maxLength: 5
          type: integer
          description: Field that defines the cardholder’s affiliation or affinity
            group. The values are user-defined. If this field is left blank during
            account setup, CMS populates this field with the value from the Account
            identification (AFFLIATE EMBLEM on Account Details->03-PCT Defaults).
            The default is 00000
          example: '0'
        cardDelayDaysCount:
          maximum: 99
          maxLength: 2
          type: integer
          description: This field indicates the number of days to warehouse the card
            mailer before releasing it for printing (MAILER DATE).
          example: '0'
        customersGender:
          maxLength: 1
          type: string
          description: Code that indicates the customer’s gender. <br/>The values
            are:<br/>&nbsp; '0' - Unspecified (Default)<br/>&nbsp; '1' - Male<br/>&nbsp;
            '2' - Female
          example: '0'
        reasonCode:
          maxLength: 1
          type: string
          description: User-defined reason code associated with the current card issue
            action code. This field can identify specific notations to print in card
            and PIN mailers. For example, the code can indicate to the print production
            system whether to use “lost” or “stolen” wording in the card mailer when
            the card action is 6 (lost or stolen card). The values for this field
            are user-defined.
          example: ''
        pinOverride:
          maxLength: 1
          type: string
          description: Code that indicates the PIN override action taken at the embosser
            level. <br/>The values are:<br/>&nbsp; ' ' or '0' - Don't generate new
            PIN (Default)<br/>&nbsp; '1' - New PIN<br/>&nbsp; '2' - Exist PIN
          example: '0'
        mobileDeviceID:
          maxLength: 20
          type: string
          description: Identification of the mobile device associated with a mobile
            payment instrument (PI) embosser.
          example: ''
        mobileProvisionStatus:
          maxLength: 1
          type: string
          description: This flag indicates whether the embosser is for a mobile payment
            instrument (PI) and the current provisioning status for the PI. <br/>The
            values are:<br/> &nbsp; '0' - Not applicable; not a mobile PI (Default)
            <br/> &nbsp; '1' - Mobile PI is ready to be provisioned <br/> &nbsp; '2'
            - Mobile PI provisioning is complete <br/> &nbsp; '3' - Previous provisioning
            of the mobile PI was unsuccessful <br/> &nbsp; '4' - Previously provisioned
            mobile PI is removed and cannot be provisioned; the embosser is inactive.
            For example, this value can be set when the embosser is transferred for
            fraud
          example: '0'
        digitalId:
          maxLength: 10
          type: string
          description: Identification Code that is used in provisioning response.
          example: '0'
        addressFields:
          type: object
          properties:
            addressLine1:
              maxLength: 40
              type: string
              description: First line of address used for mailing the card and PIN
                mailer.
              example: ' '
            addressLine2:
              maxLength: 40
              type: string
              description: Second line of address used for mailing the card and PIN
                mailer.
              example: ' '
            city:
              maxLength: 30
              type: string
              description: City portion of the mailing address for cards and PIN mailers.
              example: ' '
            stateProvince:
              maxLength: 3
              type: string
              description: State or province of the mailing address for cards and
                PIN mailers.
              example: ' '
            postalCode:
              maxLength: 10
              type: string
              description: Postal code of the mailing address for cards and PIN mailers.
              example: ' '
            addressId:
              maxLength: 15
              type: string
              description: 'Address identifier to determine the type of address. Ex:
                Home, Office, etc.'
              example: HOME
        userDefinedFields:
          type: object
          properties:
            field1:
              maxLength: 20
              type: string
              description: User-defined code or description for this Embosser entity.
                You can change the field name in the Logo productid (EMB CODES 1–2
                on ARML23).
              example: ' '
            field2:
              maxLength: 20
              type: string
              description: User-defined code or description for this Embosser entity.
                You can change the field name in the Logo entity (EMB CODES 1–2 on
                ARML23).
              example: ' '
            field3:
              maxLength: 19
              type: string
              description: User-defined code or description for this Embosser entity.
                You can change the field name in the Logo entity (EMB CODES 3–4 on
                ARML23).
              example: ' '
            field4:
              maximum: 9999
              maxLength: 4
              type: integer
              description: User-defined code or description for this Embosser entity.
                You can change the field name in the Logo entity (EMB CODES 3–4 on
                ARML23).
              example: '0'
            field5:
              maxLength: 1
              type: string
              description: User-defined code for this Embosser entity. You can change
                the field name in the Logo entity (EMB CODES 5 on ARML23).
              example: ' '
        nameFields:
          type: object
          properties:
            cardholderName1:
              maxLength: 40
              type: string
              description: Name of the card-holder. If you leave this field blank,
                CMS uses the name entered in EMBOSSED NAME 1. This field is used when
                nprinting name and address information.
              example: ' '
            cardholderName2:
              maxLength: 40
              type: string
              description: Name of the card-holder used for mailing the card and PIN
                mailers.
              example: ' '
            embossedName1:
              maxLength: 26
              type: string
              description: Name to be embossed on the first embossing line of the
                card. Enter the name exactly as it is to appear on the card.
              example: DAVID TEST 2
            embossedName2:
              maxLength: 26
              type: string
              description: Type of name for EMBOSSED NAME 2. This field displays only
                for prepaid cards.
              example: ' '
            name1TypeIndicator:
              maxLength: 1
              type: string
              description: 'This field identifies the type of name for NAME LINE 1.
                This field displays only for prepaid cards. <br/>The values are: <br/>&nbsp;
                ''0'' - Personal name (Default)<br/>&nbsp; ''3'' - Generic name'
              example: '0'
            name2TypeIndicator:
              maxLength: 1
              type: string
              description: Type of name for EMBOSSED NAME 2. This field displays only
                for prepaid cards. this field identifies the type of name for NAME
                LINE 2. This field displays only for prepaid cards. <br/>The values
                are:<br/>&nbsp; '0' - Personal name (Default)<br/>&nbsp; '3' - Generic
                name
              example: '0'
        dateFields:
          type: object
          properties:
            expiryDate:
              maxLength: 10
              type: string
              description: Date on which the most recently issued card expires, The
                format is MM/DD/YYYY or DD/MM/YYYY depending on the DATE FORMAT on
                System Control.
              example: 16/08/2024
            statusChangeDate:
              maxLength: 10
              type: string
              description: Date on which the status was last changed, The format is
                MM/DD/YYYY or DD/MM/YYYY depending on the DATE FORMAT on System Control.
              example: 01/02/2020
            transferEffectiveDate:
              maxLength: 10
              type: string
              description: Date that a fraud card transfer for this embosser is effective,
                The format is MM/DD/YYYY or DD/MM/YYYY depending on the DATE FORMAT
                on System Control.
              example: 01/02/2020
            lastCardExpiryDate:
              maxLength: 10
              type: string
              description: Date on which the previously issued card expired, The format
                is MM/DD/YYYY or DD/MM/YYYY depending on the DATE FORMAT on System
                Control.
              example: 01/02/2020
            cardActivatedDate:
              maxLength: 10
              type: string
              description: Date on which the card is activated, The format is MM/DD/YYYY
                or DD/MM/YYYY depending on the DATE FORMAT on System Control.
              example: 19/08/2021
            cardIssueDate:
              maxLength: 10
              type: string
              description: The date when the most recently issued card was produced,
                The format is MM/DD/YYYY or DD/MM/YYYY depending on the DATE FORMAT
                on System Control.
              example: 01/02/2020
            currentCardValidDate:
              maxLength: 10
              type: string
              description: Date embossed on a magnetic-stripe card that indicates
                when the card becomes valid. This date is the first day of the month
                on which the card becomes valid.
              example: 01/02/2022
            mailerDate:
              maxLength: 10
              type: string
              description: Date the current card was mailed to the cardholder, The
                format is MM/DD/YYYY or DD/MM/YYYY depending on the DATE FORMAT on
                System Control.
              example: 01/02/2020
            nextCardExpiryDate:
              maxLength: 10
              type: string
              description: Next expiration date of the card, The format is MM/DD/YYYY
                or DD/MM/YYYY depending on the DATE FORMAT on System Control.
              example: 01/02/2020
            firstCardVerifyDate:
              maxLength: 10
              type: string
              description: Date on which card activation requirements are enforced,
                The format is MM/DD/YYYY or DD/MM/YYYY depending on the DATE FORMAT
                on System Control.
              example: 01/02/2020
        warningCodeDetails:
          type: object
          properties:
            warningCode7:
              maxLength: 1
              type: string
              description: This field determine whether to authorize or decline authorizations
                for this Embosser entity (card), which is not currently used at the
                card level. <br/>The values are:<br/>&nbsp; '0' or ' ' - Normal(Default)<br/>&nbsp;
                '1' - Excess Auth<br/>&nbsp; '2' - Excess Purchase Cash<br/>&nbsp;
                '3' - Excess Purchase Ratio
              example: '0'
            warningCode1:
              maxLength: 1
              type: string
              description: This field determine whether to authorize or decline authorizations
                for this card. <br/>The values are:<br/> &nbsp; '0' or ' ' - Normal
                authorizations (Default) <br/> &nbsp; '1' - Decline <br/> &nbsp; '2'
                - Decline and pick up <br/> &nbsp; '3' - Decline and pick up for fraud
                or lost/stolen card <br/> &nbsp; '4' - Decline with referral <br/>
                &nbsp; '6' - Decline for suspected fraud <br/> &nbsp; '8' - Decline
                with a user exit <br/> &nbsp; '9' - VIP account, always approve
              example: '0'
            warningCode1SetDate:
              maxLength: 10
              type: string
              description: Date when the warning code 1 was set. The format is MM/DD/YYYY
                or DD/MM/YYYY depending on the DATE FORMAT on System Control.
              example: 00/00/0000
        blockCodeDetails:
          type: object
          properties:
            blockSecurityId:
              maxLength: 3
              type: string
              description: Operator ID of the person who applied Block Code on Card.
              example: ' '
            blockCode:
              maxLength: 1
              type: string
              description: Block Code assigned to the cardholder.
              example: ' '
            blockDate:
              maxLength: 10
              type: string
              description: Date the Block Code was assigned, The format is MM/DD/YYYY
                or DD/MM/YYYY depending on the DATE FORMAT on System Control.
              example: 25/01/202
        externalContractId:
          maxLength: 14
          type: string
          description: Unique identification number assigned to a customer from external
            system.
          example: '000012672379'
        physicalVirtualIndicator:
          maxLength: 1
          type: string
          description: 'Indicates the card is physical or virtual. <br/>The values
            are: <br/>&nbsp; ''P'' - Physical Card<br/>&nbsp; ''V'' - Virtual Card'
          example: V
        isDynamicCVV2Enabled:
          maxLength: 1
          type: string
          description: 'Code that indicates whether to enable or disable dynamic CVV2
            flag. <br/>The values are: <br/>&nbsp; ''0'' - Dynamic CVV2 disabled/CVV2
            in effect<br/>&nbsp; ''1'' - Dynamic CVV2 enabled'
          example: '0'
        plasticId:
          maxLength: 10
          type: string
          description: 'User-defined code that identifies the plastic stock used to
            create a card for this Embosser record. For HCS-associated accounts, this
            value defaults from the Company Product record '
          example: ' '
        maskedPaymentCardNumber:
          maxLength: 19
          type: string
          description: Unique identification number that appears on the front of the
            card (PAN) in masked format.
          example: 000484680XXXXXX9405
    InquireCardControlV1ResponseModel:
      type: object
      properties:
        businessUnit:
          maximum: 999
          maxLength: 3
          type: integer
          description: Unique identification number associated with the organization.
            Valid values from 1-998.
          example: '100'
        paymentInstrumentId:
          maxLength: 19
          type: string
          description: Unique alternate identification number associated with Payment
            card number.
          example: '0009846801010434751'
        isPosEnabled:
          maxLength: 1
          type: string
          description: This is to enable or disable a POS based transaction for a
            cardholder. <br/>The values are:<br/> &nbsp; 'Y' - POS transactions allowed
            <br/> &nbsp; 'N' - POS transactions not allowed
          example: N
        isAtmEnabled:
          maxLength: 1
          type: string
          description: This is to enable or disable a ATM based transaction for a
            cardholder. <br/>The values are:<br/> &nbsp; 'Y' - ATM transactions allowed
            <br/> &nbsp; 'N' - ATM transactions not allowed
          example: Y
        isEcomEnabled:
          maximum: 9
          maxLength: 1
          type: integer
          description: This is to enable or disable  ECOMM based transaction for a
            cardholder. <br/>The values are:<br/> &nbsp; '1' - ECOMM transactions
            allowed <br/> &nbsp; '0' - ECOMM transactions not allowed
          example: '1'
        isMotoEnabled:
          maxLength: 1
          type: string
          description: This is to enable or disable a Mobile based transaction for
            a cardholder. <br/>The values are:<br/> &nbsp; 'Y' - MOTO transactions
            allowed <br/> &nbsp; 'N' - MOTO transactions not allowed
          example: Y
        isPayWaveEnabled:
          maxLength: 1
          type: string
          description: This is to enable or disable a Contactless or Paywave based
            transaction for a cardholder. <br/>The values are:<br/> &nbsp; 'Y' - PayWave
            transactions allowed <br/> &nbsp; 'N' - PayWave transactions not allowed
          example: N
        isInternationalAtmPosEnabled:
          maxLength: 1
          type: string
          description: This is to enable or disable an international ATM or POS  based
            transaction for a cardholder. <br/>The values are:<br/> &nbsp; 'Y' - International
            ATM or POS transactions allowed <br/> &nbsp; 'N' - International ATM or
            POS transactions not allowed
          example: Y
        isCashBackEnabled:
          maxLength: 1
          type: string
          description: This is to enable or disable cashback at POS  transaction for
            a cardholder. <br/>The values are:<br/> &nbsp; 'Y' - Cash Back transactions
            allowed <br/> &nbsp; 'N' - Cash Back transactions not allowed
          example: Y
    FetchClearPANFromTokenPANV1ResponseModel:
      type: object
      properties:
        encryptedPaymentCardNumber:
          maxLength: 32
          type: string
          description: Unique identification number that appears on the front of the
            card (PAN) in encrypted format.
          example: 217E8A00536C7A101B055563FBF49C9A
    FetchTokenPANFromClearPANV1ResponseModel:
      type: object
      properties:
        paymentInstrumentId:
          maxLength: 19
          type: string
          description: Unique alternate identification number associated with Payment
            Card Number.
          example: '0009846801010273605'
    FetchCustomerIDFromClearPANV1ResponseModel:
      type: object
      properties:
        customerId:
          maxLength: 19
          type: string
          description: Unique identification number assigned to a customer.
          example: '0006000011000000707'
  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
