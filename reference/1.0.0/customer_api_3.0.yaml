openapi: 3.0.1
info:
  title: Vision10 API Documentation
  description: V10 open API document.
  version: 1.0.0
  contact:
    name: "Fiserv"
servers:
- url: 'https://stg34.visionplus.io:24500'
tags:
 - name: "Customer Management"
paths:
  /v1/customers/nameAddress:
    get:
      tags:
      - Customer Management
      x-group-name: Customer Management
      x-proxy-name:  Customer Demographic Inquiry
      summary:  Customer Demographic Inquiry
      description: This service will be used to enquire the customer demographic details such as Name / Address / Phone Number / Email ID/ Date of Birth of the given customer. The customer ID will be passed in the input request to retrieve the demographic information.
      operationId: nameAddress
      parameters:
      - name: X-Correl-Id
        in: header
        description: Any correlational text client's may want to send in the request for mapping the response on their side. Any value passed in the request message will be return back as-is in the API response message
        schema:
          maxLength: 40
          minLength: 0
          type: string
          example: EXC-ID-12345678-SUB
      - name: X-Name
        in: header
        required: true
        description: User’s sign-on name. The value passed in this field will be validated within application for user's authority to consume the requested API
        schema:
          maxLength: 20
          minLength: 0
          type: string
          example: John 
      - name: X-context
        in: header
        required: true
        description: A unique random ID assigned to the requestor once authenticated to the First Vision application. Value passed in this field will be used within application to authenticate the valid signed-on user
        schema:
          maxLength: 20
          minLength: 0
          type: string
          example: 00001AUVMX
      - name: businessUnit
        in: query
        required: true
        description : "Business Unit -Identification number of the organization associated with thisAccount Base Segment record. The values are 001–998."
        schema:
          type: number
          default: 0.0
          example: 100
      - name: accountNumber
        in: query
        required: true
        description : "Must be numeric and greater than zero. Max length = 19. Should be a valid customer number."
        schema:
          maxLength: 19
          type: string
          format: uppercase
          example: 100001NNNXX0481
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAddressResponse'
              examples: 
                AddressInquiry: {$ref: '#/components/examples/AddressInquiryResponse'}  
        '400':
          description: The request cannot be validated
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorList'}
              example:
               - '400':
                    $ref: '#/components/examples/400-Errors'
        '401':
          description: The request was unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '401':
                    $ref: '#/components/examples/401-Errors'
        '404':
          description: The request resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '404':
                  $ref: '#/components/examples/404-Errors'
        '500':
          description: An unexpected internal server error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '500':
                  $ref: '#/components/examples/500-Errors'
        '503':
          description: The service was unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '503':
                    $ref: '#/components/examples/503-Errors'
        '504':
          description: The request timed out while waiting for a response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
                - '504':
                    $ref: '#/components/examples/504-Errors'        
    put:
      tags:
      - Customer Management
      x-group-name: Customer Management
      x-proxy-name:  Customer Demographic Update
      summary:  Customer Demographic Update
      description: This service will be used to update the customer demographic details such as Name / Address / Phone Number / Email ID/ Date of Birth of the given customer. The customer ID will be passed in the input request to retrieve the demographic information.
      operationId: customersNameAddress
      parameters:
      - name: X-Correl-Id
        in: header
        description: Any correlational text client's may want to send in the request for mapping the response on their side. Any value passed in the request message will be return back as-is in the API response message
        schema:
          maxLength: 40
          minLength: 0
          type: string
          example: EXC-ID-12345678-SUB
      - name: X-Name
        in: header
        required: true
        description: User’s sign-on name. The value passed in this field will be validated within application for user's authority to consume the requested API
        schema:
          maxLength: 20
          minLength: 0
          type: string
          example: John Smith
      - name: X-context
        in: header
        required: true
        description: A unique random ID assigned to the requestor once authenticated to the First Vision application. Value passed in this field will be used within application to authenticate the valid signed-on user
        schema:
          maxLength: 20
          minLength: 0
          type: string
          example: 00001AUVMX
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAddressUpdateReq'
            examples: 
              AddressUpdate: {$ref: '#/components/examples/AddressUpdateReq'}
      

      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAddressUpdateResponse'
              examples: 
                AddressUpdate: {$ref: '#/components/examples/AddressUpdateResponse'}  
        '400':
          description: The request cannot be validated
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorList'}
              example:
               - '400':
                    $ref: '#/components/examples/400-Errors'
        '401':
          description: The request was unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '401':
                    $ref: '#/components/examples/401-Errors'
        '404':
          description: The request resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '404':
                    $ref: '#/components/examples/404-Errors'
        '500':
          description: An unexpected internal server error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '500':
                    $ref: '#/components/examples/500-Errors'
        '503':
          description: The service was unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '503':
                    $ref: '#/components/examples/503-Errors'
        '504':
          description: The request timed out while waiting for a response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '504':
                    $ref: '#/components/examples/504-Errors'                     
  /v1/customers/{customerNumber}/accountList:
    get:
      tags:
        - Customer Management
      x-group-name: Customer Management
      x-proxy-name: List Customers' Accounts
      summary: List Customers' Accounts
      description: Finds an Account number associated with a Customer number
      operationId: accountsList
      parameters:
        - name: X-Correl-Id
          in: header
          description: Any correlational text client's may want to send in the request for mapping the response on their side. Any value passed in the request message will be return back as-is in the API response message
          schema:
            maxLength: 40
            minLength: 0
            type: string
            example: EXC-ID-12345678-SUB
        - name: X-Name
          in: header
          required: true
          description: User’s sign-on name. The value passed in this field will be validated within application for user's authority to consume the requested API
          schema:
            maxLength: 20
            minLength: 0
            type: string
            example: John
        - name: X-context
          in: header
          required: true
          description: A unique random ID assigned to the requestor once authenticated to the First Vision application. Value passed in this field will be used within application to authenticate the valid signed-on user
          schema:
            maxLength: 20
            minLength: 0
            type: string
            example: 00001AUVMX
        - name: customerNumber
          in: path
          required: true
          schema:
            maxLength: 19
            type: string
            format: uppercase
            example: '0001000000000113902'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAccountListResp'
        '400':
          description: The request cannot be validated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
                - '400':
                    $ref: '#/components/examples/400-Errors'
        '401':
          description: The request was unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
                - '401':
                    $ref: '#/components/examples/401-Errors'
        '404':
          description: The request resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
                - '404':
                    $ref: '#/components/examples/404-Errors'
        '500':
          description: An unexpected internal server error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
                - '500':
                    $ref: '#/components/examples/500-Errors'
        '503':
          description: The service was unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
                - '503':
                    $ref: '#/components/examples/503-Errors'
        '504':
          description: The request timed out while waiting for a response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
                - '504':
                    $ref: '#/components/examples/504-Errors'
  /v1/customers/{customerNumber}/cardList:
    get:
      tags:
      - Customer Management
      x-group-name: Customer Management
      x-proxy-name:  List Customers' Cards
      summary: List Customers' Cards
      description: Gets card details associated with a Customer number
      operationId: CardList
      parameters:
      - name: X-Correl-Id
        in: header
        description: Any correlational text client's may want to send in the request for mapping the response on their side. Any value passed in the request message will be return back as-is in the API response message
        schema:
          maxLength: 40
          minLength: 0
          type: string
          example: EXC-ID-12345678-SUB
      - name: X-Name
        in: header
        required: true
        description: User’s sign-on name. The value passed in this field will be validated within application for user's authority to consume the requested API
        schema:
          maxLength: 20
          minLength: 0
          type: string
          example: John 
      - name: X-context
        in: header
        required: true
        description: A unique random ID assigned to the requestor once authenticated to the First Vision application. Value passed in this field will be used within application to authenticate the valid signed-on user
        schema:
          maxLength: 20
          minLength: 0
          type: string
          example: 00001AUVMX
      - name: customerNumber
        in: path
        required: true
        schema:
          maxLength: 19
          type: string
          format: uppercase
          example: '0001000000000113902'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerCardListResp'
        '400':
          description: The request cannot be validated
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ErrorList'}
              example:
               - '400':
                    $ref: '#/components/examples/400-Errors'
        '401':
          description: The request was unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '401':
                    $ref: '#/components/examples/401-Errors'
        '404':
          description: The request resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '404':
                  $ref: '#/components/examples/404-Errors'
        '500':
          description: An unexpected internal server error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '500':
                  $ref: '#/components/examples/500-Errors'
        '503':
          description: The service was unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
               - '503':
                    $ref: '#/components/examples/503-Errors'
        '504':
          description: The request timed out while waiting for a response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
              example:
                - '504':
                    $ref: '#/components/examples/504-Errors'
components:
  schemas:
    CustomerAddressResponse:
      required:
      - accountNumber
      - businessUnit
      type: object
      properties:
        nameLine31:
          maxLength: 40
          type: string
          format: uppercase
          example: " "
          description: "NAME-LINE 3-this field is a code that indicates the type ofname. This untitled field displays to the right of the NAME LINE 3field. The values arefields are 0=Personal name (Default),1=Business name,3 = gender name"
        nameLine11:
          maxLength: 40
          type: string
          format: uppercase
          example: " "
          description: "NAME-LINE 1-This field is the owner personal name, businessname, or a generic name. If the name is a personal name(type)this field displays the contents of the FIRST NAME, MIDDLENAME, and LAST NAME fields The name tyep fields are 0=Personal name (Default),1=Business name,3 = gender name"
        nameLine21:
          maxLength: 40
          type: string
          format: uppercase
          example: " "
          description: "NAME-LINE 2-this field is the owner name. You must enternames in the correct format as defined in the Organization"
        businessUnit:
          type: number
          example: 100
          description: "Business Unit -Identification number of the organization associated with thisAccount Base Segment record. The values are 001–998."
        accountNumber:
          maxLength: 19
          type: string
          format: uppercase
          example: 100001NNNXX0481
          description: "Must be numeric and greater than zero. Max length = 19. Should be a valid customer number."
        houseNumber1:
          maxLength: 20
          type: string
          format: uppercase
          example: " "
          description: "HOUSE NAME-House name of the owner. The default is spaces"
        addressLine11:
          maxLength: 40
          type: string
          format: uppercase
          example: X.ANGLES
          description: "Address Line 1-Mailing address for the owner"  
        addressLine21:
          maxLength: 40
          type: string
          format: uppercase
          example: " "
          description: "Address Line 2-Mailing address for the owner"
        addressLine31:
          maxLength: 40
          type: string
          format: uppercase
          description: "Address Line 3-Mailing address for the owner"
        addressLine41:
          maxLength: 40
          type: string
          format: uppercase
          example: " "
          description: "Address Line 4-Mailing address for the owner"
        city1:
          maxLength: 30
          type: string
          format: uppercase
          example: X
          description: "City-City portion of the mailing address of the owner"
        stateProvince1:
          maxLength: 3
          type: string
          format: uppercase
          example: X
          description: "State/Province-Abbreviation of the state or province portion of the mailingaddress of the owner"
        countryCode1:  
          maxLength: 3
          type: string
          format: uppercase
          example: X
          description: "Country Code-Thevalue entered must be a valid country code previously definedin the Security Subsystem and Common Routines (SSC) system"
        postalCode1:
          maxLength: 10
          type: string
          format: uppercase
          example: 2NN99
          description: "Postal Code-Postal code portion of the mailing address of the owner" 
        languageIndicator1:
          maxLength: 3
          type: string
          format: uppercase
          example: NNN
          description: "Language Indicator-User-defined code that indicates the language spoken by theowner."
        homePhoneNumber1:
          maxLength: 20
          type: string
          format: uppercase
          example: "1111235464447576"
          description: "Home Phone Number-that indicates the home telephone number ofthe owner"
        homePhoneFlag1:
          type: string
          example: "0"
          description: "Home Phone Flag-this field is a code that specifies whether theyou have the owner’s permission to call this number. The values 0 =No, do not contact the customer at this number,1=Yes, you can contact the customer at thisnumber (Default) 2=Preferred contact method" 
        faxNumber1:
          type: string
          example: " "
          description: "Fax Number-field that indicates the facsimile (fax) number of theowner"
        faxPhoneFlag1:
          type: string
          example: "0"
          description: "Fax Phone Flagthis field is a code that specifies whether theyou have the owner’s permission to call this number. The values 0 =No, do not contact the customer at this number,1=Yes, you can contact the customer at thisnumber (Default) 2=Preferred contact method" 
        mobileNumber1:
          maxLength: 20
          type: string
          format: uppercase
          example: "11110976234"
          description: "Mobile Number-that indicates the mobile telephone number ofthe owner"
        sMSFlag1:
          type: string
          example: "1"
          description: "SMS Flag-Code that indicates whether an SMS (short message service)message can be sent to the owner. The values are 0=No, do not contact the customer via SMS, 1=Yes, you can contact the customer via SMS(Default)"
        mobilePhoneFlag1: 
          type: string
          example: "0"
          description: "Mobile Phone Flag-this field is a code that indicates whether youhave the owner’s permission to call this number. The values are0 =No, do not contact the customer at this number,1=Yes, you can contact the customer at thisnumber (Default) 2=Preferred contact method"
        emailAddress1:  
          maxLength: 60
          type: string
          format: uppercase
          example: ABC@GMAIL
          description: "Email-that indicates the e-mail address of the owner"
    CustomerAddressUpdateResponse:
      required:
      - accountNumber
      - businessUnit
      type: object
      properties:
        businessUnit:
          type: number
          example: 100
          description: "Business Unit -Identification number of the organization associated with thisAccount Base Segment record. The values are 001–998."
        accountNumber:
          maxLength: 19
          type: string
          format: uppercase
          example: 100001NNNNN0481
          description: "CUSTOMER NUMBER - Must be numeric and greater than zero. Max length = 19. Should be a valid customer number."
        nameLine11:
          maxLength: 40
          type: string
          format: uppercase
          example: " " 
          description: "NAME-LINE 1-This field is the owner personal name, businessname, or a generic name. If the name is a personal name(type)this field displays the contents of the FIRST NAME, MIDDLENAME, and LAST NAME fields The name tyep fields are 0=Personal name (Default),1=Business name,3 = gender name"  
        nameLine21:
          maxLength: 40
          type: string
          format: uppercase
          example: " "
          description: "NAME-LINE 2-this field is the owner name. You must enternames in the correct format as defined in the Organization"
        nameLine31:
          maxLength: 40
          type: string
          format: uppercase
          example: " "
          description: "NAME-LINE 3-this field is a code that indicates the type ofname. This untitled field displays to the right of the NAME LINE 3field. The values arefields are 0=Personal name (Default),1=Business name,3 = gender name"
        houseNumber1:
          maxLength: 20
          type: string
          format: uppercase
          example: " "
          description: "HOUSE NAME-House name of the owner. The default is spaces"
        addressLine11:
          maxLength: 40
          type: string
          format: uppercase
          example: X.ANGLES
          description: "Address Line 1-Mailing address for the owner"
        addressLine21:
          maxLength: 40
          type: string
          format: uppercase
          example: " "
          description: "Address Line 2-Mailing address for the owner"
        addressLine31:
          maxLength: 40
          type: string
          format: uppercase
          example: " "
          description: "Address Line 3-Mailing address for the owner"
        addressLine41:
          maxLength: 40
          type: string
          format: uppercase
          example: " "
          description: "Address Line 4-Mailing address for the owner"
        city1:
          maxLength: 30
          type: string
          format: uppercase
          example: XXX
          description: "City-City portion of the mailing address of the owner"
        stateProvince1:
          maxLength: 3
          type: string
          format: uppercase
          example: XXX
          description: "State/Province-Abbreviation of the state or province portion of the mailingaddress of the owner"
        countryCode1:
          maxLength: 3
          type: string
          format: uppercase
          example: XXX
          description: "Country Code-Thevalue entered must be a valid country code previously definedin the Security Subsystem and Common Routines (SSC) system"
        postalCode1:
          maxLength: 10
          type: string
          format: uppercase
          example: "12345"
          description: "Postal Code-Postal code portion of the mailing address of the owner"
        languageIndicator1:
          maxLength: 3
          type: string
          format: uppercase
          example: XXX
          description: "Language Indicator-User-defined code that indicates the language spoken by theowner."
        homePhoneNumber1:
          maxLength: 20
          type: string
          format: uppercase
          example: "12345678989898"
          description: "Home Phone Number-that indicates the home telephone number ofthe owner"
        homePhoneFlag1:
          type: string
          enum:
          - '0'
          - '1'
          - '2'
          example: '0'
          description: "Home Phone Flag-this field is a code that specifies whether theyou have the owner’s permission to call this number. The values 0 =No, do not contact the customer at this number,1=Yes, you can contact the customer at thisnumber (Default) 2=Preferred contact method"
        faxNumber1:
          maxLength: 20
          type: string
          format: uppercase
          example: " "
          description: "Fax Number-field that indicates the facsimile (fax) number of theowner"
        faxPhoneFlag1:
          type: string
          enum:
          - '0'
          - '1'
          - '2' 
          example: '1'
          description: "Fax Phone Flagthis field is a code that specifies whether theyou have the owner’s permission to call this number. The values 0 =No, do not contact the customer at this number,1=Yes, you can contact the customer at thisnumber (Default) 2=Preferred contact method"
        mobileNumber1:
          maxLength: 20
          type: string
          format: uppercase
          example: "12345678901"
          description: "Mobile Number-that indicates the mobile telephone number ofthe owner"
        sMSFlag1:
          type: string
          enum:
          - '0'
          - '1'
          example: '1'
          description: "SMS Flag-Code that indicates whether an SMS (short message service)message can be sent to the owner. The values are 0=No, do not contact the customer via SMS, 1=Yes, you can contact the customer via SMS(Default)"
        mobilePhoneFlag1:
          type: string
          enum:
          - '0'
          - '1' 
          - '2'
          example: '1'
          description: "Mobile Phone Flag-this field is a code that indicates whether youhave the owner’s permission to call this number. The values are0 =No, do not contact the customer at this number,1=Yes, you can contact the customer at thisnumber (Default) 2=Preferred contact method"
        emailAddress1:
          maxLength: 60
          type: string
          format: uppercase
          example: ABC@GMAIL
          description: "Email-that indicates the e-mail address of the owner"
    CustomerAddressUpdateReq:
      required:
      - accountNumber
      - businessUnit
      - homePhoneNumber1
      - mobileNumber1
      - emailAddress1
      type: object
      properties:
        businessUnit:
          type: number
          example: 100
          description: "Business Unit -Identification number of the organization associated with thisAccount Base Segment record. The values are 001–998."
        accountNumber:
          maxLength: 19
          type: string
          format: uppercase
          description: "CUSTOMER NUMBER - Must be numeric and greater than zero. Max length = 19. Should be a valid customer number."
          example: 100001NNNNN0481
        homePhoneNumber1:
          maxLength: 20
          type: string
          format: uppercase
          description: "Home Phone Number-that indicates the home telephone number ofthe owner"
          example: "123456788999346"
        mobileNumber1:
          maxLength: 20
          type: string
          format: uppercase
          description: "Mobile Number-that indicates the mobile telephone number ofthe owner."
          example: "111109701444"
        emailAddress1:
          maxLength: 60
          type: string
          format: uppercase
          description: "Email-that indicates the e-mail address of the owner"
          example: ABC@GMAIL 
    CustomerAccountListResp:
      type: object
      properties:
        businessUnit:
          maximum: 999
          minimum: 0
          type: number
          description: Identification number associated with this Account Base Segment
            record
          example: 100
        customerNumber:
          type: string
          description: Customer ID assigned to the customer
          format: uppercase
          example: '0001000000333113902'
        customerName:
          type: string
          description: Name of the Customer
          format: uppercase
          example: UATMFNXCX48
        sSNID:
          type: string
          description: SSN ID of the Customer
          format: uppercase
          example: 1139XX
        dateofBirth:
          type: string
          description: Date of Birth of the Customer
          format: date
          example: 00/00/0000
        nameLine1:
          type: string
          description: First Name of the Customer
          format: uppercase
          example: UATMFNCU448 TWOPPPUAXXXNCUST448
        addressLine1:
          type: string
          description: Address line 1 of the Customer
          format: uppercase
          example: 62 CHARTERIS DR
        addressLine2:
          type: string
          description: Address Line 2 of the Customer
          format: uppercase
          example: ''
        addressLine3:
          type: string
          description: Address Line 3 of the Customer
          format: uppercase
          example: ''
        addressLine4:
          type: string
          description: Address Line 4 of the Customer
          format: uppercase
          example: ''
        homeDistricName:
          type: string
          description: Home Distric Name of the Customer
          format: uppercase
          example: ''
        emailAddress:
          type: string
          description: Email Address of the Customer
          format: uppercase
          example: UATMXXXU448@GMAIL.COM
        homePhoneNumber:
          type: string
          description: Home Phone Number of the Customer
          format: uppercase
          example: ++61430010000
        workPhoneNumber:
          type: string
          description: Work Phone Number of the Customer
          format: uppercase
          example: ++61430010000
        mobileNumber:
          type: string
          description: Mobile Number of the Customer
          format: uppercase
          example: ++61430010000
        numberofCards:
          type: string
          description: Number of Cards associated with the Customer
          format: uppercase
          example: '1'
        numberofAccounts:
          type: string
          description: Number of Accounts associated with the Customer
          format: uppercase
          example: '1'
        userDefinedField4:
          type: string
          description: User Defined Field 4
          format: uppercase
          example: ''
        accountList:
          type: array
          items:
            properties:
              businessUnit:
                maximum: 999
                minimum: 0
                type: number
                description: Identification number associated with this Account Base Segment record
                example: 100.0
              accountNumber:
                type: string
                description: Account ID assigned to the customer for a given product
                format: uppercase
                example: "0001000011000050008"
              product:
                maximum: 999
                minimum: 0
                type: number
                description: Product associated with the Card
                example: 1.0
              blockCode1:
                type: string
                description: Block Code 1 on the account
                format: uppercase
                example: ' '
              blockCode2:
                type: string
                description: Block Code 2 on the account
                format: uppercase
                example: ' '
              blockCode1Date:
                type: string
                description: Date the Block Code 1 is applied
                format: date
              blockCode2Date:
                type: string
                description: Date the Block Code 2 is applied
                format: date 
              internalStatus:
                type: string
                description: Status of the account
                example: D
                enum:
                  - N
                  - A
                  - F
                  - D
                  - I
                  - M
                  - Z
                  - B
                  - C
                  - V
                  - X
                  - Q
                  - T
                  - R
                  - K
                  - J
                  - "8"
                  - "9"
                  - P
                  - H
              amountMemoDebit:
                type: string
                description: Amount of Debit Authorization that holds the Open to Buy
                example: $0.00
                default: "0.0" 
              amountMemoCredit:
                type: string
                description: Amount of Credit Authorization applied on hte account
                example: $0.00
                default: "0.0"
              mailingIndicator:
                type: string
                description: Mailing Indicator for sending mails to either Office Address or Home Address
                example: " "
                enum:
                - H
                - O
              sUPPRESSTOKEN:
                type: string
                description: Flag to supporess the wallet token creation
                example: "0"
                enum:
                - "0"
                - "1"
              rEISSCONTOLMETHOD:
                maximum: 9
                minimum: 0
                type: number
                description: Flag to indicate method to reissue
                example: 0.0
              nbrOfTokenizedCards:
                maximum: 99
                minimum: 0
                type: number
                description: Number of wallet cards associated with account
                example: 0.0
              ddaAccountNumber:
                type: string
                description: Debit Account number associated with the account
                format: uppercase
                example: "999999999"
    CustomerCardListResp:
      type: object
      properties:
        businessUnit:
          maximum: 999
          minimum: 0
          type: number
          description: Identification number associated with this Account Base Segment record
          example: 100.
        customerNumber:
          type: string
          description: Customer ID assigned to the customer
          format: uppercase
          example: "0001000000333113902"
        customerName:
          type: string
          description: Name of the Customer
          format: uppercase
          example: UATMFNXCX48
        sSNID:
          type: string
          description: SSN ID of the Customer
          format: uppercase
          example: '1139XX'
        dateofBirth:
          type: string
          description: Date of Birth of the Customer
          format: date
          example: "00/00/0000"
        nameLine1:
          type: string
          description: First Name of the Customer
          format: uppercase
          example: UATMFNCU448 TWOPPPUAXXXNCUST448
        addressLine1:
          type: string
          description: Address line 1 of the Customer
          format: uppercase
          example: 62 CHARTERIS DR
        addressLine2:
          type: string
          description: Address Line 2 of the Customer
          format: uppercase
          example: ""
        addressLine3:
          type: string
          description: Address Line 3 of the Customer
          format: uppercase
          example: ""
        addressLine4:
          type: string
          description: Address Line 4 of the Customer
          format: uppercase
          example: ""
        homeDistricName:
          type: string
          description: Home Distric Name of the Customer
          format: uppercase
          example: ""
        emailAddress:
          type: string
          description: Email Address of the Customer
          format: uppercase
          example: UATMXXXU448@GMAIL.COM
        homePhoneNumber:
          type: string
          description: Home Phone Number of the Customer
          format: uppercase
          example: ++61430010000 
        workPhoneNumber:
          type: string
          description: Work Phone Number of the Customer
          format: uppercase
          example: ++61430010000
        mobileNumber:
          type: string
          description: Mobile Number of the Customer
          format: uppercase
          example: ++61430010000
        numberofCards:
          type: string
          description: Number of Cards associated with the Customer
          format: uppercase
          example: "1"
        numberofAccounts:
          type: string
          description: Number of Accounts associated with the Customer
          format: uppercase
          example: "1" 
        userDefinedField4:
          type: string
          description: User Defined Field 4
          format: uppercase
          example: ""
        cardList:
          type: array
          items:
            properties:
              businessUnit:
                maximum: 999
                minimum: 0
                type: number
                description: Identification number associated with this Account Base Segment record
                example: 100.0
              cardNumber:
                type: string
                description: Alterante Card ID associated with the account
                format: uppercase
                example: "0009846999010009405"
              cardSequence:
                maximum: 9999
                minimum: 0
                type: number
                description: Sequence of the card ID
                example: 1.0
              posttoAccount:
                type: string
                description: Account to which the card is linked
                format: uppercase
                example: "000100001100000068"
              nameOnCard:
                type: string
                description: Embossed Name On Card
                format: uppercase
                example: U T UATMLNCUS9999
              product:
                maximum: 999
                minimum: 0
                type: number
                description: Product associated with the Card
                example: 1.0
              productDescription:
                type: string
                description: Description of the Card
                format: uppercase
                example: VISA XXXXXXXX DEBIT
              cardholderType:
                maximum: 9
                minimum: 0
                type: number
                description: Type of Cardholder - Main or Supplementary
                example: 1.0
              dateOpened:
                type: string
                description: Date the Card is issued
                format: date
              embosserRecordStatus:
                type: string
                description: Status of the card
                example: "0"
                enum:
                - "0"
                - "1"
                - F
                - S
                - T
                - P
                - ' '
              blockCode:
                type: string
                description: Block Code on the card
                format: uppercase
                example: ' '
              blockDate:
                type: string
                description: Date the Block Code is assigned on the card
                format: date
              currentCardNeedActivation:
                type: string
                description: Current Card Activation Status
                format: uppercase
                example: Y
              currCardAction:
                type: string
                description: Current Embossing Action requested on the card
                example: "0"
                enum:
                - "0"
                - "1"
                - "2"
                - "3"
                - "4"
                - "5"
                - "6"
                - "7"
                - "8"
                - "9"
              lastCardAction:
                type: string
                description: Last Embossing Action requested on the card
                example: "1"
                enum:
                - "0"
                - "1"
                - "2"
                - "3"
                - "4"
                - "5"
                - "6"
                - "7"
                - "8"
                - "9" 
              cardActivatedDate:
                type: string
                description: Date the card is activated
                format: date
              cardTechnology:
                type: string
                description: Technology (chip / magnetic / contactless) used to emboss the card
                example: "3"
                enum:
                - "0"
                - "1"
                - "3"
                - "5"
                - "2"
                - "4"
              cardIssueDate:
                type: string
                description: Date the Card is Issued
                format: date
              warningCode:
                type: string
                description: Warning Code applied to the card
                format: uppercase
                example: "0"
              lastCardExpirationDate:
                type: string
                description: Expiration Date of the last card issued to cardholder
                format: date
              lastCardNeedActivation:
                type: string
                description: Last Card Need Activation
                format: uppercase
                example: Y
              timeLastPlasticIssue:
                maximum: 9999999
                minimum: -9999999
                type: number
                description: Last Card Activation Status
                example: 0.0
              maskCardnumber:
                type: string
                description: Mask Card number of the actual card number associated with the card Id
                format: uppercase
                example: 000XXXXXXX
              pinoffset:
                type: string
                description: Pin offset
                format: uppercase
                example: "3290000"
              numberofcards:
                type: string
                description: Number of wallet token associated with card
                format: uppercase
                example: "0"
              digitalid:
                type: string
                description: digital id of the wallet
                format: uppercase
                example: '  '
              mOTOFlag:
                type: string
                description: Flag to determine MOTO transaction is allowed
                format: uppercase
                example: '   '
              pAYwaveFlag:
                type: string
                description: Flag for Paywave usage
                format: uppercase
                example: Y
              iNTATMPOSFlag:
                type: string
                description: Flag for international ATM POS usage
                format: uppercase
                example: Y
              cashBackTranFlag:
                type: string
                description: Flag for cashback usage
                format: uppercase
                example: Y
              cHEQUEACCOUNTNBR:
                type: string
                description: Checking Account number associated with the card (Debit Card Only)
                format: uppercase
                example: '   '
              sAVINGSACCOUNTNBR:
                type: string
                description: Saving Account number associated with the card (Debit Card Only)
                format: uppercase
                example: '   '
              dATELASTPLASTICUSED:
                type: string
                description: Date the last plastic is used
                format: uppercase
                example: "0"
              dATELASTWALLETUSED:
                type: string
                description: Date the last wallet associated with card is used
                format: uppercase
                example: "0"		
              dATELASTPLASTICSUPRESED:
                type: string
                description: Date the last plastic usage is suppressed
                format: uppercase
                example: "0"
              pLASTICSUPPRESSSTATUS:
                type: string
                description: Flag for plastic usage suppression
                format: uppercase
                example: N
              aTMFlag:
                type: string
                description: Flag for ATM usage
                format: uppercase
                example: Y
              pOSFlag:
                type: string
                description: Flag for POS usage
                format: uppercase
                example: Y
              e-COMACTFlag:
                type: string
                description: Flag for e-commerce usage
                format: uppercase
                example: "1"
              eMBRNAME2:
                type: string
                description: Embossed Name-2 on the Card
                format: uppercase
                example: '   '
              mCCLIMIT-1:
                type: string
                description: Occurence-1 of the MCC limit applied on the Card
                example: $0.01
                default: "0.0"
              mCCLIMIT-2:
                type: string
                description: Occurence-2 of the MCC limit applied on the Card
                example: $0.01
                default: "0.0"
              mCCLIMIT-3:
                type: string
                description: Occurence-3 of the MCC limit applied on the Card
                example: $0.01
                default: "0.0"
              mCCLIMIT-4:
                type: string
                description: Occurence-4 of the MCC limit applied on the Card
                example: $0.01
                default: "0.0"
              mCCLIMIT-5:
                type: string
                description: Occurence-5 of the MCC limit applied on the Card
                example: $0.01
                default: "0.0"
              mCCLIMIT-6:
                type: string
                description: Occurence-6 of the MCC limit applied on the Card
                example: $0.01
                default: "0.0"
              mCCLIMIT-7:
                type: string
                description: Occurence-7 of the MCC limit applied on the Card
                example: $0.01
                default: "0.0"
              mCCLIMIT-8:
                type: string
                description: Occurence-8 of the MCC limit applied on the Card
                example: $0.01
                default: "0.0"
              mCCLIMIT-9:
                type: string
                description: Occurence-9 of the MCC limit applied on the Card
                example: $0.01
                default: "0.0"
              mCCLIMIT-10:
                type: string
                description: Occurence-10 of the MCC limit applied on the Card
                example: $0.01
                default: "0.0"
    ErrorList:
      type: array
      items:
        type: object
        properties:
          errorCode:
            type: string
            example:  XXXXXXXX
            description: Error code associated with the response
          errorMessage:
            type: string
            example: Some message from the service
            description: Error message associated with the response
  examples:
    AddressInquiryResponse:
      value: { nameLine31: '', nameLine11: '', nameLine21: '' , businessUnit: 100 , accountNumber: '0001000000000150191', houseNumber1: ' ', addressLine11: '80.ANGLES', addressLine21: '', addressLine31: '', addressLine41: '', city1: 'US', stateProvince1: 'USA', countryCode1: 'USA', postalCode1: '27899', languageIndicator1: 'AUS', homePhoneNumber1: '123456788999999', homePhoneFlag1: '0', faxNumber1: '', faxPhoneFlag1: '0', mobileNumber1: '11110976444', sMSFlag1: '0', mobilePhoneFlag1: '0', emailAddress1: 'SAM@GMAIL'}
    AddressUpdateReq:
      value: { businessUnit: 100, accountNumber: '0001000000000150191', homePhoneNumber1: '123456788999999',   mobileNumber1: '11110976444', emailAddress1: 'SAM@GMAIL.COM'}
    AddressUpdateResponse:
      value: { businessUnit: 100, accountNumber: '0001000000000150191', nameLine11: '', nameLine21: '', nameLine31: '', houseNumber1: '', addressLine11: '80.ANGLES', addressLine21: '', addressLine31: '', addressLine41: '', city1: 'US', stateProvince1: 'USA', countryCode1: 'USA', postalCode1: '27899', languageIndicator1: 'AUS', homePhoneNumber1: '123456788999999', homePhoneFlag1: '0', faxNumber1: '', faxPhoneFlag1: '0', mobileNumber1: '11110976444', sMSFlag1: '0',mobilePhoneFlag1: '0', emailAddress1: 'SAM@GMAIL' }
    
    400-Errors:
      value:
        erorrCode: XXXXXXXX
        errorMessage: Some message from the service
    401-Errors:
      value:
        erorrCode: XXXXXXXX
        errorMessage: Some message from the service
    404-Errors:
      value:
        erorrCode: XXXXXXXX
        errorMessage: Some message from the service
    500-Errors:
      value:
        erorrCode: XXXXXXXX
        errorMessage: Some message from the service
    503-Errors:
      value:
        erorrCode: XXXXXXXX
        errorMessage: Some message from the service
    504-Errors:
      value:
        erorrCode: XXXXXXXX
        errorMessage: Some message from the service
