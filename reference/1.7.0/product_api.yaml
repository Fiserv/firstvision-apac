openapi: 3.0.1
info:
  title: Vision10 API Documentation
  description: V10 open API document.
  version: 1.7.0
servers:
- url: https://stg34.visionplus.io/sandbox/
tags:
- name: Product Management
paths:
  /v1/products/{productId}/cardControls:
    put:
      tags:
      - Product Management
      summary: Update Product Card Controls
      description: This API is used to update card control restriction flags and spend
        limits for a given product Id. This API can be invoked with a business unit
        and product Id.
      operationId: UpdateProductCardControls
      parameters:
      - name: Authorization
        in: header
        description: Token is used in token-based authentication to allow an application
          to access an API.
        required: true
        schema:
          maxLength: 1200
          type: string
          example: Bearer eyJhbGciOiJSUzI1NiJ9.eyJzY29wZSI6ImFsbCIsImNsaWVudF9pZCI6InZpc2lvbi1hcGktdXNlciIsImZpcnN0VmlzaW9uSWQiOiIwMDAwMEFVTkFCIiwiZXhwIjoxNzUwMzkyMDAwfQ.O6ZW0FnlWN09GqPeTEgWTQ9Gq6LPyt7BWTx65z7a0DKJQWBZ-pz29NX9xcuk-1ZdoLbKd_jPpwLNYGfS4KsuOLz1tQj1-teV2JO10DHxxthlG1-IGUIMyI5MivzNFlvLEG6TipqdQd3WdNl2juqlHKpDY86N0Z_Fg3n9igw4pFDzdGpHle5_4vGnl9PkYBA_WoWtgic05_63s5j6kmWbPkrV22NsHtOjJIh0sN1Q7sArecVnJCI7mwGVC5xasLGTO-Nn3hx6r8Y2mBv1Fv39LO_rUYcaK1RXS_xkoJV_3NdopGgfq4hp9F0naCKWxUxW1oaCaGCqk3p6xhkyDsJgaQ
      - name: x-client-correlation-id
        in: header
        description: Client specified identifier to correlate the request with the
          response of the API within their application. Any value passed in the request
          message will be return back as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-trace-id
        in: header
        description: Client specified trace-id to track the request within their application.
          Any value passed in the request message will be return back as-is in the
          API response message.
        required: false
        schema:
          maxLength: 256
          type: string
          example: ABC123
      - name: x-client-source-channel
        in: header
        description: Client specified identifier of the channel that initiated the
          API request. Any value passed in the request message will be return back
          as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-user-id
        in: header
        description: Client specified identifier of their user** that initiated the
          API request.  Any value passed in the request message will be return back
          as-is in the API response message.<BR><BR><i>**The value passed in this
          field will not be used for any Identity and access management</i>
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: businessUnit
        in: query
        description: Unique identification number associated with the organization.
          Valid values from 1-998.
        required: true
        schema:
          maximum: 999
          maxLength: 3
          type: integer
          example: '600'
      - name: productId
        in: path
        description: Unique identification number of the product associated with the
          organization. Valid values from 1-998.
        required: true
        schema:
          maximum: 999
          maxLength: 3
          type: integer
          example: '1'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductCardControlV1ReqModel'
        required: true
      responses:
        '400':
          description: " \nThe request cannot be validated"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '401':
          description: " \nThe request was unauthorized"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '404':
          description: " \nThe request resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '503':
          description: " \nThe service was unavailable"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '504':
          description: " \nThe request timed out while waiting for a response"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '403':
          description: " \nThe request resource is forbidden for user"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '200':
          description: " \nSuccess"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProductCardControlV1ResponseModel'
        '500':
          description: " \nAn unexpected internal server error occurred"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '422':
          description: " \nThe request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
      security:
      - Authorization: [
          ]
      x-proxy-name: Update Product Card Controls
      x-group-name: Product Management
  /v1/products/{productId}/serviceChargeDetails:
    get:
      tags:
      - Product Management
      summary: Inquire Service Charge Table
      description: 'This API is used to fetch various service fee details available
        in the system for a given business unit, product Id and table ID combination.
        The parameters for a Service Charge/Fee table fall into five general categories:
        penalty fees, periodic fees, service fees, user fees, and prepaid fees etc.'
      operationId: InquireServiceChargeTable
      parameters:
      - name: Authorization
        in: header
        description: Token is used in token-based authentication to allow an application
          to access an API.
        required: true
        schema:
          maxLength: 1200
          type: string
          example: Bearer eyJhbGciOiJSUzI1NiJ9.eyJzY29wZSI6ImFsbCIsImNsaWVudF9pZCI6InZpc2lvbi1hcGktdXNlciIsImZpcnN0VmlzaW9uSWQiOiIwMDAwMEFVTkFCIiwiZXhwIjoxNzUwMzkyMDAwfQ.O6ZW0FnlWN09GqPeTEgWTQ9Gq6LPyt7BWTx65z7a0DKJQWBZ-pz29NX9xcuk-1ZdoLbKd_jPpwLNYGfS4KsuOLz1tQj1-teV2JO10DHxxthlG1-IGUIMyI5MivzNFlvLEG6TipqdQd3WdNl2juqlHKpDY86N0Z_Fg3n9igw4pFDzdGpHle5_4vGnl9PkYBA_WoWtgic05_63s5j6kmWbPkrV22NsHtOjJIh0sN1Q7sArecVnJCI7mwGVC5xasLGTO-Nn3hx6r8Y2mBv1Fv39LO_rUYcaK1RXS_xkoJV_3NdopGgfq4hp9F0naCKWxUxW1oaCaGCqk3p6xhkyDsJgaQ
      - name: x-client-correlation-id
        in: header
        description: Client specified identifier to correlate the request with the
          response of the API within their application. Any value passed in the request
          message will be return back as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-trace-id
        in: header
        description: Client specified trace-id to track the request within their application.
          Any value passed in the request message will be return back as-is in the
          API response message.
        required: false
        schema:
          maxLength: 256
          type: string
          example: ABC123
      - name: x-client-source-channel
        in: header
        description: Client specified identifier of the channel that initiated the
          API request. Any value passed in the request message will be return back
          as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-user-id
        in: header
        description: Client specified identifier of their user** that initiated the
          API request.  Any value passed in the request message will be return back
          as-is in the API response message.<BR><BR><i>**The value passed in this
          field will not be used for any Identity and access management</i>
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: businessUnit
        in: query
        description: Unique identification number associated with the organization.
          Valid values from 1-998.
        required: true
        schema:
          maximum: 999
          maxLength: 3
          type: integer
          example: '600'
      - name: productId
        in: path
        description: Unique identification number of the product associated with the
          organization. If the table is defined at organization level, populate this
          field as zeroes. For tables defined at product level, valid values are 0-998.
        required: true
        schema:
          maximum: 999
          maxLength: 3
          type: integer
          example: '0'
      - name: tableId
        in: query
        description: Identification number of the Service Charge/Fee table. The values
          are 1–998.
        required: true
        schema:
          maximum: 999
          maxLength: 3
          type: integer
          example: '3'
      responses:
        '400':
          description: " \nThe request cannot be validated"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '401':
          description: " \nThe request was unauthorized"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '200':
          description: " \nSuccess"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InquireServiceChargeTableV1ResponseModel'
        '404':
          description: " \nThe request resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '503':
          description: " \nThe service was unavailable"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '504':
          description: " \nThe request timed out while waiting for a response"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '403':
          description: " \nThe request resource is forbidden for user"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '500':
          description: " \nAn unexpected internal server error occurred"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '422':
          description: " \nThe request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
      security:
      - Authorization: [
          ]
      x-proxy-name: Inquire Service Charge Table
      x-group-name: Product Management
  /v1/products/{productId}/interestTable:
    get:
      tags:
      - Product Management
      summary: Inquire Interest Table
      description: This API is used to fetch details of Interest Table. An Interest
        table identifies a set of parameters which include interest controls, interest
        rounding detail, interest calculation options, interest rates detail, balances
        for interest calculation and interest parameters for combined grace and cycle
        options.
      operationId: InquireInterestTable
      parameters:
      - name: Authorization
        in: header
        description: Token is used in token-based authentication to allow an application
          to access an API.
        required: true
        schema:
          maxLength: 1200
          type: string
          example: Bearer eyJhbGciOiJSUzI1NiJ9.eyJzY29wZSI6ImFsbCIsImNsaWVudF9pZCI6InZpc2lvbi1hcGktdXNlciIsImZpcnN0VmlzaW9uSWQiOiIwMDAwMEFVTkFCIiwiZXhwIjoxNzUwMzkyMDAwfQ.O6ZW0FnlWN09GqPeTEgWTQ9Gq6LPyt7BWTx65z7a0DKJQWBZ-pz29NX9xcuk-1ZdoLbKd_jPpwLNYGfS4KsuOLz1tQj1-teV2JO10DHxxthlG1-IGUIMyI5MivzNFlvLEG6TipqdQd3WdNl2juqlHKpDY86N0Z_Fg3n9igw4pFDzdGpHle5_4vGnl9PkYBA_WoWtgic05_63s5j6kmWbPkrV22NsHtOjJIh0sN1Q7sArecVnJCI7mwGVC5xasLGTO-Nn3hx6r8Y2mBv1Fv39LO_rUYcaK1RXS_xkoJV_3NdopGgfq4hp9F0naCKWxUxW1oaCaGCqk3p6xhkyDsJgaQ
      - name: x-client-correlation-id
        in: header
        description: Client specified identifier to correlate the request with the
          response of the API within their application. Any value passed in the request
          message will be return back as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-trace-id
        in: header
        description: Client specified trace-id to track the request within their application.
          Any value passed in the request message will be return back as-is in the
          API response message.
        required: false
        schema:
          maxLength: 256
          type: string
          example: ABC123
      - name: x-client-source-channel
        in: header
        description: Client specified identifier of the channel that initiated the
          API request. Any value passed in the request message will be return back
          as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-user-id
        in: header
        description: Client specified identifier of their user** that initiated the
          API request.  Any value passed in the request message will be return back
          as-is in the API response message.<BR><BR><i>**The value passed in this
          field will not be used for any Identity and access management</i>
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: tableId
        in: query
        description: Identification number of the Interest table. The values are 1–998.
        required: true
        schema:
          maximum: 999
          maxLength: 3
          type: integer
          example: '1'
      - name: businessUnit
        in: query
        description: Unique identification number associated with the organization.
          Valid values from 1-998.
        required: true
        schema:
          maximum: 999
          maxLength: 3
          type: integer
          example: '600'
      - name: productId
        in: path
        description: Unique identification number of the product associated with the
          organization. If the table is defined at organization level, populate this
          field as zeroes. For tables defined at product level, valid values are 0-998.
        required: true
        schema:
          maximum: 999
          maxLength: 3
          type: integer
          example: '0'
      responses:
        '400':
          description: " \nThe request cannot be validated"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '401':
          description: " \nThe request was unauthorized"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '404':
          description: " \nThe request resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '200':
          description: " \nSuccess"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InquireInterestTableV1ResponseModel'
        '503':
          description: " \nThe service was unavailable"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '504':
          description: " \nThe request timed out while waiting for a response"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '403':
          description: " \nThe request resource is forbidden for user"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '500':
          description: " \nAn unexpected internal server error occurred"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '422':
          description: " \nThe request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
      security:
      - Authorization: [
          ]
      x-proxy-name: Inquire Interest Table
      x-group-name: Product Management
  /v1/products/{productId}/details:
    get:
      tags:
      - Product Management
      summary: Inquire Product
      description: This API is used to fetch details for a given product Id. Products
        are primary control records that gives client option to enable or disable
        various functionalities like Card activation, PIN mailer, Loan feature, Collections,
        Loyalty, Falcon, Alerts etc.
      operationId: InquireProduct
      parameters:
      - name: Authorization
        in: header
        description: Token is used in token-based authentication to allow an application
          to access an API.
        required: true
        schema:
          maxLength: 1200
          type: string
          example: Bearer eyJhbGciOiJSUzI1NiJ9.eyJzY29wZSI6ImFsbCIsImNsaWVudF9pZCI6InZpc2lvbi1hcGktdXNlciIsImZpcnN0VmlzaW9uSWQiOiIwMDAwMEFVTkFCIiwiZXhwIjoxNzUwMzkyMDAwfQ.O6ZW0FnlWN09GqPeTEgWTQ9Gq6LPyt7BWTx65z7a0DKJQWBZ-pz29NX9xcuk-1ZdoLbKd_jPpwLNYGfS4KsuOLz1tQj1-teV2JO10DHxxthlG1-IGUIMyI5MivzNFlvLEG6TipqdQd3WdNl2juqlHKpDY86N0Z_Fg3n9igw4pFDzdGpHle5_4vGnl9PkYBA_WoWtgic05_63s5j6kmWbPkrV22NsHtOjJIh0sN1Q7sArecVnJCI7mwGVC5xasLGTO-Nn3hx6r8Y2mBv1Fv39LO_rUYcaK1RXS_xkoJV_3NdopGgfq4hp9F0naCKWxUxW1oaCaGCqk3p6xhkyDsJgaQ
      - name: x-client-correlation-id
        in: header
        description: Client specified identifier to correlate the request with the
          response of the API within their application. Any value passed in the request
          message will be return back as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-trace-id
        in: header
        description: Client specified trace-id to track the request within their application.
          Any value passed in the request message will be return back as-is in the
          API response message.
        required: false
        schema:
          maxLength: 256
          type: string
          example: ABC123
      - name: x-client-source-channel
        in: header
        description: Client specified identifier of the channel that initiated the
          API request. Any value passed in the request message will be return back
          as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-user-id
        in: header
        description: Client specified identifier of their user** that initiated the
          API request.  Any value passed in the request message will be return back
          as-is in the API response message.<BR><BR><i>**The value passed in this
          field will not be used for any Identity and access management</i>
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: businessUnit
        in: query
        description: Unique identification number associated with the organization.
          Valid values from 1-998.
        required: true
        schema:
          maximum: 999
          maxLength: 3
          type: integer
          example: '600'
      - name: productId
        in: path
        description: Unique identification number of the product associated with the
          organization. Valid values are 1-998.
        required: true
        schema:
          maximum: 999
          maxLength: 3
          type: integer
          example: '1'
      responses:
        '400':
          description: " \nThe request cannot be validated"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '401':
          description: " \nThe request was unauthorized"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '200':
          description: " \nSuccess"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InquireProductV1ResponseModel'
        '404':
          description: " \nThe request resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '503':
          description: " \nThe service was unavailable"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '504':
          description: " \nThe request timed out while waiting for a response"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '403':
          description: " \nThe request resource is forbidden for user"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '500':
          description: " \nAn unexpected internal server error occurred"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '422':
          description: " \nThe request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
      security:
      - Authorization: [
          ]
      x-proxy-name: Inquire Product
      x-group-name: Product Management
  /v1/products/{productId}/blockCodeMatrix:
    get:
      tags:
      - Product Management
      summary: Inquire Block Code Matrix
      description: This API is used to fetch controls defined for each block code
        at product level.
      operationId: InquireBlockCodeMatrix
      parameters:
      - name: Authorization
        in: header
        description: Token is used in token-based authentication to allow an application
          to access an API.
        required: true
        schema:
          maxLength: 1200
          type: string
          example: Bearer eyJhbGciOiJSUzI1NiJ9.eyJzY29wZSI6ImFsbCIsImNsaWVudF9pZCI6InZpc2lvbi1hcGktdXNlciIsImZpcnN0VmlzaW9uSWQiOiIwMDAwMEFVTkFCIiwiZXhwIjoxNzUwMzkyMDAwfQ.O6ZW0FnlWN09GqPeTEgWTQ9Gq6LPyt7BWTx65z7a0DKJQWBZ-pz29NX9xcuk-1ZdoLbKd_jPpwLNYGfS4KsuOLz1tQj1-teV2JO10DHxxthlG1-IGUIMyI5MivzNFlvLEG6TipqdQd3WdNl2juqlHKpDY86N0Z_Fg3n9igw4pFDzdGpHle5_4vGnl9PkYBA_WoWtgic05_63s5j6kmWbPkrV22NsHtOjJIh0sN1Q7sArecVnJCI7mwGVC5xasLGTO-Nn3hx6r8Y2mBv1Fv39LO_rUYcaK1RXS_xkoJV_3NdopGgfq4hp9F0naCKWxUxW1oaCaGCqk3p6xhkyDsJgaQ
      - name: x-client-correlation-id
        in: header
        description: Client specified identifier to correlate the request with the
          response of the API within their application. Any value passed in the request
          message will be return back as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-trace-id
        in: header
        description: Client specified trace-id to track the request within their application.
          Any value passed in the request message will be return back as-is in the
          API response message.
        required: false
        schema:
          maxLength: 256
          type: string
          example: ABC123
      - name: x-client-source-channel
        in: header
        description: Client specified identifier of the channel that initiated the
          API request. Any value passed in the request message will be return back
          as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-user-id
        in: header
        description: Client specified identifier of their user** that initiated the
          API request.  Any value passed in the request message will be return back
          as-is in the API response message.<BR><BR><i>**The value passed in this
          field will not be used for any Identity and access management</i>
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: businessUnit
        in: query
        description: Unique identification number associated with the organization.
          Valid values from 1-998.
        required: true
        schema:
          maximum: 999
          maxLength: 3
          type: integer
          example: '700'
      - name: productId
        in: path
        description: Unique identification number of the product associated with the
          organization. Valid values are 1-998.
        required: true
        schema:
          maximum: 999
          maxLength: 3
          type: integer
          example: '1'
      responses:
        '200':
          description: " \nSuccess"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InquireBlockCodeMatrixV1ResponseModel'
        '400':
          description: " \nThe request cannot be validated"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '401':
          description: " \nThe request was unauthorized"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '404':
          description: " \nThe request resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '503':
          description: " \nThe service was unavailable"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '504':
          description: " \nThe request timed out while waiting for a response"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '403':
          description: " \nThe request resource is forbidden for user"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '500':
          description: " \nAn unexpected internal server error occurred"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '422':
          description: " \nThe request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
      security:
      - Authorization: [
          ]
      x-proxy-name: Inquire Block Code Matrix
      x-group-name: Product Management
  /v1/products/{planId}/planDetails:
    get:
      tags:
      - Product Management
      summary: Inquire Plan Master
      description: This API is used to fetch plan details for a given plan Id. Plan
        Ids are control entities that will be defined at the business unit level.
        Plans are defined to specify the various methods that are being offered to
        the customer. It will contain information like description, interest table
        override options, cancellation or expiry parameters based on account's performance
        etc.
      operationId: InquirePlanMaster
      parameters:
      - name: Authorization
        in: header
        description: Token is used in token-based authentication to allow an application
          to access an API.
        required: true
        schema:
          maxLength: 1200
          type: string
          example: Bearer eyJhbGciOiJSUzI1NiJ9.eyJzY29wZSI6ImFsbCIsImNsaWVudF9pZCI6InZpc2lvbi1hcGktdXNlciIsImZpcnN0VmlzaW9uSWQiOiIwMDAwMEFVTkFCIiwiZXhwIjoxNzUwMzkyMDAwfQ.O6ZW0FnlWN09GqPeTEgWTQ9Gq6LPyt7BWTx65z7a0DKJQWBZ-pz29NX9xcuk-1ZdoLbKd_jPpwLNYGfS4KsuOLz1tQj1-teV2JO10DHxxthlG1-IGUIMyI5MivzNFlvLEG6TipqdQd3WdNl2juqlHKpDY86N0Z_Fg3n9igw4pFDzdGpHle5_4vGnl9PkYBA_WoWtgic05_63s5j6kmWbPkrV22NsHtOjJIh0sN1Q7sArecVnJCI7mwGVC5xasLGTO-Nn3hx6r8Y2mBv1Fv39LO_rUYcaK1RXS_xkoJV_3NdopGgfq4hp9F0naCKWxUxW1oaCaGCqk3p6xhkyDsJgaQ
      - name: x-client-correlation-id
        in: header
        description: Client specified identifier to correlate the request with the
          response of the API within their application. Any value passed in the request
          message will be return back as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-trace-id
        in: header
        description: Client specified trace-id to track the request within their application.
          Any value passed in the request message will be return back as-is in the
          API response message.
        required: false
        schema:
          maxLength: 256
          type: string
          example: ABC123
      - name: x-client-source-channel
        in: header
        description: Client specified identifier of the channel that initiated the
          API request. Any value passed in the request message will be return back
          as-is in the API response message.
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: x-client-user-id
        in: header
        description: Client specified identifier of their user** that initiated the
          API request.  Any value passed in the request message will be return back
          as-is in the API response message.<BR><BR><i>**The value passed in this
          field will not be used for any Identity and access management</i>
        required: false
        schema:
          maxLength: 40
          type: string
          example: ABC123
      - name: businessUnit
        in: query
        description: Unique identification number associated with the organization.
          Valid values from 1-998.
        required: true
        schema:
          maximum: 999
          maxLength: 3
          type: integer
          example: '600'
      - name: planId
        in: path
        description: Identification number of the Credit Plan Master entity. The values
          are 1–99998. You can establish as many as 99,998 Credit Plan Master entity
          for each organization.
        required: true
        schema:
          maximum: 99999
          maxLength: 5
          type: integer
          example: '10002'
      responses:
        '400':
          description: " \nThe request cannot be validated"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '401':
          description: " \nThe request was unauthorized"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '200':
          description: " \nSuccess"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InquirePlanMasterV1ResponseModel'
        '404':
          description: " \nThe request resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '503':
          description: " \nThe service was unavailable"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '504':
          description: " \nThe request timed out while waiting for a response"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '403':
          description: " \nThe request resource is forbidden for user"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '500':
          description: " \nAn unexpected internal server error occurred"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
        '422':
          description: " \nThe request could not be processed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseErrorMessageInfo'
      security:
      - Authorization: [
          ]
      x-proxy-name: Inquire Plan Master
      x-group-name: Product Management
components:
  schemas:
    UpdateProductCardControlV1ReqModel:
      type: object
      properties:
        cardControlFields:
          type: object
          properties:
            maximumAuthorizationLimitFrequency:
              maximum: 9
              maxLength: 1
              type: integer
              description: This is a flag which indicates the frequency for the maximum
                authorization parameters. This frequency applies to the RETAIL PURCHASE
                AMOUNT to SINGLE RETAIL TRANSACTION AMOUNT fields. <br/>The values
                are:<br/> &nbsp; '0' - Not used (default) <br/> &nbsp; '1' - Daily
                <br/> &nbsp; '2' - Cycle-to-date <br/> &nbsp; '3' - Year-to-date
              example: '1'
              enum:
              - 0
              - 1
              - 2
              - 3
            maximumAtmCashAuthorizationsAmount:
              maxLength: 17
              type: string
              description: Maximum amount in monetary units and subunits of ATM cash
                authorizations allowed for the frequency defined in the MAXIMUM AUTHORIZATION
                LIMIT FREQUENCY field.
              example: '2000.00'
            maximumAtmCashAuthorizationsCount:
              maximum: 999999999
              maxLength: 9
              type: integer
              description: Maximum number of ATM cash authorizations allowed for the
                frequency defined in the MAXIMUM AUTHORIZATION LIMIT FREQUENCY field.
              example: '5'
            maximumSingleAtmTransactionAmount:
              maxLength: 17
              type: string
              description: This is the Maximum authorization amount in monetary units
                and subunits for a single ATM transaction.
              example: '100.00'
            maximumOtcCashAuthorizationsAmount:
              maxLength: 17
              type: string
              description: Maximum amount in monetary units and subunits of over-the
                counter (OTC) cash authorizations allowed for the frequency defined
                in the MAXIMUM AUTHORIZATION LIMIT FREQUENCY field.
              example: '1500.00'
            maximumOtcAuthorizationsCount:
              maximum: 999999999
              maxLength: 9
              type: integer
              description: Maximum number of OTC authorizations allowed for the frequency
                defined in the MAXIMUM AUTHORIZATION LIMIT FREQUENCY field.
              example: '6'
            maximumSingleOtcCashAuthorizationAmount:
              maxLength: 17
              type: string
              description: This is the Maximum authorization amount in monetary units
                and subunits for a single OTC transaction.
              example: '200.00'
            maximumRetailAuthorizationsAmount:
              maxLength: 17
              type: string
              description: Maximum amount in monetary units and subunits of retail
                authorizations allowed for the freqency defined in the MAXIMUM AUTHORIZATION
                LIMIT FREQUENCY field.
              example: '100000.00'
            maximumRetailAuthorizationsCount:
              maximum: 999999999
              maxLength: 9
              type: integer
              description: Maximum number of retail authorizations allowed for the
                frequency defined in the MAXIMUM AUTHORIZATION LIMIT FREQUENCY field.
              example: '10'
            maximumSingleRetailAuthorizationAmount:
              maxLength: 17
              type: string
              description: This is the Maximum amount in monetary units and subunits
                for a single retail authorization.
              example: '10000.00'
        cardControlFlags:
          type: object
          properties:
            isAtmEnabled:
              maxLength: 1
              type: string
              description: This is to enable or disable a ATM based transactions.
                <br/>The values are:<br/> &nbsp; 'Y' - ATM transactions Allowed <br/>
                &nbsp; 'N' - ATM transactions not Allowed
              example: Y
              enum:
              - N
              - Y
            isPosEnabled:
              maxLength: 1
              type: string
              description: This is to enable or disable a POS based transaction for
                a cardholder. <br/>The values are:<br/> &nbsp; 'Y' - POS transactions
                Allowed <br/> &nbsp; 'N' - POS transactions not Allowed
              example: Y
              enum:
              - N
              - Y
            isEcomEnabled:
              maxLength: 1
              type: string
              description: This is to enable or disable  ECOMM based transaction for
                a cardholder. <br/>The values are:<br/> &nbsp; '1' - ECOMM transactions
                Allowed <br/> &nbsp; '0' - ECOMM transactions not Allowed
              example: '1'
              enum:
              - '0'
              - '1'
            isMotoEnabled:
              maxLength: 1
              type: string
              description: This is to enable or disable a Mobile based transactions.
                <br/>The values are:<br/> &nbsp; 'Y' - MOTO transactions Allowed <br/>
                &nbsp; 'N' - MOTO transactions not Allowed
              example: N
              enum:
              - Y
              - N
            isInternationalAtmPosEnabled:
              maxLength: 1
              type: string
              description: This is to enable or disable an international ATM or POS  based
                transaction for a cardholder. <br/>The values are:<br/> &nbsp; 'Y'
                - International ATM or POS transactions Allowed <br/> &nbsp; 'N' -
                International ATM or POS transactions not Allowed
              example: N
              enum:
              - Y
              - N
            isCashBackEnabled:
              maxLength: 1
              type: string
              description: This is to enable or disable cashback at POS  transaction
                for a cardholder. <br/>The values are:<br/> &nbsp; 'Y' - Cash Back
                transactions Allowed <br/> &nbsp; 'N' - Cash Back transactions not
                Allowed
              example: Y
              enum:
              - Y
              - N
            isPayWaveEnabled:
              maxLength: 1
              type: string
              description: This is to enable or disable a Contactless or Paywave based
                transaction for a cardholder. <br/>The values are:<br/> &nbsp; 'Y'
                - PayWave transactions Allowed <br/> &nbsp; 'N' - PayWave transactions
                not Allowed
              example: N
              enum:
              - Y
              - N
        yearToDateCountryRiskSpendLimits:
          type: object
          properties:
            isCountryRiskSpendLimitEnabled:
              maximum: 9
              maxLength: 1
              type: integer
              description: This is a flag that indicates whether a year-to-date spending
                limit for accounts initiating transactions in high-risk and non-high-risk
                countries is active. <br/>The values are:<br/> &nbsp; '0' - Not Active
                <br/> &nbsp; '1' - Active
              example: '1'
              enum:
              - 0
              - 1
            highRiskCountryMaximumAuthAmount:
              maxLength: 17
              type: string
              description: Maximum amount of authorizations in monetary units and
                subunits allowed for the cumulative year-to-date spending by an account
                in high-risk countries. Maximum amount of authorizations in monetary
                units and subunits allowed for the cumulative year-to-date spending
                by an account in high-risk countries.
              example: '10000.00'
            otherRiskCountryMaximumAuthAmount:
              maxLength: 17
              type: string
              description: Maximum amount of authorizations in monetary units and
                subunits allowed for the cumulative year-to-date spending by an account
                in non-high-risk countries. Risk is designated by country code in
                the Financial Authorization System (FAS).
              example: '15000.00'
    ResponseErrorMessageInfo:
      type: object
      properties:
        errorCode:
          type: string
          example: ''
        detail:
          type: string
          example: ''
        title:
          type: string
          example: ''
        instance:
          type: string
          example: ''
        source:
          type: string
          example: ''
        status:
          type: integer
          example: '0'
        invalid-params:
          type: array
          items:
            type: string
    UpdateProductCardControlV1ResponseModel:
      type: object
      properties:
        businessUnit:
          maximum: 999
          maxLength: 3
          type: integer
          description: Unique identification number associated with the organization.
            Valid values from 1-998.
          example: '600'
        productId:
          maximum: 999
          maxLength: 3
          type: integer
          description: Unique identification number of the product associated with
            the organization. Valid values from 1-998.
          example: '1'
        cardControlFields:
          type: object
          properties:
            maximumAuthorizationLimitFrequency:
              maximum: 9
              maxLength: 1
              type: integer
              description: This is a flag which indicates the frequency for the maximum
                authorization parameters. This frequency applies to the RETAIL PURCHASE
                AMOUNT to SINGLE RETAIL TRANSACTION AMOUNT fields. <br/>The values
                are:<br/> &nbsp; '0' - Not used (default) <br/> &nbsp; '1' - Daily
                <br/> &nbsp; '2' - Cycle-to-date <br/> &nbsp; '3' - Year-to-date
              example: '1'
            maximumAtmCashAuthorizationsAmount:
              maxLength: 24
              type: string
              description: Maximum amount in monetary units and subunits of ATM cash
                authorizations allowed for the frequency defined in the MAXIMUM AUTHORIZATION
                LIMIT FREQUENCY field.
              example: $2000.00
            maximumAtmCashAuthorizationsCount:
              maximum: 999999999
              maxLength: 9
              type: integer
              description: Maximum number of ATM cash authorizations allowed for the
                frequency defined in the MAXIMUM AUTHORIZATION LIMIT FREQUENCY field.
              example: '5'
            maximumSingleAtmTransactionAmount:
              maxLength: 24
              type: string
              description: This is the Maximum authorization amount in monetary units
                and subunits for a single ATM transaction.
              example: $100.00
            maximumOtcCashAuthorizationsAmount:
              maxLength: 24
              type: string
              description: Maximum amount in monetary units and subunits of over-the
                counter (OTC) cash authorizations allowed for the frequency defined
                in the MAXIMUM AUTHORIZATION LIMIT FREQUENCY field.
              example: $1500.00
            maximumOtcAuthorizationsCount:
              maximum: 999999999
              maxLength: 9
              type: integer
              description: Maximum number of OTC authorizations allowed for the frequency
                defined in the MAXIMUM AUTHORIZATION LIMIT FREQUENCY field.
              example: '6'
            maximumSingleOtcCashAuthorizationAmount:
              maxLength: 24
              type: string
              description: This is the Maximum authorization amount in monetary units
                and subunits for a single OTC transaction.
              example: $200.00
            maximumRetailAuthorizationsAmount:
              maxLength: 24
              type: string
              description: Maximum amount in monetary units and subunits of retail
                authorizations allowed for the freqency defined in the MAXIMUM AUTHORIZATION
                LIMIT FREQUENCY field.
              example: $100000.00
            maximumRetailAuthorizationsCount:
              maximum: 999999999
              maxLength: 9
              type: integer
              description: Maximum number of retail authorizations allowed for the
                frequency defined in the MAXIMUM AUTHORIZATION LIMIT FREQUENCY field.
              example: '10'
            maximumSingleRetailAuthorizationAmount:
              maxLength: 24
              type: string
              description: This is the Maximum amount in monetary units and subunits
                for a single retail authorization.
              example: $10000.00
        cardControlFlags:
          type: object
          properties:
            isAtmEnabled:
              maxLength: 1
              type: string
              description: This is to enable or disable a ATM based transactions.
                <br/>The values are:<br/> &nbsp; 'Y' - ATM transactions Allowed <br/>
                &nbsp; 'N' - ATM transactions not Allowed
              example: Y
            isPosEnabled:
              maxLength: 1
              type: string
              description: This is to enable or disable a POS based transaction for
                a cardholder. <br/>The values are:<br/> &nbsp; 'Y' - POS transactions
                Allowed <br/> &nbsp; 'N' - POS transactions not Allowed
              example: Y
            isEcomEnabled:
              maxLength: 1
              type: string
              description: This is to enable or disable  ECOMM based transaction for
                a cardholder. <br/>The values are:<br/> &nbsp; '1' - ECOMM transactions
                Allowed <br/> &nbsp; '0' - ECOMM transactions not Allowed
              example: '1'
            isMotoEnabled:
              maxLength: 1
              type: string
              description: This is to enable or disable a Mobile based transactions.
                <br/>The values are:<br/> &nbsp; 'Y' - MOTO transactions Allowed <br/>
                &nbsp; 'N' - MOTO transactions not Allowed
              example: N
            isInternationalAtmPosEnabled:
              maxLength: 1
              type: string
              description: This is to enable or disable an international ATM or POS  based
                transaction for a cardholder. <br/>The values are:<br/> &nbsp; 'Y'
                - International ATM or POS transactions Allowed <br/> &nbsp; 'N' -
                International ATM or POS transactions not Allowed
              example: N
            isCashBackEnabled:
              maxLength: 1
              type: string
              description: This is to enable or disable cashback at POS  transaction
                for a cardholder. <br/>The values are:<br/> &nbsp; 'Y' - Cash Back
                transactions Allowed <br/> &nbsp; 'N' - Cash Back transactions not
                Allowed
              example: Y
            isPayWaveEnabled:
              maxLength: 1
              type: string
              description: This is to enable or disable a Contactless or Paywave based
                transaction for a cardholder. <br/>The values are:<br/> &nbsp; 'Y'
                - PayWave transactions Allowed <br/> &nbsp; 'N' - PayWave transactions
                not Allowed
              example: N
        yearToDateCountryRiskSpendLimits:
          type: object
          properties:
            isCountryRiskSpendLimitEnabled:
              maximum: 9
              maxLength: 1
              type: integer
              description: This is a flag that indicates whether a year-to-date spending
                limit for accounts initiating transactions in high-risk and non-high-risk
                countries is active. <br/>The values are:<br/> &nbsp; '0' - Not Active
                <br/> &nbsp; '1' - Active
              example: '1'
            highRiskCountryMaximumAuthAmount:
              maxLength: 24
              type: string
              description: Maximum amount of authorizations in monetary units and
                subunits allowed for the cumulative year-to-date spending by an account
                in high-risk countries. Maximum amount of authorizations in monetary
                units and subunits allowed for the cumulative year-to-date spending
                by an account in high-risk countries.
              example: $10000.00
            otherRiskCountryMaximumAuthAmount:
              maxLength: 24
              type: string
              description: Maximum amount of authorizations in monetary units and
                subunits allowed for the cumulative year-to-date spending by an account
                in non-high-risk countries. Risk is designated by country code in
                the Financial Authorization System (FAS).
              example: $15000.00
    InquireServiceChargeTableV1ResponseModel:
      type: object
      properties:
        businessUnit:
          maximum: 999
          maxLength: 3
          type: integer
          description: Unique identification number associated with the organization.
            Valid values from 1-998.
          example: '600'
        productId:
          maximum: 999
          maxLength: 3
          type: integer
          description: Unique identification number of the product associated with
            the organization. If the table is defined at organization level, populate
            this field as zeroes. For tables defined at product level, valid values
            are 0-998.
          example: '0'
        tableId:
          maximum: 999
          maxLength: 3
          type: integer
          description: Identification number of the Service Charge/Fee table. The
            values are 1–998.
          example: '3'
        maximumCycleServiceFeeAmount:
          maxLength: 24
          type: string
          description: Maximum amount, in monetary units and subunits, of service
            charges to assess in one cycle. CMS will not assess a service charge unless
            this field is greater than zero.
          example: $99999.00
        serviceChargeDetails:
          type: array
          items:
            $ref: '#/components/schemas/ServiceChargeDetails_InquireServiceChargeTableV1ResponseModel'
        bnplMissedPaymentFeeDetails:
          type: object
          properties:
            amount1:
              maxLength: 16
              type: string
              description: Field indicates the amount of missed payment fee would
                be charged to iPlan when instalment is not paid by payment pay date
                + number of grace days on product level. Missed payment fee will be
                charged on the next instalment.
              example: $100.00
            limit1:
              maximum: 99
              maxLength: 2
              type: integer
              description: Field indicates the maximum number of missed payment fees
                that can be charged during the lifecycle of iPlan. <br/>The values
                are:<br/>&nbsp; '0' - BNPL missed payment fee limit is not provided.
                Functionality is not active (default) <br/>&nbsp; '1-99' - BNPL missed
                payment fee limit
              example: '5'
            amount2:
              maxLength: 16
              type: string
              description: Field indicates the amount of missed payment fee would
                be charged to iPlan when instalment is not paid by payment pay date
                + number of grace days on product level. Missed payment fee will be
                charged on the next instalment.
              example: $100.00
            limit2:
              maximum: 99
              maxLength: 2
              type: integer
              description: Field indicates the maximum number of missed payment fees
                that can be charged during the lifecycle of iPlan. <br/>The values
                are:<br/>&nbsp; '0' - BNPL missed payment fee limit is not provided.
                Functionality is not active (default) <br/>&nbsp; '1-99' - BNPL missed
                payment fee limit
              example: '5'
            amount3:
              maxLength: 16
              type: string
              description: Field indicates the amount of missed payment fee would
                be charged to iPlan when instalment is not paid by payment pay date
                + number of grace days on product level. Missed payment fee will be
                charged on the next instalment.
              example: $100.00
            limit3:
              maximum: 99
              maxLength: 2
              type: integer
              description: Field indicates the maximum number of missed payment fees
                that can be charged during the lifecycle of iPlan. <br/>The values
                are:<br/>&nbsp; '0' - BNPL missed payment fee limit is not provided.
                Functionality is not active (default) <br/>&nbsp; '1-99' - BNPL missed
                payment fee limit
              example: '5'
            amount4:
              maxLength: 16
              type: string
              description: Field indicates the amount of missed payment fee would
                be charged to iPlan when instalment is not paid by payment pay date
                + number of grace days on product level. Missed payment fee will be
                charged on the next instalment.
              example: $100.00
            limit4:
              maximum: 99
              maxLength: 2
              type: integer
              description: Field indicates the maximum number of missed payment fees
                that can be charged during the lifecycle of iPlan. <br/>The values
                are:<br/>&nbsp; '0' - BNPL missed payment fee limit is not provided.
                Functionality is not active (default) <br/>&nbsp; '1-99' - BNPL missed
                payment fee limit
              example: '5'
            amount5:
              maxLength: 16
              type: string
              description: Field indicates the amount of missed payment fee would
                be charged to iPlan when instalment is not paid by payment pay date
                + number of grace days on product level. Missed payment fee will be
                charged on the next instalment.
              example: $100.00
            limit5:
              maximum: 99
              maxLength: 2
              type: integer
              description: Field indicates the maximum number of missed payment fees
                that can be charged during the lifecycle of iPlan. <br/>The values
                are:<br/>&nbsp; '0' - BNPL missed payment fee limit is not provided.
                Functionality is not active (default) <br/>&nbsp; '1-99' - BNPL missed
                payment fee limit
              example: '5'
        bnplSnoozeFeeDetails:
          type: object
          properties:
            amount1:
              maxLength: 16
              type: string
              description: Field indicates the amount of fee will be charged on iPlan  for
                using the snooze feature.
              example: $55.00
            amount2:
              maxLength: 16
              type: string
              description: Field indicates the amount of fee will be charged on iPlan  for
                using the snooze feature.
              example: $0.00
            amount3:
              maxLength: 16
              type: string
              description: Field indicates the amount of fee will be charged on iPlan  for
                using the snooze feature.
              example: $0.00
            amount4:
              maxLength: 16
              type: string
              description: Field indicates the amount of fee will be charged on iPlan  for
                using the snooze feature.
              example: $0.00
            amount5:
              maxLength: 16
              type: string
              description: Field indicates the amount of fee will be charged on iPlan  for
                using the snooze feature.
              example: $0.00
    ServiceChargeDetails_InquireServiceChargeTableV1ResponseModel:
      type: object
      properties:
        initiatingTransactionCode:
          maximum: 99999
          maxLength: 5
          type: integer
          description: Monetary transaction code that will trigger CMS to generate
            the service charge. The service charge posts to each plan that has activity
            identified by this transaction code.
          example: '1301'
        transactionLimitFrequency:
          maximum: 9
          maxLength: 1
          type: integer
          description: Code that determines whether the TRANSACTION LIMIT number is
            a daily limit or cycle limit for the number of transactions assessed service
            charges by TIER 1 FEE AMOUNT. <br/>The values are:<br/>&nbsp; '0' - Daily
            limit <br/>&nbsp; '1' - Cycle limit
          example: '1'
        transactionLimit:
          maximum: 99
          maxLength: 2
          type: integer
          description: Number of transactions to assess the service fee defined by
            FEE AMOUNT per day or cycle based on the TRANSACTION LIMIT FREQUENCY value.
            The values are 0–99.
          example: '3'
        tier1FeeAmountOrPercentage:
          maxLength: 24
          type: string
          description: Fixed amount in monetary units and subunits or percentage of
            the transaction amount to assess for the service charge up to the number
            of transactions in the TRANSACTION LIMIT field, inclusive. If METHOD is
            1, enter a fixed amount. If METHOD is 2, enter a percentage. For a percentage,
            the first two positions must be zero.
          example: $100.00
        tier2FeeAmountOrPercentage:
          maxLength: 24
          type: string
          description: Fixed amount in monetary units and subunits or percentage of
            the transaction amount to assess for the service charge for transactions
            in excess of the number in the TRANSACTION LIMIT field. If METHOD is 1,
            enter a fixed amount. If METHOD is 2, enter a percentage. For a percentage,
            the first two positions must be zero.
          example: $500.00
        method:
          maximum: 9
          maxLength: 1
          type: integer
          description: Code that indicates how CMS calculates the service charge (Amount
            or Percentage). <br/>The values are:<br/>&nbsp; '1' - Amount (Default)
            <br/>&nbsp; '2' - Percentage
          example: '1'
        singleFeeMinimumAmount:
          maxLength: 16
          type: string
          description: Minimum amount in monetary units and subunits, of the service
            charge to assess. This amount must be less than the SINGLE FEE MAXIMUM
            AMOUNT.
          example: $10.00
        singleFeeMaximumAmount:
          maxLength: 16
          type: string
          description: Maximum amount in monetary units and subunits, of the service
            charge to assess. This amount must be greater than the SINGLE FEE MINIMUM
            AMOUNT.
          example: $99.00
        feePostingFrequency:
          maximum: 9
          maxLength: 1
          type: integer
          description: Code that indicates the frequency CMS posts the service charge
            to the account. <br/>The values are:<br/>&nbsp; '0' - Daily (Default)
            <br/>&nbsp; '1' - Cycle
          example: '1'
        feeReverseTransactionCode:
          maximum: 9999
          maxLength: 4
          type: integer
          description: Monetary transaction code that will trigger CMS to generate
            a service charge fee reversal. If this value is zeroes, CMS does not automatically
            generate a service charge reversal transaction for a reversal transaction.
          example: '7474'
        feePlan:
          maximum: 9
          maxLength: 1
          type: integer
          description: Code that indicates the plan to which the service fee is posted.
            <br/>The values are:<br/>&nbsp; '0' - Post fee to the same plan as the
            transaction triggering the fee (Default) <br/>&nbsp; '1' - Post fee to
            the default retail plan corresponding to the account <br/>&nbsp; '2' -
            Post fee to the default cash plan corresponding to the account <br/>&nbsp;
            '3' - Post fee to the default credit plan determined by the Service Charge/Fee
            table corresponding to account
          example: '0'
        dailyFeeDescription:
          maxLength: 40
          type: string
          description: Description of the transaction code. If FEE POSTING FREQUENCY
            is 0 (daily), this field is the description of the service charge that
            prints on account statements. If FEE POSTING FREQUENCY 1 (cycle), this
            field must be blank, CMS uses the universal service charge fee transaction
            code on Monetary Transaction controls and the description defined for
            the universal service charge fee transaction code on Monetary Transaction
            controls
          example: Service Fees
        maximumIndicator:
          maximum: 9
          maxLength: 1
          type: integer
          description: Code that indicates whether the maximum amount (SINGLE FEE
            MAXIMUM AMOUNT) is applied as the daily fee maximum that can be assessed
            for the transaction code or as the maximum fee that any individual transaction
            can be assessed for the transaction code. <br/>The values are:<br/>&nbsp;
            '0' - Daily limit (Default) <br/>&nbsp; '1' - Individual fee limit <br/>&nbsp;
            '2' - Individual fee limit. The fee cannot exceed the amount of the triggering
            transaction
          example: '1'
    InquireInterestTableV1ResponseModel:
      type: object
      properties:
        businessUnit:
          maximum: 999
          maxLength: 3
          type: integer
          description: Unique identification number associated with the organization.
            Valid values from 1-998.
          example: '600'
        productId:
          maximum: 999
          maxLength: 3
          type: integer
          description: Unique identification number of the product associated with
            the organization. If the table is defined at organization level, populate
            this field as zeroes. For tables defined at product level, valid values
            are 0-998.
          example: '0'
        tableId:
          maximum: 999
          maxLength: 3
          type: integer
          description: Identification number of the Interest table. The values are
            1–998.
          example: '1'
        tableName:
          maxLength: 40
          type: string
          description: This field indicates the Description of the Interest table.
          example: INTEREST RATE TABLE FOR CASH PLAN
        interestControls:
          type: object
          properties:
            interestRounding:
              maximum: 9
              maxLength: 1
              type: integer
              description: Code that indicates the rounding method CMS uses to round
                or truncate interest calculations. <br/>The values are:<br/>&nbsp;
                '0' - Standard rounding. If the number that follows the last decimal
                in the currency is 1 to 4, CMS rounds down; if the number is 5 to
                9, CMS rounds up (Default) <br/>&nbsp; '1' - Always round up. If the
                number is 1 to 9, CMS rounds up <br/>&nbsp; '2' - Truncate. CMS does
                not round <br/>&nbsp; '3' - Round, no decimal. CMS rounds to the nearest
                whole monetary unit
              example: '0'
            examineCycleInterestVariance:
              maximum: 9
              maxLength: 1
              type: integer
              description: Code that indicates whether CMS examines the cycle interest
                variance field on the Product entity (EXAMINE CYCLE INTEREST VARIANCE
                on Products -> 14-Product Processing Additional) during disposition
                of interest at cycle. <br/>The values are:<br/>&nbsp; '0' - Do not
                use the cycle interest variance on the Product entity (Default) <br/>&nbsp;
                '1' - Verify that the payment is within the cycle interest variance
                defined on the Product entity
              example: '0'
            allowNsfPaymentReversal:
              maximum: 9
              maxLength: 1
              type: integer
              description: Code that indicates whether an NSF payment reversal should
                be considered in the interest waive decision. <br/>The values are:<br/>&nbsp;
                '0' - Do not allow NSF payment reversal; interest will not be waived
                if an NSF payment reversal occurred (Default) <br/>&nbsp; '1' - Allow
                NSF payment reversals if the net payments received satisfy the account
                or plan beginning balance
              example: '0'
            ceilingLimits:
              type: object
              properties:
                floorRate1:
                  maxLength: 10
                  type: string
                  description: Minimum allowable interest rate for credit plans using
                    this Interest table. CMS uses this rate if the plan balance is
                    less than or equal to the value in the LMT 1 field.
                  example: 0.00000%
                ceilingRate1:
                  maxLength: 10
                  type: string
                  description: Maximum allowable interest rate for credit plans using
                    this Interest table if the plan balance is less than or equal
                    to the balance limit.
                  example: 99.99999%
                floorRate2:
                  maxLength: 10
                  type: string
                  description: Maximum allowable interest rate for credit plans using
                    this Interest table if the plan balance is greater than the balance
                    limit (BALANCE LIMIT).
                  example: 0.00000%
                ceilingRate2:
                  maxLength: 10
                  type: string
                  description: Minimum allowable interest rate for credit plans using
                    this Interest table. Regardless of the value of the rate index,
                    adjusted by the variance, the actual interest rate assessed for
                    credit plans using this Interest table will not fall below this
                    percentage.
                  example: 99.99999%
                balanceLimit:
                  maxLength: 24
                  type: string
                  description: Balance Limit - Balance limit for FLOOR RATE 1 and
                    CEILING RATE 1 in whole monetary amounts. If you are using both
                    FLOOR RATE 1-2 and CEILING RATE 1–2, the value of this field must
                    be greater than zero.
                  example: $0.00
        interestCalculationOptions:
          type: object
          properties:
            accrualMethod:
              maxLength: 1
              type: string
              description: Code that indicates the accrual method CMS uses for interest
                calculations. <br/>The values are:<br/>&nbsp; 'A' - Monthly accrual
                <br/>&nbsp; 'B' - Balance at end of cycle <br/>&nbsp; 'D' - Daily
                accrual (Default) <br/>&nbsp; 'E' - Monthly adjusted ending balance
              example: D
            yearBase:
              maximum: 9
              maxLength: 1
              type: integer
              description: Code that indicates the year base CMS uses for interest
                calculations. <br/>The values are:<br/>&nbsp; '0' - Actual 365 or
                366 days (Default) <br/>&nbsp; '1' - Fixed 365 days <br/>&nbsp; '2'
                - Fixed 360 days
              example: '0'
            startInterestOnDebitTransaction:
              maxLength: 1
              type: string
              description: Code that indicates when interest calculations begin on
                debit transactions. <br/>The values are:<br/>&nbsp; 'S' - Cycle date
                (after billing) <br/>&nbsp; 'T' - Transaction date (effective date
                of the transaction) <br/>&nbsp; 'P' - Posting date of the transaction
                (Default) <br/>&nbsp; 'G' - Greater of the transaction date or the
                cycle date <br/>&nbsp; 'D' - Day after the payment due date
              example: P
            startInterestOnCreditTransaction:
              maxLength: 1
              type: string
              description: Code that indicates when credit transactions affect the
                calculation of interest. <br/>The values are:<br/>&nbsp; 'T' - Transaction
                date (from the effective date of the transaction) <br/>&nbsp; 'P'
                - Posting date (from the posting date of the transaction) (Default)
              example: T
            interestNextStatement:
              maxLength: 1
              type: string
              description: 'Code that indicates how CMS charges interest on new transactions
                posted in the current billing cycle. <br/>The values are:<br/>&nbsp;
                ''A'' - Waive all interest based on the account balance <br/>&nbsp;
                ''B'' - Rebate interest at the account level <br/>&nbsp; ''C'' - Use
                combined grace and cycle interest parameters on Interest Table ->
                03- Combined Grace & Cycle Interest Option <br/>&nbsp; ''D'' - Defer
                interest if a payment is posted prior to the cycle date <br/>&nbsp;
                ''G'' - Accrue and defer interest on new purchase transactions <br/>&nbsp;
                ''L'' - Accrue and defer interest on new purchase transactions <br/>&nbsp;
                ''M'' - Residual interest <br/>&nbsp; ''N'' - Do not charge interest
                (Default) <br/>&nbsp; ''P'' - Waive all plan interest based on plan
                balance <br/>&nbsp; ''Q'' - Rebate interest at the plan level <br/>&nbsp;
                ''R'' - Residual interest <br/>&nbsp; ''S'' - Reserved for future
                user <br/>&nbsp; ''T'' - Interest on RECAPT transaction <br/>&nbsp;
                ''U'' - Charge interest unconditionally <br/>&nbsp; ''Y'' - Charge
                interest <br/>&nbsp; ''Z'' - Interest on RECAPT zero balance '
              example: C
        interestRates:
          type: object
          properties:
            tierLimitIndicator:
              maximum: 9
              maxLength: 1
              type: integer
              description: Code that indicates how to handle tier limits. <br/>The
                values are:<br/>&nbsp; '0' - Charge separate rate for balances within
                each limit <br/>&nbsp; '1' - Charge rate at highest limit in which
                balance falls (Default)
              example: '0'
            rateType:
              maxLength: 1
              type: string
              description: Code that indicates the type of interest rate. <br/>The
                values are:<br/>&nbsp; 'F' - Fixed rate. The interest rate is the
                base rate <br/>&nbsp; 'T' - Tiered rate. The rate is determined based
                upon the balance limit <br/>&nbsp; 'U' - Tiered variable rate. The
                interest rate is determined by tiers with a variance applied <br/>&nbsp;
                'V' - Variable rate. The interest rate may have a variance applied
                <br/>&nbsp; 'Z' - Interest free
              example: F
            rateIndexTable:
              maximum: 999
              maxLength: 3
              type: integer
              description: Code that identifies the rate index within the associated
                Rate Index Table that determines the base rate. <br/>The values are:<br/>&nbsp;
                '0' - Do not use a rate index <br/>&nbsp; '1' to '998' - Rate index
                number to use
              example: '6'
            rate7:
              maxLength: 10
              type: string
              description: Interest rate that CMS charges on account balances not
                greater than the amount in the LIMIT7 field. Interest rate must be
                within the floor rate and the ceiling rate assigned to the Interest
                table.
              example: 0.00000%
            variance7:
              maxLength: 10
              type: string
              description: Variance rate that CMS adds to or subtracts from the base
                rate to determine the interest rate charged. The corresponding +/–
                field determines whether the variance rate is added to or subtracted
                from the base rate. The base rate is determined by the index rate
                assigned to the Interest table.
              example: 0.00000%
            limit7:
              maxLength: 24
              type: string
              description: Account balance limit for interest rates in the RATE 7
                field or for each of the corresponding variance rates in the VARIANCE
                fields. The valid entries in LIMIT 1–8 depend on the rate type assigned
                to the Interest table.
              example: $0.00
            rate8:
              maxLength: 10
              type: string
              description: Interest rate that CMS charges on account balances not
                greater than the amount in the LIMIT8 field. Interest rate must be
                within the floor rate and the ceiling rate assigned to the Interest
                table.
              example: 0.00000%
            variance8:
              maxLength: 10
              type: string
              description: Variance rate that CMS adds to or subtracts from the base
                rate to determine the interest rate charged. The corresponding +/–
                field determines whether the variance rate is added to or subtracted
                from the base rate. The base rate is determined by the index rate
                assigned to the Interest table.
              example: 0.00000%
            limit8:
              maxLength: 24
              type: string
              description: Account balance limit for interest rates in the RATE 8
                field or for each of the corresponding variance rates in the VARIANCE
                fields. The valid entries in LIMIT 1–8 depend on the rate type assigned
                to the Interest table.
              example: $0.00
            rate9:
              maxLength: 10
              type: string
              description: Interest rate that CMS charges on account balances not
                greater than the amount in the LIMIT9 field. Interest rate must be
                within the floor rate and the ceiling rate assigned to the Interest
                table.
              example: 0.00000%
            variance9:
              maxLength: 10
              type: string
              description: Variance rate that CMS adds to or subtracts from the base
                rate to determine the interest rate charged. The corresponding +/–
                field determines whether the variance rate is added to or subtracted
                from the base rate. The base rate is determined by the index rate
                assigned to the Interest table.
              example: 0.00000%
            rate1:
              maxLength: 10
              type: string
              description: Interest rate that CMS charges on account balances not
                greater than the amount in the LIMIT1 field. Interest rate must be
                within the floor rate and the ceiling rate assigned to the Interest
                table.
              example: 0.00000%
            variance1:
              maxLength: 10
              type: string
              description: Variance rate that CMS adds to or subtracts from the base
                rate to determine the interest rate charged. The corresponding +/–
                field determines whether the variance rate is added to or subtracted
                from the base rate. The base rate is determined by the index rate
                assigned to the Interest table.
              example: 8.99000%
            limit1:
              maxLength: 24
              type: string
              description: Account balance limit for interest rates in the RATE 1
                field or for each of the corresponding variance rates in the VARIANCE
                fields. The valid entries in LIMIT 1–8 depend on the rate type assigned
                to the Interest table.
              example: $999,999,999,999,999.00
            rate2:
              maxLength: 10
              type: string
              description: Interest rate that CMS charges on account balances not
                greater than the amount in the LIMIT2 field. Interest rate must be
                within the floor rate and the ceiling rate assigned to the Interest
                table.
              example: 0.00000%
            variance2:
              maxLength: 10
              type: string
              description: Variance rate that CMS adds to or subtracts from the base
                rate to determine the interest rate charged. The corresponding +/–
                field determines whether the variance rate is added to or subtracted
                from the base rate. The base rate is determined by the index rate
                assigned to the Interest table.
              example: 0.00000%
            limit2:
              maxLength: 24
              type: string
              description: Account balance limit for interest rates in the RATE 2
                field or for each of the corresponding variance rates in the VARIANCE
                fields. The valid entries in LIMIT 1–8 depend on the rate type assigned
                to the Interest table.
              example: $0.00
            rate3:
              maxLength: 10
              type: string
              description: Interest rate that CMS charges on account balances not
                greater than the amount in the LIMIT3 field. Interest rate must be
                within the floor rate and the ceiling rate assigned to the Interest
                table.
              example: 0.00000%
            variance3:
              maxLength: 10
              type: string
              description: Variance rate that CMS adds to or subtracts from the base
                rate to determine the interest rate charged. The corresponding +/–
                field determines whether the variance rate is added to or subtracted
                from the base rate. The base rate is determined by the index rate
                assigned to the Interest table.
              example: 0.00000%
            limit3:
              maxLength: 24
              type: string
              description: Account balance limit for interest rates in the RATE 3
                field or for each of the corresponding variance rates in the VARIANCE
                fields. The valid entries in LIMIT 1–8 depend on the rate type assigned
                to the Interest table.
              example: $0.00
            rate4:
              maxLength: 10
              type: string
              description: Interest rate that CMS charges on account balances not
                greater than the amount in the LIMIT4 field. Interest rate must be
                within the floor rate and the ceiling rate assigned to the Interest
                table.
              example: 0.00000%
            variance4:
              maxLength: 10
              type: string
              description: Variance rate that CMS adds to or subtracts from the base
                rate to determine the interest rate charged. The corresponding +/–
                field determines whether the variance rate is added to or subtracted
                from the base rate. The base rate is determined by the index rate
                assigned to the Interest table.
              example: 0.00000%
            limit4:
              maxLength: 24
              type: string
              description: Account balance limit for interest rates in the RATE 4
                field or for each of the corresponding variance rates in the VARIANCE
                fields. The valid entries in LIMIT 1–8 depend on the rate type assigned
                to the Interest table.
              example: $0.00
            rate5:
              maxLength: 10
              type: string
              description: Interest rate that CMS charges on account balances not
                greater than the amount in the LIMIT5 field. Interest rate must be
                within the floor rate and the ceiling rate assigned to the Interest
                table.
              example: 0.00000%
            variance5:
              maxLength: 10
              type: string
              description: Variance rate that CMS adds to or subtracts from the base
                rate to determine the interest rate charged. The corresponding +/–
                field determines whether the variance rate is added to or subtracted
                from the base rate. The base rate is determined by the index rate
                assigned to the Interest table.
              example: 0.00000%
            limit5:
              maxLength: 24
              type: string
              description: Account balance limit for interest rates in the RATE 5
                field or for each of the corresponding variance rates in the VARIANCE
                fields. The valid entries in LIMIT 1–8 depend on the rate type assigned
                to the Interest table.
              example: $0.00
            rate6:
              maxLength: 10
              type: string
              description: Interest rate that CMS charges on account balances not
                greater than the amount in the LIMIT6 field. Interest rate must be
                within the floor rate and the ceiling rate assigned to the Interest
                table.
              example: 0.00000%
            variance6:
              maxLength: 10
              type: string
              description: Variance rate that CMS adds to or subtracts from the base
                rate to determine the interest rate charged. The corresponding +/–
                field determines whether the variance rate is added to or subtracted
                from the base rate. The base rate is determined by the index rate
                assigned to the Interest table.
              example: 0.00000%
            limit6:
              maxLength: 24
              type: string
              description: Account balance limit for interest rates in the RATE 6
                field or for each of the corresponding variance rates in the VARIANCE
                fields. The valid entries in LIMIT 1–8 depend on the rate type assigned
                to the Interest table.
              example: $0.00
        includeBalanceFlagsForInterestCalculation:
          type: object
          properties:
            isInterestOnMembershipFeeEnabled:
              maximum: 9
              maxLength: 1
              type: integer
              description: Code that indicates whether to charge interest on membership
                fees (also referred to as annual fees). <br/>The values are:<br/>&nbsp;
                '0' - Do not charge interest (Default) <br/>&nbsp; '1' - Charge interest
              example: '1'
            isInterestOnInterestEnabled:
              maximum: 9
              maxLength: 1
              type: integer
              description: Code that indicates whether to charge interest on interest
                (finance charge compounding). <br/>The values are:<br/>&nbsp; '0'
                - Do not charge interest (Default) <br/>&nbsp; '1' - Charge interest
              example: '0'
            isInterestOnServiceFeeEnabled:
              maximum: 9
              maxLength: 1
              type: integer
              description: Code that indicates whether to charge interest on service
                charges. <br/>The values are:<br/>&nbsp; '0' - Do not charge interest
                (Default) <br/>&nbsp; '1' - Charge interest
              example: '1'
            isInterestOnNsfFeeEnabled:
              maximum: 9
              maxLength: 1
              type: integer
              description: Code that indicates whether to charge interest on fees
                assessed for items returned due to nonsufficient funds. <br/>The values
                are:<br/>&nbsp; '0' - Do not charge interest (Default) <br/>&nbsp;
                '1' - Charge interest
              example: '0'
            isInterestOnOverLimitFeeEnabled:
              maximum: 9
              maxLength: 1
              type: integer
              description: Code that indicates whether to charge interest on over
                limit fees. <br/>The values are:<br/>&nbsp; '0' - Do not charge interest
                (Default) <br/>&nbsp; '1' - Charge interest
              example: '1'
            isInterestOnInsuranceEnabled:
              maximum: 9
              maxLength: 1
              type: integer
              description: Code that indicates whether to charge interest on insurance
                premiums. <br/>The values are:<br/>&nbsp; '0' - Do not charge interest
                (Default) <br/>&nbsp; '1' - Charge interest
              example: '0'
            isInterestOnLateFeeEnabled:
              maximum: 9
              maxLength: 1
              type: integer
              description: Code that indicates whether to charge interest on late
                fees. <br/>The values are:<br/>&nbsp; '0' - Do not charge interest
                (Default) <br/>&nbsp; '1' - Charge interest
              example: '1'
            isInterestOnCollectionFeesEnabled:
              maximum: 9
              maxLength: 1
              type: integer
              description: Code that indicates whether to charge interest on collection
                fees. <br/>The values are:<br/>&nbsp; '0' - Do not charge interest
                (Default) <br/>&nbsp; '1' - Charge interest
              example: '0'
            isInterestOnRecoveryFeeEnabled:
              maximum: 9
              maxLength: 1
              type: integer
              description: Code that indicates whether to charge interest on recovery
                fees. <br/>The values are:<br/>&nbsp; '0' - Do not charge interest
                (Default) <br/>&nbsp; '1' - Charge interest
              example: '0'
            isInterestOnUserFee1Enabled:
              maximum: 9
              maxLength: 1
              type: integer
              description: Code that indicates whether to charge interest on user-defined
                fees 1. <br/>The values are:<br/>&nbsp; '0' - Do not charge interest
                (Default) <br/>&nbsp; '1' - Charge interest
              example: '0'
            isInterestOnUserFee2Enabled:
              maximum: 9
              maxLength: 1
              type: integer
              description: Code that indicates whether to charge interest on user-defined
                fees 2. <br/>The values are:<br/>&nbsp; '0' - Do not charge interest
                (Default) <br/>&nbsp; '1' - Charge interest
              example: '0'
            isInterestOnUserFee3Enabled:
              maximum: 9
              maxLength: 1
              type: integer
              description: Code that indicates whether to charge interest on user-defined
                fees 3. <br/>The values are:<br/>&nbsp; '0' - Do not charge interest
                (Default) <br/>&nbsp; '1' - Charge interest
              example: '0'
            isInterestOnUserFee4Enabled:
              maximum: 9
              maxLength: 1
              type: integer
              description: Code that indicates whether to charge interest on user-defined
                fees 4. <br/>The values are:<br/>&nbsp; '0' - Do not charge interest
                (Default) <br/>&nbsp; '1' - Charge interest
              example: '0'
            isInterestOnUserFee5Enabled:
              maximum: 9
              maxLength: 1
              type: integer
              description: Code that indicates whether to charge interest on user-defined
                fees 5. <br/>The values are:<br/>&nbsp; '0' - Do not charge interest
                (Default) <br/>&nbsp; '1' - Charge interest
              example: '0'
            isInterestOnUserFee6Enabled:
              maximum: 9
              maxLength: 1
              type: integer
              description: Code that indicates whether to charge interest on user-defined
                fees 6. <br/>The values are:<br/>&nbsp; '0' - Do not charge interest
                (Default) <br/>&nbsp; '1' - Charge interest
              example: '0'
        interestParametersForCombinedGraceAndCycleOptions:
          type: object
          properties:
            transactionQualification:
              maximum: 9
              maxLength: 1
              type: integer
              description: Code that identifies the type of transactions that qualify
                an account or plan balance as paid in full. <br/>The values are:<br/>&nbsp;
                '0' - All credit transaction codes (Default) <br/>&nbsp; '1' - Only
                payment transaction codes <br/>&nbsp; '2' - Net payment transactions
                within grace days <br/>&nbsp; '3' - Net payment transactions within
                a cycle <br/>&nbsp; '4' - Net credit transactions within grace days
              example: '0'
            isWaivePriorDeferredInterestEnabled:
              maximum: 9
              maxLength: 1
              type: integer
              description: Code that indicates whether interest deferred in the prior
                cycle should be waived if specific account conditions are met. <br/>The
                values are:<br/>&nbsp; '0' - Always bill deferred interest from prior
                cycle (Default) <br/>&nbsp; '1' - Waive deferred interest from prior
                cycle if waive conditions are met
              example: '0'
            isPriorDeferredNsfPaymentReversalEnabled:
              maximum: 9
              maxLength: 1
              type: integer
              description: Code that indicates whether an NSF payment reversal should
                be considered in the interest waive decision for prior deferred interest.
                <br/>The values are:<br/>&nbsp; '0' - Do not allow NSF payment reversal;
                interest is not waived if an NSF payment reversal occurs (Default)
                <br/>&nbsp; '1' - Allow NSF payment reversals
              example: '0'
            priorDeferredInterestBalanceIndicator:
              maximum: 9
              maxLength: 1
              type: integer
              description: Code that indicates whether an account or plan beginning
                balance is used in the interest disposition decisions. <br/>The values
                are:<br/>&nbsp; '0' - Account balance is considered <br/>&nbsp; '1'
                - Plan balance is considered
              example: '0'
            isPriorDeferredBeginBalanceEnabled:
              maximum: 9
              maxLength: 1
              type: integer
              description: This field identifies whether the beginning balance is
                considered in the waive decision. <br/>The values are:<br/>&nbsp;
                '0' - Do not use the beginning balance in the waive decision process
                (Default) <br/>&nbsp; '1' - Use the beginning balance in the waive
                decision process
              example: '0'
            priorDeferredBeginningThresholdAmount:
              maxLength: 24
              type: string
              description: This field indicates the balance threshold that the beginning
                balance must be less than or equal to before interest is waived.
              example: $0.00
            isPriorDeferredEndingBalanceEnabled:
              maximum: 9
              maxLength: 1
              type: integer
              description: This field identifies whether the ending balance is considered
                in the waive decision. <br/>The values are:<br/>&nbsp; '0' - Do not
                use the ending balance in the waive decision process (Default) <br/>&nbsp;
                '1' - Use the ending balance in the waive decision process
              example: '0'
            priorDeferredEndingThresholdAmount:
              maxLength: 24
              type: string
              description: This field identifies the balance threshold that the ending
                balance must be less than or equal to before interest is waived.
              example: $0.00
            priorDeferredPaidDateQualification:
              maximum: 9
              maxLength: 1
              type: integer
              description: Code that indicates whether the date when the account or
                plan beginning balance is paid is used to qualify the account or plan
                to waive interest. <br/>The values are:<br/>&nbsp; '0' - Not used
                (Default) <br/>&nbsp; '1' - Beginning balance must be paid in full,
                or within variance, by grace day in order to waive interest <br/>&nbsp;
                '2' - Beginning balance must be paid in full, or within variance,
                by statement day in order to waive interest
              example: '0'
            isWaiveCurrentCycleInterestEnabled:
              maximum: 9
              maxLength: 1
              type: integer
              description: Code that indicates whether current cycle interest should
                be waived or deferred if specific account conditions are met. <br/>The
                values are:<br/>&nbsp; '0' - Always bill deferred interest from the
                current cycle (Default) <br/>&nbsp; '1' - Waive current cycle interest
                if waive conditions are met <br/>&nbsp; '2' - Defer current cycle
                interest if defer conditions are met <br/>&nbsp; '3' - Defer current
                cycle interest unconditionally
              example: '0'
            isCurrentCycleNsfPaymentReversalEnabled:
              maximum: 9
              maxLength: 1
              type: integer
              description: Code that indicates whether an NSF payment reversal should
                be considered in the decision to waive or defer interest for the current
                cycle. <br/>The values are:<br/>&nbsp; '0' - Do not allow NSF payment
                reversal; interest is not waived or deferred if an NSF payment reversal
                occurs (Default) <br/>&nbsp; '1' - Allow NSF payment reversals
              example: '0'
            currentCycleInterestBalanceIndicator:
              maximum: 9
              maxLength: 1
              type: integer
              description: Code that indicates whether an account or plan beginning
                balance is used in the interest disposition decisions. <br/>The values
                are:<br/>&nbsp; '0' - Account or plan balance is not considered (Default)
                <br/>&nbsp; '1' - Account balance is considered
              example: '0'
            isCurrentCycleBeginBalanceEnabled:
              maximum: 9
              maxLength: 1
              type: integer
              description: This field identifies whether the beginning balance is
                considered in the decision to waive or defer interest. <br/>The values
                are:<br/>&nbsp; '0' - Do not use the beginning balance in the waive
                or defer decision process (Default) <br/>&nbsp; '1' - Use the beginning
                balance in the waive or defer decision process
              example: '0'
            currentCycleBeginningThresholdAmount:
              maxLength: 24
              type: string
              description: This field identifies balance threshold that the beginning
                balance must be less than or equal to before interest is waived or
                deferred.
              example: $0.00
            isCurrentCycleEndingBalanceEnabled:
              maximum: 9
              maxLength: 1
              type: integer
              description: This field identifies whether the ending balance is considered
                in the decision to waive or defer interest. <br/>The values are:<br/>&nbsp;
                '0' - Do not use the ending balance in the waive or defer decision
                process (Default) <br/>&nbsp; '1' - Use the ending balance in the
                waive or defer decision process
              example: '0'
            currentCycleEndingThresholdAmount:
              maxLength: 24
              type: string
              description: This field identifies the balance threshold that the ending
                balance must be less than or equal to before interest is deferred
                or waived.
              example: $0.00
            currentCyclePaidDateQualification:
              maximum: 9
              maxLength: 1
              type: integer
              description: Code that indicates whether the date when the account or
                plan beginning balance is paid is used to qualify the account or plan
                to waive or defer current cycle interest. <br/>The values are:<br/>&nbsp;
                '0' - Not used (Default) <br/>&nbsp; '1' - Beginning balance must
                be paid in full, or within variance, by grace day in order to waive
                or defer interest <br/>&nbsp; '2' - Beginning balance must be paid
                in full, or within variance, by statement day in order to waive or
                defer interest
              example: '0'
            isWaivePriorCycleInterestEnabled:
              maximum: 9
              maxLength: 1
              type: integer
              description: Code that indicates whether prior cycle interest should
                be waived if specific account conditions are met. <br/>The values
                are:<br/>&nbsp; '0' - Always bill prior cycle interest (Default) <br/>&nbsp;
                '1' - Waive prior cycle interest if waive conditions are met
              example: '0'
            isPriorCycleNsfPaymentReversalEnabled:
              maximum: 9
              maxLength: 1
              type: integer
              description: Code that indicates whether an NSF payment reversal should
                be considered in the decision to waive interest for the prior cycle.
                <br/>The values are:<br/>&nbsp; '0' - Do not allow NSF payment reversal;
                interest is not waived if an NSF payment reversal occurs (Default)
                <br/>&nbsp; '1' - Allow NSF payment reversals
              example: '0'
            priorCycleInterestBalanceIndicator:
              maximum: 9
              maxLength: 1
              type: integer
              description: 'Code that indicates whether an account or plan beginning
                balance is used in the interest disposition decisions. <br/>The values
                are:<br/>&nbsp; ''0'' - Account or plan balance is not considered
                (Default) <br/>&nbsp; ''1'' - Account balance is considered '
              example: '0'
            isPriorCycleBeginBalanceEnabled:
              maximum: 9
              maxLength: 1
              type: integer
              description: This field identifies whether the beginning balance is
                considered in the decision to waive interest. <br/>The values are:<br/>&nbsp;
                '0' - Do not use the beginning balance in the waive decision process
                (Default) <br/>&nbsp; '1' - Use the beginning balance in the waive
                decision process
              example: '0'
            priorCycleBeginningThresholdAmount:
              maxLength: 24
              type: string
              description: This field identifies the balance threshold that the beginning
                balance must be less than or equal to before interest is waived.
              example: $0.00
            isPriorCycleEndingBalanceEnabled:
              maximum: 9
              maxLength: 1
              type: integer
              description: This field identifies whether the ending balance is considered
                in the decision to waive interest. <br/>The values are:<br/>&nbsp;
                '0' - Do not use the ending balance in the waive decision process
                (Default) <br/>&nbsp; '1' - Use the ending balance in the waive decision
                process
              example: '0'
            priorCycleEndingThresholdAmount:
              maxLength: 24
              type: string
              description: The second part of the field is the balance threshold that
                the ending balance must be less than or equal to before interest is
                waived.
              example: $0.00
            isWaiveResidualInterestEnabled:
              maximum: 9
              maxLength: 1
              type: integer
              description: Code that indicates whether residual interest should be
                waived if specific account conditions are met. <br/>The values are:<br/>&nbsp;
                '0' - Always bill residual interest (Default) <br/>&nbsp; '1' - Waive
                residual interest if waive conditions are met <br/>&nbsp; '2' - Defer
                residual interest
              example: '0'
            isResidualInterestNsfPaymentReversalEnabled:
              maximum: 9
              maxLength: 1
              type: integer
              description: Code that indicates whether an NSF payment reversal should
                be considered in the decision to waive residual interest. <br/>The
                values are:<br/>&nbsp; '0' - Do not allow NSF payment reversal; interest
                is not waived if an NSF payment reversal occurs (Default) <br/>&nbsp;
                '1' - Allow NSF payment reversals
              example: '0'
            residualInterestBalanceIndicator:
              maximum: 9
              maxLength: 1
              type: integer
              description: Code that indicates whether an account or plan beginning
                balance is used in the interest disposition decisions. <br/>The values
                are:<br/>&nbsp; '0' - Account or plan balance is not considered (Default)
                <br/>&nbsp; '1' - Account balance is considered <br/>&nbsp; '2' -
                Plan balance is considered
              example: '0'
            isResidualInterestBeginBalanceEnabled:
              maximum: 9
              maxLength: 1
              type: integer
              description: This field identifies whether the beginning balance is
                considered in the decision to waive interest. <br/>The values are:<br/>&nbsp;
                '0' - Do not use the beginning balance in the waive decision process
                (Default) <br/>&nbsp; '1' - Use the beginning balance in the waive
                decision process
              example: '0'
            residualInterestBeginningThresholdAmount:
              maxLength: 24
              type: string
              description: This field identifies balance threshold that the beginning
                balance must be less than or equal to before interest is waived.
              example: $0.00
            isResidualInterestEndingBalanceEnabled:
              maximum: 9
              maxLength: 1
              type: integer
              description: This field identifies whether the ending balance is considered
                in the decision to waive interest. <br/>The values are:<br/>&nbsp;
                '0' - Do not use the ending balance in the waive decision process
                (Default) <br/>&nbsp; '1' - Use the ending balance in the waive decision
                process
              example: '0'
            residualInterestEndingThresholdAmount:
              maxLength: 24
              type: string
              description: This field identifies balance threshold that the ending
                balance must be less than or equal to before interest is waived.
              example: $0.00
            priorCyclePaidDateQualification:
              maximum: 9
              maxLength: 1
              type: integer
              description: Code that indicates whether the date when the account or
                plan beginning balance is paid is used to qualify the account or plan
                to waive prior cycle interest. <br/>The values are:<br/>&nbsp; '0'
                - Not used (Default) <br/>&nbsp; '1' - Beginning balance must be paid
                in full, or within variance, by grace day in order to waive interest
                <br/>&nbsp; '2' - Beginning balance must be paid in full, or within
                variance, by statement day in order to waive interest
              example: '0'
            residualInterestPaidDateQualification:
              maximum: 9
              maxLength: 1
              type: integer
              description: Code that indicates whether the date when the account or
                plan beginning balance is paid is used to qualify the account or plan
                to waive residual interest. <br/>The values are:<br/>&nbsp; '0' -
                Not used (Default) <br/>&nbsp; '1' - Beginning balance must be paid
                in full, or within variance, by grace day in order to waive interest
                <br/>&nbsp; '2' - Beginning balance must be paid in full, or within
                variance, by statement day in order to waive interest
              example: '0'
    BnplTierRangeOfTemplateId_InquireProductV1ResponseModel:
      type: object
      properties:
        configurationTemplate:
          maxLength: 10
          type: string
          description: Field indicates the BNPL configuration template which will
            be defaulted from offer code parameter screen. Field will be used for
            bundled BNPL offer.
          example: TEMPLATE 1
        tierMinimumAmount:
          maxLength: 27
          type: string
          description: Minimum Value of BNPL Template ID. Value is defined as monetary
            units where NOD value is not considered. When business want to set $100.00
            in minimum then it has to set as 0000000000100.
          example: '0000000001000'
        tierMaximumAmount:
          maxLength: 27
          type: string
          description: Maximum Value of BNPL Template ID. Value is defined as monetary
            units where NOD value is not considered. When business want to set $1000.00
            in maximum then it has to set as 0000000001000.
          example: '0000000010000'
    InquireProductV1ResponseModel:
      type: object
      properties:
        businessUnit:
          maximum: 999
          maxLength: 3
          type: integer
          description: Unique identification number associated with the organization.
            Valid values from 1-998.
          example: '600'
        productId:
          maximum: 999
          maxLength: 3
          type: integer
          description: Unique identification number of the product associated with
            the organization. Valid values are 1-998.
          example: '1'
        productDescription:
          maxLength: 30
          type: string
          description: This filed is the description of the Product entity. This description
            enables you to identify the kind of accounts processed by this product.
          example: VISA CREDIT CONSUMER
        cardProductDisplay:
          maximum: 9
          maxLength: 1
          type: integer
          description: Flag that indicates whether cards in this logo display a logo
            symbol for PLUS, Cirrus, or Maestro. <br/>The values are:<br/>&nbsp; '0'
            - No cards in this product display a PLUS, Cirrus, or Maestro product
            (Default) <br/>&nbsp; '1' - Cards in this product display a Cirrus symbol
            <br/>&nbsp; '2' - Cards in this product display a PLUS symbol <br/>&nbsp;
            '3' - Cards in this product display a Maestro symbol <br/>&nbsp; '4' -
            Cards in this product display both Cirrus and Maestro symbols <br/>&nbsp;
            '5' - Cards in this product display a Maestro symbol (chip cards only)
          example: '0'
        quarterlyAffiliateCardProduct:
          maxLength: 3
          type: string
          description: Code that indicates the card association card product. This
            field is required if the Product entity processes bankcard accounts (TYPE
            OF ACCOUNTS PROCESSED field is D, X, or Y) to identify the quarterly reporting
            classification or card product.
          example: V1
        isLoanFeatureEnabled:
          maximum: 9
          maxLength: 1
          type: integer
          description: Flag that indicates whether the loans feature is active for
            the product. <br/>The values are:<br/>&nbsp; '0' - No, the loans feature
            is not active for this product (Default) <br/>&nbsp; '1' - Yes, the loans
            feature is active for this product
          example: '1'
        isPaymentHolidaysEnabled:
          maxLength: 1
          type: string
          description: Code that indicates whether manual skip payments are allowed
            for accounts in this product. <br/>The values are:<br/>&nbsp; 'N' - Skip
            payments are not allowed (Default) <br/>&nbsp; 'Y' - Skip payments are
            allowed
          example: Y
        isSameDayEmbossingEnabled:
          maximum: 9
          maxLength: 1
          type: integer
          description: This flag indicates whether same-day embossing is allowed for
            accounts within this product. <br/>The values are:<br/>&nbsp; '0' - Same-day
            embossing is not allowed (Default) <br/>&nbsp; '1' - Same-day embossing
            is allowed
          example: '1'
        isChipOrPinCardEnabled:
          maximum: 9
          maxLength: 1
          type: integer
          description: This flag identifies whether smart cards can be issued for
            cards in this product. <br/>The values are:<br/>&nbsp; '0' - No, smart
            cards cannot be issued for cards in this product (only magnetic-stripe
            cards allowed) (Default) <br/>&nbsp; '1' - Yes, smart cards can be issued
            for cards in this product (smart and magnetic-stripe cards allowed)
          example: '1'
        delinquencyAgeing:
          maxLength: 1
          type: string
          description: Code that specifies whethre delinquency aging occurs on payment
            due date or cycle date. <br/>The values are:<br/>&nbsp; 'D' - Age delinquency
            on payment due date (Default) <br/>&nbsp; 'S' - Age delinquency on cycle
            date
          example: D
        processingControlLevel:
          maxLength: 1
          type: string
          description: This is a flag which indicates the processing control level
            for accounts in this product. <br/>The values are:<br/>&nbsp; 'L' - Product
            <br/>&nbsp; 'O' - Business unit <br/>&nbsp; 'S' - System
          example: O
        isCollectionsEnabled:
          maxLength: 1
          type: string
          description: This flag indicates whether CTA is active. <br/>The values
            are:<br/>&nbsp; 'N' - CTA is not active <br/>&nbsp; 'Y' - CTA is active
            (Default)
          example: Y
        automaticAccountNumberGeneration:
          maxLength: 1
          type: string
          description: This flag indicates whether this product uses automatic account
            number and card number generation. <br/>The values are:<br/>&nbsp; 'N'
            - No, this product does not allow automatic number generation (Default)
            <br/>&nbsp; 'Y' - Yes, this product allows automatic number generation
            using the number generation table defined on Products  16-Account Generation
            Tables <br/>&nbsp; 'I' - Yes, this product allows automatic number generation
            using the Number Generation tables in SSC. When this field is I, CMS uses
            the ACCOUNT IDENTIFICATION and CARD IDENTIFICATION fields for the Account
            Base Segment number and card number, respectively
          example: I
        authAlerts:
          maximum: 9
          maxLength: 1
          type: integer
          description: This flag indicates whether transaction authorization-based
            alerts functionality is active for the product and whether the cardholder
            is automatically enrolled for the alert. <br/>The values are:<br/>&nbsp;
            '0' - Transaction-based alerts functionality is not active (Default) <br/>&nbsp;
            '1' - Transaction-based alerts functionality is active and the cardholder
            to be manually enrolled <br/>&nbsp; '2' - Transaction-based alerts functionality
            is active and the cardholder to be automatically enrolled
          example: '0'
        isFalcon6Enabled:
          maxLength: 1
          type: string
          description: This is the flag that indicates whether the Falcon 6 interface
            is active for this product. <br/>The values are:<br/>&nbsp; '0' - The
            Falcon 6 interface is not active for this product (Default) <br/>&nbsp;
            '1' - The Falcon 6 interface is active for this product
          example: '0'
        isVipOverrideEnabled:
          maxLength: 1
          type: string
          description: This flag indicates if VIP override is active or not. <br/>The
            values are:<br/>&nbsp; 'Y' - Yes, VIP override active <br/>&nbsp; 'N'
            - No, VIP override not active
          example: N
        isSecureCodeEnabled:
          maximum: 9
          maxLength: 1
          type: integer
          description: Flag that indicates whether the Connection Management System
            (CCM) is active. <br/>The values are:<br/>&nbsp; '0' - Secure Code is
            not active for this product (Default) <br/>&nbsp; '1' - Secure Code is
            active for this product
          example: '0'
        isLoyaltyManagementEnabled:
          maxLength: 1
          type: string
          description: This flag indicates if the Loyalty Management System (LMS)
            is active for this product. <br/>The values are:<br/>&nbsp; '0' - LMS
            is not active for this product (Default) <br/>&nbsp; '1' - LMS is active
            for this product
          example: '1'
        isDebitCardProcessEnabled:
          maximum: 9
          maxLength: 1
          type: integer
          description: This flag indicates whether the online debit card processing
            feature is active for this product. <br/>The values are:<br/>&nbsp; '0'
            - No, debit card processing is not active (Default) <br/>&nbsp; '1' -
            Yes, debit card processing is active
          example: '0'
        isTokenizationServiceEnabled:
          maximum: 9
          maxLength: 1
          type: integer
          description: This flag indicates whether the tokenization functionality
            is active for the product. <br/>The values are:<br/>&nbsp; '0' - No, the
            tokenization functionality is not active (Default) <br/>&nbsp; '1' - Yes,
            the tokenization functionality is active
          example: '1'
        isManualPinResetEnabled:
          maximum: 9
          maxLength: 1
          type: integer
          description: Flag that indicates whether the PIN try counter field on the
            Embosser entity is allowed to be manually reset for accounts in this product.
            <br/>The values are:<br/>&nbsp; '0' - Manual reset of the PIN CTR RESET
            field is not allowed (Default) <br/>&nbsp; '1' - Manual reset of the PIN
            CTR RESET field is allowed
          example: '1'
        isCardActionTableEnabled:
          maximum: 9
          maxLength: 1
          type: integer
          description: This flag indicates whether the enhanced PIN and card warehousing
            functionality provided by the card action table is enabled. <br/>The values
            are:<br/>&nbsp; '0' - Card action table is disabled. However, if the entries
            are made in the card action table, CMS checks the values in the table
            for accuracy (Default) <br/>&nbsp; '1' - Card action table is enabled
          example: '0'
        defaultCardTechnology:
          maximum: 9
          maxLength: 1
          type: integer
          description: Default Card Technology to be used during new account setup.
            <br/>The values are:<br/>&nbsp; '0' - Issue a magnetic-stripe card <br/>&nbsp;
            '1' - Issue a smart card <br/>&nbsp; '2' - Issue a magnetic-stripe contactless
            card <br/>&nbsp; '3' - Issue a smart contactless card <br/>&nbsp; '4'
            - Provision a magnetic-stripe contactless mobile payment instrument (PI)
            <br/>&nbsp; '5' - Provision a smart contactless mobile PI
          example: '3'
        isScriptingEnabled:
          maximum: 9
          maxLength: 1
          type: integer
          description: This is a flag which indicates whether the smart card scripting
            functionality provided by CMS, FAS (Financial Authorization System), ESS
            (EMV Scripting System), and RIS is active for this product. <br/>The values
            are:<br/>&nbsp; '0' - Scripting functionality is not active <br/>&nbsp;
            '1' - Scripting functionality is active
          example: '0'
        isSweepOptionEnabled:
          maximum: 9
          maxLength: 1
          type: integer
          description: This flag indicates whether sweep processing is allowed for
            this product. <br/>The values are:<br/>&nbsp; '0' - Sweep is not allowed.
            Billing accounts cannot be established in this product (Default) <br/>&nbsp;
            '1' - Sweeping is allowed. Billing accounts can be established in this
            product
          example: '0'
        isCrossBorderAlertEnabled:
          maximum: 9
          maxLength: 1
          type: integer
          description: This is the flag that indicates the alert setting for cross
            border transactions at the cardholder level. <br/>The values are:<br/>&nbsp;
            '0' - No alert to be sent (Default) <br/>&nbsp; '1' - Alert to be sent
            for cross border transactions
          example: '0'
        creditLimitBypass:
          maximum: 9
          maxLength: 1
          type: integer
          description: This is the field that determines whether accounts belonging
            to this product will be excluded from an adaptive control system (ACS)
            credit limit review. <br/>The values are:<br/>&nbsp; '0' - Include (Default)
            <br/>&nbsp; '1' - Exclude from credit limit increase <br/>&nbsp; '2' -
            Exclude from credit limit decrease <br/>&nbsp; '3' - Exclude from credit
            limit decision area
          example: '0'
        isLocalorInternationalUsageEnabled:
          maximum: 9
          maxLength: 1
          type: integer
          description: This flag indicates if the cards that are assigned to accounts
            in this product are approved for local use only or international use.
            <br/>The values are:<br/>&nbsp; '0' - Approved for international use <br/>&nbsp;
            '1' - Approved for local use only
          example: '0'
        isNewCardDefaultEnabled:
          maximum: 9
          maxLength: 1
          type: integer
          description: Code that indicates whether the value in the ENHANCED PRODUCT
            field defaults to the Embosser entity for new cards in this product. <br/>The
            values are:<br/>&nbsp; '0' - No, do not default the value in the ENHANCED
            PRODUCT field to the Embosser entity for new cards in this product (Default)
            <br/>&nbsp; '1' - Yes, default the value in the ENHANCED PRODUCT field
            to the Embosser entity for new cards in this product
          example: '0'
        enhancedProductsEligible:
          maximum: 9
          maxLength: 1
          type: integer
          description: This flag indicates whether accounts in the product are eligible
            for an enhanced product. <br/>The values are:<br/>&nbsp; '0' - No, accounts
            in this product are not eligible for an enhanced product (Default) <br/>&nbsp;
            '1' - Yes, accounts in this product are eligible for an enhanced product
            <br/>&nbsp; '4' - Small business accounts participate in the MasterCard
            U.S. Small Business Spend program
          example: '0'
        isCardPresenttransactionEnabled:
          maxLength: 1
          type: string
          description: This flag indicates whether virtual card accounts are allowed
            for the product and whether FAS restricts card-present transactions for
            virtual card accounts. <br/>The values are:<br/>&nbsp; ' ' - Not a virtual
            card product (Default) <br/>&nbsp; 'X' - Virtual card product; FAS does
            not restrict card-present transactions for virtual card accounts <br/>&nbsp;
            'Y' - Virtual card product; FAS restricts card-present transactions for
            virtual card accounts
          example: ' '
        newCardPlastics:
          maxLength: 1
          type: string
          description: This flag indicates whether CMS generates a tape for embossing
            plastics for new accounts. <br/>The values are:<br/>&nbsp; 'N' - No, do
            not generate plastic for accounts <br/>&nbsp; 'Y' - Yes, issue plastic
            for new accounts <br/>&nbsp; 'B' - Yes, issue plastic for new accounts
            <br/>&nbsp; 'F' - Yes, issue plastic for new accounts
          example: Y
        embossingFilesKeyType:
          maxLength: 1
          type: string
          description: Key type for Embosser Files. <br/>The values are:<br/>&nbsp;
            'B' - Embossing Zone PIN Key (ZPK) <br/>&nbsp; 'E' - Embossing Transport
            Key (ETK) <br/>&nbsp; 'F' - Fixed Embossing Transport Key (ETK) <br/>&nbsp;
            'G' - PIN Transport Key (PTK—random key) <br/>&nbsp; 'H' - Zone PIN Key
            (PTK—fixed key)
          example: B
        keyTypeForPinMailerFiles:
          maxLength: 1
          type: string
          description: Key type for PIN mailer. <br/>The values are:<br/>&nbsp; 'B'
            - Embossing Zone PIN Key (ZPK) <br/>&nbsp; 'E' - Embossing Transport Key
            (ETK) <br/>&nbsp; 'F' - Fixed Embossing Transport Key (ETK) <br/>&nbsp;
            'G' - PIN Transport Key (PTK—random key) <br/>&nbsp; 'H' - Zone PIN Key
            (PTK—fixed key)
          example: B
        pinMailerNameaddress:
          maximum: 9
          maxLength: 1
          type: integer
          description: Determines the name and address to print on PIN mailer. <br/>The
            values are:<br/>&nbsp; '0' - Print name and address from the Embosser
            entity for the cardholder <br/>&nbsp; '1' - Print name and address of
            the relevant cardholder <br/>&nbsp; '2' - Print name of the relevant cardholder
            and address of the primary cardholder <br/>&nbsp; '3' - Print name and
            address of the primary cardholder
          example: '0'
        cardMailerNameaddress:
          maximum: 9
          maxLength: 1
          type: integer
          description: Determines the name and address to print on card mailer. <br/>The
            values are:<br/>&nbsp; '0' - Print name and address from the Embosser
            entity for the cardholder <br/>&nbsp; '1' - Print name and address of
            the relevant cardholder <br/>&nbsp; '2' - Print name of the relevant cardholder
            and address of the primary cardholder <br/>&nbsp; '3' - Print name and
            address of the primary cardholder
          example: '0'
        isCardBureauFeedbackEnabled:
          maximum: 9
          maxLength: 1
          type: integer
          description: This flag indicates whether CMS uses the Card Bureau Feedback
            (ATAD) file to update the MAILER DATE field on the Embosser entity. <br/>The
            values are:<br/>&nbsp; '0' - Card Bureau Feedback (ATAD) file is not used
            and CMS updates the MAILER DATE field (Default) <br/>&nbsp; '1' - Card
            Bureau Feedback (ATAD) file is used and the issuer is responsible for
            updating the MAILER DATE field. For smart cards, the issuer must provide
            the ATAD file; for magnetic stripe cards, the issuer must provide nonmonetary
            maintenance entity to update the field
          example: '0'
        pinMailerForCardAction:
          type: array
          items:
            $ref: '#/components/schemas/PinMailerForCardAction_InquireProductV1ResponseModel'
        isDirectDebitCreditEnabled:
          maxLength: 1
          type: string
          description: Code that indicates whether direct debit and direct credit
            processing is active for accounts in this product. <br/>The values are:<br/>&nbsp;
            'N' - Direct debit and direct credit processing is not active (Default)
            <br/>&nbsp; 'Y' - Direct debit and direct credit processing is active
            <br/>&nbsp; 'A' - Direct debit and direct credit processing is active
            for prepaid accounts (TYPE OF ACCOUNTS PROCESSED on Products  01-Product
            Specification is Y)
          example: N
        isOverlimitProcessingOptionIndicatorEnabled:
          maximum: 9
          maxLength: 1
          type: integer
          description: This field is a code that indicates whether the product participates
            in overlimit opt-in processing. <br/>The values are:<br/>&nbsp; '0' -
            Product does not participate in overlimit opt-in functionality (Default)
            <br/>&nbsp; '1' - Product participates in overlimit opt-in functionality;
            allow overlimit approvals for all accounts within the product <br/>&nbsp;
            '2' - Product participates in overlimit opt-in functionality; only allow
            overlimit approvals for accounts within the product that have opted in
          example: '0'
        openToBuyCreditBalance:
          maximum: 9
          maxLength: 1
          type: integer
          description: This field indicates whether CMS includes the credit balance,
            disputed amounts, and original loan amount when calculating the open-to-buy
            amount. <br/>The values are:<br/>&nbsp; '0' - Include credit balance exclude
            memo credit open to buy <br/>&nbsp; '1' - Exclude all open to buy <br/>&nbsp;
            '2' - Exclude credit balance include memo credit open to buy <br/>&nbsp;
            '3' - Include all open to buy
          example: '1'
        includeDisputedAmounts:
          maximum: 9
          maxLength: 1
          type: integer
          description: Code that indicates whether CMS includes disputed amounts in
            the open-to-buy (OTB) calculation of accounts. <br/>The values are:<br/>&nbsp;
            '0' - Include disputed amounts (Default) <br/>&nbsp; '1' - Exclude disputed
            amounts
          example: '0'
        residenceId:
          maxLength: 3
          type: string
          description: This flag identifies the state, province or country in which
            the  account holder resides.
          example: SX1
        issuanceId:
          maxLength: 3
          type: string
          description: This is the flag which identifies the state, province or country
            in which the account was issued.
          example: SX1
        isWspTokenEnabled:
          maximum: 9
          maxLength: 1
          type: integer
          description: This field is used to determine if a particular logo allows
            tokenization. <br/>The values are:<br/>&nbsp; '0' - Logo not eligible
            (Default) <br/>&nbsp; '1' - Logo eligible for Tokenization
          example: '1'
        typeOfAccount:
          maxLength: 1
          type: string
          description: This flag identifies the type of accounts processed by the
            product. <br/>The values are:<br/>&nbsp; 'B' - Bad checks/NSF checks <br/>&nbsp;
            'C' - COD accounts <br/>&nbsp; 'D' - Debit card <br/>&nbsp; 'L' - Layaway
            <br/>&nbsp; 'P' - Profit and loss <br/>&nbsp; 'R' - Revolving, which is
            also referred to as retail or private label (Default) <br/>&nbsp; 'X'
            - Bankcard <br/>&nbsp; 'Y' - Bankcard — prepaid <br/>&nbsp; 'Z' - Chargecard
          example: X
        markUpFeeEnabled:
          type: object
          properties:
            isReimburseIssuerOrSchemaEnabled:
              maxLength: 1
              type: string
              description: This is a flag which indicates whether the credit fee option
                is active for this product. When this option is active, the cardholder
                receives reimbursement for issuer and/or scheme fees on credit transactions.
                <br/>The values are:<br/>&nbsp; '0' - Do not reimburse issuer and/or
                scheme fees on credit transactions (Default) <br/>&nbsp; '1' - Reimburse
                issuer and/or scheme fees on credit transactions
              example: '0'
            isIssuerEnabled:
              maxLength: 1
              type: string
              description: This is a flag that indicates whether the issuer-markup
                fee option is active for this product. <br/>The values are:<br/>&nbsp;
                '0' - Issuer markup is not active; do not assess this fee to the cardholder
                (Default) <br/>&nbsp; '1' - Issuer markup is active; assess this fee
                to the cardholder
              example: '0'
            isSchemeEnabled:
              maxLength: 1
              type: string
              description: This is a flag which indicates whether the scheme-markup
                fee option is active for this product. <br/>The values are:<br/>&nbsp;
                '0' - Scheme markup is not active; do not assess this fee to the cardholder
                (Default) <br/>&nbsp; '1' - Scheme markup is active; assess this fee
                to the cardholder
              example: '0'
            isUserDefinedEnabled:
              maxLength: 1
              type: string
              description: This is a flag which indicates whether the user-defined
                markup fee option is active for this product. When this option is
                active, CMS assesses user-defined markup fees on first presentments
                and reversals. <br/>The values are:<br/>&nbsp; '0' - User-defined
                markup fee is not active; do not assess this fee to the cardholder
                (Default) <br/>&nbsp; '1' - User-defined markup fee is active; assess
                this fee to the cardholder
              example: '0'
        cardActivationControls:
          type: object
          properties:
            newCardActivation:
              maxLength: 1
              type: string
              description: This flag indicates whether to use card activation for
                new cards. <br/>The values are:<br/>&nbsp; 'N' - Do not use card activation
                (Default) <br/>&nbsp; 'Y' - Use card activation
              example: Y
            additionalCardActivation:
              maxLength: 1
              type: string
              description: This flag indicates whether to use card activation for
                additional cards. <br/>The values are:<br/>&nbsp; 'N' - Do not use
                card activation (Default) <br/>&nbsp; 'Y' - Use card activation
              example: Y
            reissueCardActivation:
              maxLength: 1
              type: string
              description: This flag indicates whether to use card activation for
                reissued cards. <br/>The values are:<br/>&nbsp; 'N' - Do not use card
                activation (Default) <br/>&nbsp; 'Y' - Use card activation
              example: Y
            replacementCardActivation:
              maxLength: 1
              type: string
              description: This flag indicates whether to use card activation for
                replacement cards. <br/>The values are:<br/>&nbsp; 'N' - Do not use
                card activation (Default) <br/>&nbsp; 'Y' - Use card activation
              example: Y
        paymentProcessingControls:
          type: object
          properties:
            applicationMethodForAccountReceivable:
              maxLength: 1
              type: string
              description: This Field determines the payment application method for
                accounts-receivable accounts which are non-charged-off accounts. <br/>The
                values are:<br/>&nbsp; 'B' - Billed-not-paid components, then principal,
                then current cycle transactions, across all plans <br/>&nbsp; 'C'
                - Billed-not-paid components, then to principal and current cycle
                transactions by plan based on plan priority <br/>&nbsp; 'D' - Billed-not-paid
                components across all plans based on plan priority, then to principal
                and current transactions <br/>&nbsp; 'H' - Billed-not-paid components,
                including principal and current cycle transactions, across all plans
                <br/>&nbsp; 'K' - Loan credit plans with any type of settlement quote
                if the payment amount is within the settlement variance amount, then
                all credit plans with a fixed payment amount by plan priority (like
                application method P), then all credit plans with a non-fixed payment
                amount by plan priority (like application method B) <br/>&nbsp; 'L'
                - Loan credit plans with a P or W settlement quote if the payment
                amount is within the settlement variance amount, then all credit plans
                with a fixed payment amount by plan priority (like application method
                P), then all credit plans with a non-fixed payment amount by plan
                priority (like application method B) <br/>&nbsp; 'M' - Billed-not-paid
                components by payment hierarchy, then the remaining due amount (any
                plan minimum amount due remaining after non-principal BNP components
                are satisfied), then statement principal, then current cycle transactions,
                across all plans <br/>&nbsp; 'N' - Billed-not-paid components by payment
                hierarchy, then the remaining due amount (any plan minimum amount
                due remaining after BNP components are satisfied) across plans, then
                statement principal and current cycle transactions by plan <br/>&nbsp;
                'O' - Interest rate of plan, total amount due of plan, plan priority
                number, and plan sequence number <br/>&nbsp; 'P' - Plan priority,
                then PAYMENT MATRIX table <br/>&nbsp; 'U' - User-defined application
                method. A user exit must be provided when using this method
              example: H
            applicationMethodForProfitLoss:
              maxLength: 1
              type: string
              description: This field determines the payment application method for
                profit-and-loss accounts, which are charged-off accounts. <br/>The
                values are:<br/>&nbsp; 'B' - Billed-not-paid components, then principal,
                then current cycle transactions, across all plans <br/>&nbsp; 'C'
                - Billed-not-paid components, then to principal and current cycle
                transactions by plan based on plan priority <br/>&nbsp; 'D' - Billed-not-paid
                components across all plans based on plan priority, then to principal
                and current transactions <br/>&nbsp; 'H' - Billed-not-paid components,
                including principal and current cycle transactions, across all plans
                <br/>&nbsp; 'K' - Loan credit plans with any type of settlement quote
                if the payment amount is within the settlement variance amount, then
                all credit plans with a fixed payment amount by plan priority (like
                application method P), then all credit plans with a non-fixed payment
                amount by plan priority (like application method B) <br/>&nbsp; 'L'
                - Loan credit plans with a P or W settlement quote if the payment
                amount is within the settlement variance amount, then all credit plans
                with a fixed payment amount by plan priority (like application method
                P), then all credit plans with a non-fixed payment amount by plan
                priority (like application method B) <br/>&nbsp; 'M' - Billed-not-paid
                components by payment hierarchy, then the remaining due amount (any
                plan minimum amount due remaining after non-principal BNP components
                are satisfied), then statement principal, then current cycle transactions,
                across all plans <br/>&nbsp; 'N' - Billed-not-paid components by payment
                hierarchy, then the remaining due amount (any plan minimum amount
                due remaining after BNP components are satisfied) across plans, then
                statement principal and current cycle transactions by plan <br/>&nbsp;
                'O' - Interest rate of plan, total amount due of plan, plan priority
                number, and plan sequence number <br/>&nbsp; 'P' - Plan priority,
                then PAYMENT MATRIX table <br/>&nbsp; 'U' - User-defined application
                method. A user exit must be provided when using this method
              example: D
            prepaymentsAllowed:
              maximum: 9
              maxLength: 1
              type: integer
              description: Code that indicates whether prepayments are allowed for
                accounts in this product. <br/>The values are:<br/>&nbsp; '0' - Do
                not allow prepayments (Default) <br/>&nbsp; '1' - Allow prepayments
                only for transactions associated with logic module 036 (prepayment)
                <br/>&nbsp; '2' - Allow prepayments for transactions associated with
                all payment logic modules (030, 033, 036, and 039). Any overpayment
                is treated as a prepayment
              example: '0'
            paymentApplicationLevel:
              maxLength: 1
              type: string
              description: Code that indicates whether CMS applies payments to accounts
                with multiple credit plan segments by the plan priority defined on
                the Credit Plan Master entity or the plan priority defined on the
                Product entity. <br/>The values are:<br/>&nbsp; 'L' - Product level
                <br/>&nbsp; 'P' - Credit plan level (Default)
              example: P
        bnplAlerts:
          type: object
          properties:
            isbookingAlertEnabled:
              maximum: 9
              maxLength: 1
              type: integer
              description: Field indicates whether the BNPL booking alert functionality
                is active. <br/>The values are:<br/>&nbsp; '0' - BNPL booking alert
                functionality is not active on the product (default)<br/>&nbsp; '1'
                - BNPL booking alert functionality is active on the product
              example: '0'
            bookingAlertChannelIndicator:
              maximum: 9
              maxLength: 1
              type: integer
              description: Field indicates the communication channel used to send
                BNPL booking alert to the cardholder. <br/>The values are:<br/>&nbsp;
                '0' - BNPL booking alert feature is inactive (Default)<br/>&nbsp;
                '1' - BNPL booking alert feature is active and SMS alert method is
                used<br/>&nbsp; '2' - BNPL booking alert feature is active and Email
                alert method is used<br/>&nbsp; '3' - BNPL booking alert feature is
                active and SMS and Email alert method is used
              example: '0'
            isIplanActivationAlertEnabled:
              maximum: 9
              maxLength: 1
              type: integer
              description: Field indicates whether the iPlan activation alert functionality
                is active. <br/>The values are:<br/>&nbsp; '0' - iPlan activation
                alert functionality is not active on the product (default)<br/>&nbsp;
                '1' - iPlan activation alert functionality is active on the product
              example: '0'
            iplanActivateAlertChannelIndicator:
              maximum: 9
              maxLength: 1
              type: integer
              description: field indicates the communication channel used to send
                iPlan activation alert to the cardholder. <br/>The values are:<br/>&nbsp;
                '0' - iPlan activation alert feature is inactive (Default) '1' - iPlan
                activation alert feature is active and SMS alert method is used<br/>&nbsp;
                '2' - iPlan activation alert feature is active and Email alert method
                is used<br/>&nbsp; '3' - iPlan activation alert feature is active
                and SMS and Email alert method is used
              example: '0'
            isPaymentDueAlertEnabled:
              maximum: 9
              maxLength: 1
              type: integer
              description: Field indicates whether the BNPL payment due alert functionality
                is active. <br/>The values are:<br/>&nbsp; '0' - BNPL payment due
                alert functionality is not active on the product (default)<br/>&nbsp;
                '1' - BNPL payment due alert functionality is active on the product
              example: '0'
            paymentDueAlertChannelIndicator:
              maximum: 9
              maxLength: 1
              type: integer
              description: Field indicates the communication channel used to send
                BNPL payment due alert to the cardholder. <br/>The values are:<br/>&nbsp;
                '0' - BNPL payment due alert feature is inactive (Default)<br/>&nbsp;
                '1' - BNPL payment due alert feature is active and SMS alert method
                is used<br/>&nbsp; '2' - BNPL payment due alert feature is active
                and Email alert method is used<br/>&nbsp; '3' - BNPL payment due alert
                feature is active and SMS and Email alert method is used
              example: '0'
            isMissPamyemtAlertEnabled:
              maximum: 9
              maxLength: 1
              type: integer
              description: Field indicates whether the BNPL missed payment alert functionality
                is active. <br/>The values are:<br/>&nbsp; '0' - BNPL missed payment
                alert functionality is not active on the product (default)<br/>&nbsp;
                '1' - BNPL missed payment alert functionality is active on the product
              example: '0'
            missPaymentAlertChannelIndicator:
              maximum: 9
              maxLength: 1
              type: integer
              description: Field indicates the communication channel used to send
                BNPL missed payment alert to the cardholder. <br/>The values are:<br/>&nbsp;
                0' - BNPL missed payment alert feature is inactive (Default)<br/>&nbsp;
                1' - BNPL missed payment alert feature is active and SMS alert method
                is used<br/>&nbsp; 2' - BNPL missed payment alert feature is active
                and Email alert method is used<br/>&nbsp; 3' - BNPL missed payment
                alert feature is active, and SMS and Email alert method is used
              example: '0'
            isSwitchAlertEnabled:
              maximum: 9
              maxLength: 1
              type: integer
              description: Field indicates whether the iPlan switch alert functionality
                is active. <br/>The values are:<br/>&nbsp; 0' - BNPL switch alert
                functionality is not active on the product (default)<br/>&nbsp; 1'
                - BNPL switch alert functionality is active on the product<br/>&nbsp;
              example: '0'
            switchAlertChannelIndicator:
              maximum: 9
              maxLength: 1
              type: integer
              description: Field indicates the communication channel used to send
                BNPL switch alert to the cardholder. <br/>The values are:<br/>&nbsp;
                '0' - BNPL switch alert feature is inactive (Default) <br/>&nbsp;
                '1' - BNPL switch alert feature is active and SMS alert method is
                used<br/>&nbsp; '2' - BNPL switch alert feature is active and Email
                alert method is used<br/>&nbsp; '3' - BNPL switch alert feature is
                active, and SMS and Email alert method is used
              example: '1'
            isSnoozeAlertEnabled:
              maximum: 9
              maxLength: 1
              type: integer
              description: Field indicates whether the BNPL snooze alert functionality
                is active. <br/>The values are:<br/>&nbsp; '0' - BNPL snooze alert
                functionality is not active on the product (default)<br/>&nbsp; '1'
                - BNPL snooze alert functionality is active on the product
              example: '0'
            snoozeAlertChannelIndicator:
              maximum: 9
              maxLength: 1
              type: integer
              description: Field indicates the communication channel used to send
                BNPL snooze alert to the cardholder. <br/>The values are:<br/>&nbsp;
                '0' - BNPL snooze alert feature is inactive (Default) '1' - BNPL snooze
                alert feature is active and SMS alert method is used<br/>&nbsp; '2'
                - BNPL snooze alert feature is active and Email alert method is used<br/>&nbsp;
                '3' - BNPL snooze alert feature is active, and SMS and Email alert
                method is used
              example: '0'
        bnplDetails:
          type: object
          properties:
            isBnplEnabled:
              maximum: 9
              maxLength: 1
              type: integer
              description: Flag that indicates whether BNPL functionality is enabled
                for this product. <br/>The values are:<br/> &nbsp; '0' - BNPL functionality
                is not enabled Default) <br/> &nbsp; '1' - BNPL functionality is enabled
              example: '0'
            configurationTemplate:
              maxLength: 10
              type: string
              description: BNPL configuration template. This is set of controls that
                govern how each unique iPlan ( BNPL Instalment Plan) is billed, what
                is the payment frequency and what fees are supplied etc.
              example: BNPLTMPL10
            isRecalculatePayDateEnabled:
              maximum: 9
              maxLength: 1
              type: integer
              description: Field indicates whether system will use authorization date
                or transaction posting date to calculate the due dates (Pay dates)
                for a iPlan(sub plan).<br/>The values are:<br/> &nbsp; '0' - Functionality
                Inactive (Do not recalculate Pay dates of a BNPL schedule) <br/> &nbsp;
                '1' - Use Transaction posting date to recalculate the first instalment
                pay date and the rest of payment pay dates of the schedule
              example: '1'
            repaymentIndicator:
              maximum: 9
              maxLength: 1
              type: integer
              description: Field indicates what dues the system will consider when
                initiating repayment requests for a iPlan (Instalment Plan).<br/>The
                values are:<br/> &nbsp; '0' - Request repayment for the next instalment
                of the schedule and the past dues <br/> &nbsp; '1' - Request repayment
                for next instalment of the schedule
              example: '0'
            repaymentDays:
              maximum: 9
              maxLength: 1
              type: integer
              description: "Field indicates the number of days before the instalment\
                \ pay date, a repayment request will be created for the iPlan. Field\
                \ value will be used only for non-DD payment instruments. <br/>The\
                \ values are:<br/>&nbsp; '0'\t- No duration provided (default)<br/>&nbsp;\
                \ '1-9' - Valid number of days before the next instalment Pay date\
                \ that the system will automatically generate a payment request for\
                \ non-DD payment instrument"
              example: '1'
            paymentGraceDays:
              maximum: 99
              maxLength: 2
              type: integer
              description: "Field indicates the number of days after the Pay date,\
                \ missed payment fee will not be charged when customer missed the\
                \ instalment payment. <br/>The values are:<br/>&nbsp; '0'\t- No grace\
                \ days provided for Missed payment fee assessment (default)<br/>&nbsp;\
                \ '1-99' - Grace days provided for Missed payment fee assessment"
              example: '1'
            missedPaymentCount:
              maximum: 99
              maxLength: 2
              type: integer
              description: Field indicated account level missed payment threshold
                that must be reached before the system automatically applies a block
                code to the account. <br/>The values are:<br/>&nbsp; '0' - BNPL missed
                payment counter is not provided on the BNPL product (default)<br/>&nbsp;
                '1-99' - Valid BNPL missed payment counter on the BNPL product
              example: '2'
            missedPaymentBlockCode:
              maxLength: 1
              type: string
              description: Field indicated the block code system automatically apply
                when account level missed payment threshold that must be reached.
                <br/>The values are:<br/>&nbsp; 'Space' - No block code provided (default)<br/>&nbsp;
                'A-Z' - Valid block code value
              example: ' '
            isSnoozeEnabled:
              maximum: 9
              maxLength: 1
              type: integer
              description: Field indicate allow a client to defer the next contract
                pay date by a parameterized number of days beyond the scheduled pay
                date. The parameterized number of days is defined within the BNPL
                configuration Template. <br/>The values are:<br/>&nbsp; '0' - BNPL
                snooze is not active for the logo (default)<br/>&nbsp; '1' - BNPL
                snooze is active on a logo
              example: '0'
            snoozeCount:
              maximum: 99
              maxLength: 2
              type: integer
              description: Field indicates the maximum number of times payment snooze
                is allowed on an account. Each iPlan will hold the number of payments
                snooze requested on plan. The account level snooze count will be a
                sum of all the payment snooze counter among all the iPlans under account.
                <br/>The values are:<br/>&nbsp; '0' - BNPL Snooze payment counter
                is not provided on the BNPL product (default)<br/>&nbsp; '1-99' -
                Valid BNPL Snooze payment counter on the BNPL product
              example: '0'
            offerSwitchMethod:
              maximum: 9
              maxLength: 1
              type: integer
              description: Field indicates the BNPL configuration Template switch
                method used to build the rest of the instalment schedule after BNPL
                configuration Template (offer) switch. <br/>The values are:<br/>&nbsp;
                '0' - BNPL switch functionality is not active on the product (default)<br/>&nbsp;
                '1' - When switching to the new BNPL configuration Template the term
                remaining will be derived by subtracting the Current Term on the 'from'
                iPlan Schedule from the 'to' BNPL configuration Template Repayment
                Term<br/>&nbsp; '2' - When switching to the new BNPL Template the
                term remaining will be equal to the 'to' BNPL configuration Template
                Repayment Term. System will allow switch only when new template terms
                are greater than old template remaining term
              example: '0'
            offerSwitchCount:
              maximum: 99
              maxLength: 2
              type: integer
              description: Field indicates the number of times BNPL configuration
                template switch is allowed on a iPlan. iPlan holds the life to date
                switch counter value and when it reaches to threshold count on product
                level, system will not allow further switch for that particular iPlan.
                <br/>The values are:<br/>&nbsp; '0' - BNPL configuration template
                switch is not allowed (default)<br/>&nbsp; '1-99' - Maximum number
                of BNPL configuration template switches allowed
              example: '0'
        bnplTierRangeOfTemplateId:
          type: array
          items:
            $ref: '#/components/schemas/BnplTierRangeOfTemplateId_InquireProductV1ResponseModel'
        physicalVirtualIndicator:
          maxLength: 1
          type: string
          description: 'Indicates if product supports physical or virtual or both
            physical and virtual card boarding. <br/>The values are: <br/>&nbsp; ''P''
            - Physical Card <br/>&nbsp; ''V'' - Virtual Card <br/>&nbsp; ''B'' - Both
            Physical and Virtual Card'
          example: V
    PinMailerForCardAction_InquireProductV1ResponseModel:
      type: object
      properties:
        cardAction:
          maxLength: 1
          type: string
          description: This flag indicate the various card actions that use the enhanced
            PIN and card warehousing functionality when the card actions are initiated
            on the Embosser entity. <br/>The values are:<br/>&nbsp; '0' - No action
            (Default) <br/>&nbsp; '1' - Issue new card(s) <br/>&nbsp; '2' - Issue
            additional card(s) <br/>&nbsp; '3' - Issue replacement card(s) <br/>&nbsp;
            '6' - Issue emergency replacement card(s) <br/>&nbsp; '7' - Reissue card(s)
            <br/>&nbsp; '8' - Reissue card(s) with different card numbering scheme
            (CNS) <br/>&nbsp; '9' - Card technology reissue
          example: '0'
        pinOptions:
          maximum: 9
          maxLength: 1
          type: integer
          description: Code that indicates the action to be taken for enhanced PIN
            and card warehousing when the corresponding card action is processed.
            <br/>The values are:<br/>&nbsp; '0' - Do not use. Do not generate PIN
            and do not send PIN mailer (Default) <br/>&nbsp; '1' - Generate new PIN
            and send PIN mailer <br/>&nbsp; '2' - Send PIN mailer with existing PIN
          example: '0'
    BlockCodeControls_InquireBlockCodeMatrixV1ResponseModel:
      type: object
      properties:
        acsBlockCode:
          maximum: 999
          maxLength: 3
          type: integer
          description: Field used to map the corresponding VisionPLUS alpha block
            code (A–Z) to a numeric TRIAD block code. This value is passed during
            linkage to TRIAD.
          example: '0'
        authorizationAction:
          maximum: 9
          maxLength: 1
          type: integer
          description: Code that indicates how system handles authorizations for accounts
            assigned this block code. This value becomes WARNING CODE 1 on Account
            Details 02-Credit Scores&Associated Parties in the Account Base Segment
            record. <br/>The values are:<br/>&nbsp; '0' - Normal authorizations (Default)
            <br/>&nbsp; '1' - Decline <br/>&nbsp; '2' - Decline and pick up <br/>&nbsp;
            '3' - Decline and pick up for fraud or lost/stolen card <br/>&nbsp; '4'
            - Decline with referral <br/>&nbsp; '5' - Approve after verifying cardholder
            ID <br/>&nbsp; '6' - Decline for suspected fraud <br/>&nbsp; '8' - Decline
            with a user exit <br/>&nbsp; '9' - VIP account; always approve
          example: '0'
        autoBlockCodeAssignment:
          maximum: 9
          maxLength: 1
          type: integer
          description: Code that indicates the conditions under which system automatically
            assigns block codes to accounts. <br/>The values are:<br/>&nbsp; '0' -
            Do not automatically assign this block code to accounts (Default) <br/>&nbsp;
            '1' - Automatically assign this block code to the BLOCK CODE 1 field when
            the account reaches the delinquency level specified in the RD or CD field.
            system automatically removes this block code when the account delinquency
            level is less than the level specified in the RD or CD field <br/>&nbsp;
            '2' - Automatically assign this block code to the BLOCK CODE 2 field when
            the account reaches the delinquency level specified in the RD or CD field.
            system automatically removes this block code when the account delinquency
            level is less than the level specified in the RD or CD field <br/>&nbsp;
            '3' - Automatically assign this block code to the BLOCK CODE 1 field when
            the account reaches the delinquency level specified in RD or CD field.
            You must remove this block code manually when the account delinquency
            level is less than the level specified in the RD or CD field <br/>&nbsp;
            '4' - Automatically assign this block code to the BLOCK CODE 2 field when
            the account reaches the delinquency level specified in the RD or CD field.
            You must remove this block code manually when the account delinquency
            level is less than the level specified in the RD or CD field
          example: '0'
        autoLetterCode1:
          maxLength: 3
          type: string
          description: This flag identifies the letter to send when a block code has
            been assigned to an account the number of days in the corresponding AUTO
            LETTER DAYS 1–4 field.
          example: B11
        autoLetterCode2:
          maxLength: 3
          type: string
          description: This flag identifies the letter to send when a block code has
            been assigned to an account the number of days in the corresponding AUTO
            LETTER DAYS 1–4 field.
          example: B12
        autoLetterCode3:
          maxLength: 3
          type: string
          description: This flag identifies the letter to send when a block code has
            been assigned to an account the number of days in the corresponding AUTO
            LETTER DAYS 1–4 field.
          example: B13
        autoLetterCode4:
          maxLength: 3
          type: string
          description: This flag identifies the letter to send when a block code has
            been assigned to an account the number of days in the corresponding AUTO
            LETTER DAYS 1–4 field.
          example: B14
        autoLetterDays1:
          maximum: 999
          maxLength: 3
          type: integer
          description: Number of days that the account must have a block code before
            system initiates the corresponding letter.
          example: '1'
        autoLetterDays2:
          maximum: 999
          maxLength: 3
          type: integer
          description: Number of days that the account must have a block code before
            system initiates the corresponding letter.
          example: '1'
        autoLetterDays3:
          maximum: 999
          maxLength: 3
          type: integer
          description: Number of days that the account must have a block code before
            system initiates the corresponding letter.
          example: '1'
        autoLetterDays4:
          maximum: 999
          maxLength: 3
          type: integer
          description: Number of days that the account must have a block code before
            system initiates the corresponding letter.
          example: '1'
        description:
          maxLength: 15
          type: string
          description: This field describes each of the block code. system prints
            the block code description on reports.
          example: ' '
        blockCode:
          maxLength: 1
          type: string
          description: Block code, valid values are space and A-Z.
          example: A
        creditBureauStatus:
          maximum: 99
          maxLength: 2
          type: integer
          description: Code that indicates the status reported to the credit bureau
            for any account assigned this block code.
          example: '0'
        cancelInsuranceIndicator:
          maxLength: 1
          type: string
          description: Code that indicates whether system cancels insurance or an
            additional account product for accounts assigned this block code. <br/>The
            values are:<br/>&nbsp; 'A' - Cancel insurance/product. system automatically
            reinstates insurance/product on the cycle date when the block code is
            removed from the account <br/>&nbsp; 'M' - Cancel insurance/product and
            reinstate manually <br/>&nbsp; 'N' - No effect (Default)
          example: N
        collectionIndicator:
          maxLength: 1
          type: string
          description: This is a flag which indicates which block codes cause system
            to pass an account to CTA. The block codes are a blank (or space) and
            the letters A to Z. The first position of this field is untitled and identifies
            the blank block code. The remaining positions of this field are identified
            A to Z for each remaining block code. <br/>The values are:<br/>&nbsp;
            'N' - Do not send to CTA (Default) <br/>&nbsp; 'H' - Send to CTA with
            highest priority <br/>&nbsp; 'L' - Send to CTA with lowest priority
          example: N
        contractualDelinquencyLevel:
          maximum: 9
          maxLength: 1
          type: integer
          description: Code that determines the degree of contractual delinquency
            at which system automatically assigns this block code to an account. Use
            this field only if BLOCK CODE is 1–4. <br/>The values are:<br/>&nbsp;
            '0' - Do not set assign this block code due to contractual delinquency
            (Default) <br/>&nbsp; '1-9' - Assign the block code when an account reaches
            this level of contractual delinquency
          example: '0'
        creditBureauIndicator:
          maxLength: 1
          type: string
          description: Code that indicates whether system affects credit bureau reporting
            for accounts assigned this block code. <br/>The values are:<br/>&nbsp;
            'N' - Do not report account to credit bureau (Default) <br/>&nbsp; 'Y'
            - Report normally
          example: N
        defermentsIndicator:
          maxLength: 1
          type: string
          description: Code that indicates how system affects revolving payment conditions
            for accounts assigned this block code. <br/>The values are:<br/>&nbsp;
            'N' - No effect (Default) <br/>&nbsp; 'A' - Cancel any outstanding ITO
            plans <br/>&nbsp; 'B' - Bill account for entire outstanding balance <br/>&nbsp;
            'C' - Cancel any outstanding deferments
          example: N
        waiveFinanceChargeIndicator:
          maxLength: 1
          type: string
          description: Code that indicates how system calculates the finance charge
            for accounts assigned this block code. <br/>The values are:<br/>&nbsp;
            'N' - Normal finance charge (Default) <br/>&nbsp; 'D' - Defer finance
            charge <br/>&nbsp; 'W' - Waive finance charge
          example: N
        frequentShopperIndicator:
          maximum: 9
          maxLength: 1
          type: integer
          description: Code that determines the effect a block code has on the accumulation
            of frequent shopper points. You can assign a separate value for each block
            code. Valid block codes are blank (or space) and the letters A to Z. The
            first field is untitled and is used to enter a value for the blank block
            code. The remaining fields, A to Z, are used to enter values for the remaining
            block codes. <br/>The values are:<br/>&nbsp; '0' - Accounts with this
            block code may earn and redeem points (Default) <br/>&nbsp; '1' - Accounts
            with this block code may earn but not redeem points <br/>&nbsp; '2' -
            Accounts with this block code may not earn points but can redeem them
            <br/>&nbsp; '3' - Accounts with this block code may not earn or redeem
            points
          example: '0'
        waiveLateFeeIndicator:
          maxLength: 1
          type: string
          description: Code that indicates whether system waives late charges for
            accounts assigned this block code. <br/>The values are:<br/>&nbsp; 'N'
            - Do not waive late charges (Default) <br/>&nbsp; 'Y' - Waive late charges
          example: N
        waiveMembershipFeeIndicator:
          maximum: 9
          maxLength: 1
          type: integer
          description: Code that indicates whether system waives account-level membership
            fees and supplemental card membership fees for accounts assigned this
            block code. <br/>The values are:<br/>&nbsp; '0' - Do not waive membership
            fees (Default) <br/>&nbsp; '1' - Waive membership fee for both account
            and supplemental cards <br/>&nbsp; '2' - Waive membership fee for account
            but do not waive membership fee for supplemental cards <br/>&nbsp; '3'
            - Waive membership fee for supplemental cards but do not waive membership
            fee gfor account
          example: '0'
        waiveNSFChequeFeeIndicator:
          maxLength: 1
          type: string
          description: Code that indicates whether system waives NSF check charges
            for accounts assigned this block code. <br/>The values are:<br/>&nbsp;
            'N' - Do not waive NSF check charges (Default) <br/>&nbsp; 'Y' - Waive
            NSF check charges
          example: N
        nextBlockCode:
          maxLength: 1
          type: string
          description: Block code to which system automatically migrates the account.
            <br/>The values are:<br/>&nbsp; ' ' - Migrate the block code off the account.
            (Default) <br/>&nbsp; 'A-Z' - Block code to which the account migrates
          example: ' '
        nextBlockMigrationDays:
          maximum: 99
          maxLength: 2
          type: integer
          description: Number of days this block code remains in effect before system
            automatically migrates the account to the next block code. Use this field
            only if BC is 1–4. <br/>The values are:<br/>&nbsp; '0' - Do not automatically
            migrate (Default) <br/>&nbsp; '1-99' - Number of days before system migrates
            to the next block code
          example: '0'
        waiveOverlimitFeeIndicator:
          maxLength: 1
          type: string
          description: Code that indicates whether system waives overlimit fees for
            accounts assigned this block code. <br/>The values are:<br/>&nbsp; 'N'
            - Do not waive overlimit fees (Default) <br/>&nbsp; 'Y' - Waive overlimit
            fees
          example: N
        postingIndicator:
          maximum: 9
          maxLength: 1
          type: integer
          description: Code that determines how system posts transactions to accounts
            assigned this block code (including charged-off accounts). <br/>The values
            are:<br/>&nbsp; '0' - Post normally (Default) <br/>&nbsp; '1' - Post normally
            and report <br/>&nbsp; '2' - Nonpost all transactions <br/>&nbsp; '3'
            - Nonpost all transactions and report on the Transactions by Block Code
            report (O04) <br/>&nbsp; '4' - Nonpost debits and report <br/>&nbsp; '5'
            - Nonpost debits
          example: '0'
        priority:
          maximum: 99
          maxLength: 2
          type: integer
          description: This is the priority levels you establish to control the assignment
            of block codes. The values are 0–99 with 0 as the lowest priority and
            99 as the highest priority. The default is 0.
          example: '12'
        recencyDelinquencyLevel:
          maximum: 9
          maxLength: 1
          type: integer
          description: Code that determines the degree of recency delinquency at which
            system automatically assigns this block code to an account. Use this field
            only if BC is 1–4. <br/>The values are:<br/>&nbsp; '0' - Do not set assign
            this block code due to contractual delinquency (Default) <br/>&nbsp; '1-9'
            - Assign the block code when an account reaches this level of recency
            delinquency
          example: '0'
        reissueIndicator:
          maxLength: 1
          type: string
          description: Code that determines how system handles card reissue for accounts
            assigned this block code. This block code applies only to accounts that
            have an Embosser record assigned. <br/>The values are:<br/>&nbsp; 'Y'
            - Issue or reissue card. (Default) <br/>&nbsp; 'N' - Do not reissue card
            and do not generate report <br/>&nbsp; 'D' - Defer issue or reissue <br/>&nbsp;
            'R' - Do not reissue card but generate review report
          example: Y
        isBlockedAccountReportEnabled:
          maxLength: 1
          type: string
          description: Code that determines whether accounts assigned this block code
            appear on the Blocked Account Report (O07). <br/>The values are:<br/>&nbsp;
            'N' - Do not report accounts (Default) <br/>&nbsp; 'Y' - Report accounts
          example: N
        skipPaymentIndicator:
          maximum: 9
          maxLength: 1
          type: integer
          description: Code that indicates the type of skip payments that are excluded
            for accounts assigned this block code. <br/>The values are:<br/>&nbsp;
            '0' - Do not exclude accounts assigned this block code from either automatic
            or manual skip payment processing (Default) <br/>&nbsp; '1' - Exclude
            accounts assigned this block code from automatic skip payment processing
            <br/>&nbsp; '2' - Exclude accounts assigned this block code from manual
            skip payment processing <br/>&nbsp; '3' - Exclude accounts assigned this
            block code from both automatic and manual skip payment processing <br/>&nbsp;
            '4' - Skip payment processing is active for accounts assigned this block
            code
          example: '0'
        statementIndicator:
          maxLength: 1
          type: string
          description: Code that indicates how system affects statement processing
            for accounts assigned this block code. <br/>The values are:<br/>&nbsp;
            '0' - User-defined Statement Hold Code 10 <br/>&nbsp; '1-9' - User-defined
            Statement Hold Code 1–9 <br/>&nbsp; 'H' - Hold statement <br/>&nbsp; 'N'
            - Normal statement (Default) <br/>&nbsp; 'O' - Online archive statement
            <br/>&nbsp; 'U' - Suppress statement generation. This value will override
            the Max Months logic on the Account Processing table <br/>&nbsp; 'Z' -
            User-defined value to suppress statement generation (use of this value
            indicates that you have customized logic in place)
          example: N
        isSuppressLetterEnabled:
          maximum: 9
          maxLength: 1
          type: integer
          description: Code that indicates whether system suppresses letters for accounts
            assigned this block code. <br/>The values are:<br/>&nbsp; '0' - Do not
            suppress letters (Default) <br/>&nbsp; '1' - Suppress letters
          example: '0'
        topUpRedrawIndicator:
          maximum: 9
          maxLength: 1
          type: integer
          description: Code that indicates how system controls the top-up, redraw,
            and restructure requests for accounts assigned this block code. <br/>The
            values are:<br/>&nbsp; '0' - Top-up, redraw, and restructure are allowed
            (Default) <br/>&nbsp; '1' - Top-up and restructure are allowed; redraw
            is not allowed <br/>&nbsp; '2' - Redraw and restructure are allowed; top-up
            is not allowed <br/>&nbsp; '3' - Top-up and redraw are not allowed; restructure
            is allowed <br/>&nbsp; '4' - Top-up, redraw, and restructure are not allowed
          example: '0'
    InquireBlockCodeMatrixV1ResponseModel:
      type: object
      properties:
        businessUnit:
          maximum: 999
          maxLength: 3
          type: integer
          description: Unique identification number associated with the organization.
            Valid values from 1-998.
          example: '700'
        productId:
          maximum: 999
          maxLength: 3
          type: integer
          description: Unique identification number of the product associated with
            the organization. Valid values are 1-998.
          example: '1'
        blockCodeControls:
          type: array
          items:
            $ref: '#/components/schemas/BlockCodeControls_InquireBlockCodeMatrixV1ResponseModel'
    InquirePlanMasterV1ResponseModel:
      type: object
      properties:
        businessUnit:
          maximum: 999
          maxLength: 3
          type: integer
          description: Unique identification number associated with the organization.
            Valid values from 1-998.
          example: '600'
        planId:
          maximum: 99999
          maxLength: 5
          type: integer
          description: Identification number of the Credit Plan Master entity. The
            values are 1–99998. You can establish as many as 99,998 Credit Plan Master
            entity for each organization.
          example: '10002'
        description:
          maxLength: 30
          type: string
          description: Description of the Credit Plan Master entity. This description
            defaults to the Credit Plan Segment entity for credit plans associated
            with this Credit Plan Master entity.
          example: RETAIL PLAN
        planType:
          maxLength: 1
          type: string
          description: Code that identifies the type of credit plan. This value defaults
            to the Credit Plan Segment entity for credit plans generated by the Credit
            Plan Master entity. <br/>The values are:<br/>&nbsp; 'A' - Access checks
            (cash plan) <br/>&nbsp; 'B' - Balance transfers (retail plan) <br/>&nbsp;
            'C' - Cash plan <br/>&nbsp; 'D' - Deferment plan <br/>&nbsp; 'I' - Installment
            Plan <br/>&nbsp; 'K' - Access checks (retail plan) <br/>&nbsp; 'L' - Closed-end
            installment loan (loan plan) <br/>&nbsp; 'R' - Retail plan (Default) <br/>&nbsp;
            'T' - Balance transfers (cash plan) <br/>&nbsp; 'Y' - Prepaid (retail
            plan)
          example: R
        paymentType:
          maxLength: 1
          type: string
          description: Code that indicates the method to calculate the minimum payment
            due for credit plans generated by this Credit Plan Master entity. <br/>The
            values are:<br/>&nbsp; 'A' - Bill the fixed payment amount each month,
            regardless of the outstanding balance of the account <br/>&nbsp; 'B' -
            Bill the account balance (Default) <br/>&nbsp; 'C' - Calculate a new minimum
            payment each cycle based on the repayment table and the current balance
            <br/>&nbsp; 'D' - Calculate a new minimum payment for any cycle in which
            a user-generated debit is posted <br/>&nbsp; 'E' - Calculate a fixed payment
            amount <br/>&nbsp; 'F' - Bill a fixed payment computed from the repayment
            table during the first statement cycle <br/>&nbsp; 'G' - Bill a fixed
            principal amount as computed using payment type F plus interest and insurance
            <br/>&nbsp; 'H' - Bill based on the highest balance <br/>&nbsp; 'I' -
            Bill the current month’s interest only <br/>&nbsp; 'L' - Calculate the
            payment using the loan schedule <br/>&nbsp; 'M' - Bill a fixed principal
            amount calculated by dividing principal balance by LOAN TERM FOR SYSTEM-GENERATED
            PLAN on Credit Plans–>01–Credit Plan Specification. Add to this any unbilled
            interest. Amount will be recalculated each cycle after a new debit has
            posted. This value is valid only if the POSTING INDICATOR on Credit Plans–>01–Credit
            Plan Specification is 3 <br/>&nbsp; 'P' - Bill a fixed principal amount
            as computed using payment type F plus interest, fees, and insurance <br/>&nbsp;
            'Q' - Bill based on the highest principal balance <br/>&nbsp; 'R' - Bill
            based on the highest revolving balance <br/>&nbsp; 'S' - Bill based on
            the highest cycle ending balance <br/>&nbsp; 'T' - Term payment. Calculate
            the payment due using the percentage in the first entry of the repayment
            table <br/>&nbsp; 'U' - User-defined calculation via a user exit <br/>&nbsp;
            'W' - Bill based on the previous purchase balance
          example: T
        balanceTransferType:
          maxLength: 1
          type: string
          description: Code that indicates whether the Interest Table Override (ITO)
            that sets a special interest rate for balance transfer credit plans can
            be extended, not extended, or is in effect until a specific date. <br/>The
            values are:<br/>&nbsp; 'E' - Extend ITO number of months <br/>&nbsp; 'N'
            - Do not extend ITO number of months <br/>&nbsp; 'S' - Specify an ITO
            ending date
          example: N
        graceBalanceQualification:
          maximum: 9
          maxLength: 1
          type: integer
          description: Field that determines the plan balances, or portions of plan
            balances, that CMS considers when qualifying an account for grace processing
            logic.<br/>The values are:<br/>&nbsp; '0' - Statement balance of the credit
            plan segment must be paid (Default) <br/>&nbsp; '1' - Total amount due
            for the credit plan segment on cycle date must be paid <br/>&nbsp; '2'
            - Balance of the credit plan segment is excluded from grace processing
          example: '1'
        interestRateTableId:
          maxLength: 2
          type: string
          description: Rate table occurrence indicator (RTOI) that identifies which
            one of the 12 interest tables on the Processing Control Table to assign
            to credit plans generated by this Credit Plan Master entity.
          example: '1'
        interestRateTableOverride:
          type: object
          properties:
            tableId:
              maximum: 999
              maxLength: 3
              type: integer
              description: Identification number of the Interest table used to calculate
                interest for credit plans generated by this Credit Plan Master entity.
              example: '1'
            expiryDate:
              maxLength: 10
              type: string
              description: This field identifies a specific expiration date for the
                ITO, The format is MM/DD/YYYY or DD/MM/YYYY depending on the DATE
                FORMAT on System Control.
              example: 15/08/2023
        consolidatedDetails:
          type: object
          properties:
            controllingCreditPlanMaster:
              maximum: 99999
              maxLength: 5
              type: integer
              description: Plan number of the Credit Plan Master entity used for consolidated
                payment calculations.
              example: '10003'
            isConsolidatedStatementEnabled:
              maxLength: 1
              type: string
              description: Code that indicates whether CMS consolidates statements
                for credit plans assigned the same plan number. <br/>The values are:<br/>&nbsp;
                'N' - Do not consolidate plan segments <br/>&nbsp; 'Y' - Consolidate
                plan segments (Default)
              example: Y
            consolidatedPayment:
              maxLength: 1
              type: string
              description: Field that indicates whether CMS consolidates payments
                for the Credit Plan Segment entity. Consolidate Payment Indicator
                is a code that indicates whether CMS calculates a single (consolidated)
                payment amount for similar Credit Plan Segment entitys on the account..<br/>The
                values are:<br/>&nbsp; 'B' - Yes, consolidate plans for minimum payment
                calculation <br/>&nbsp; 'N' - No, do not consolidate for minimum payment
                calculation (Default) <br/>&nbsp; 'Y' - Yes, consolidate plans for
                minimum payment calculation <br/>&nbsp; 'R' - Yes, consolidate plans
                for minimum payment calculation
              example: Y
        promotionalPlanDetails:
          type: object
          properties:
            latePaymentCancelRoll:
              maxLength: 1
              type: string
              description: Code that controls whether credit plans generated by this
                Credit Plan Master entity roll over to another credit plan for contractual
                or recency delinquency or when a payment is not received by the payment
                due date or cycle date. <br/>The values are:<br/>&nbsp; '0' - Do not
                roll over this credit plan (Default) <br/>&nbsp; '1' - Roll over deferred
                plans for contractual delinquency <br/>&nbsp; '2' - Roll over deferred
                plans for recency delinquency <br/>&nbsp; '3' - Roll over ITO plans
                for contractual delinquency <br/>&nbsp; '4' - Roll over ITO plans
                for recency delinquency <br/>&nbsp; '5' - Cancel and roll over for
                payment due and not received by the payment due date <br/>&nbsp; '6'
                - Cancel and roll over for payment due and not received by the cycle
                date
              example: '1'
            delinquencyLevelToCancel:
              maximum: 9
              maxLength: 1
              type: integer
              description: Contractual or recency delinquency level to cancel a deferred
                plan or ITO plan. <br/>The values are:<br/>&nbsp; '0' - Do not cancel
                for delinquency (Default) <br/>&nbsp; '1' to '9' - Level of contractual
                or recency delinquency at which to cancel
              example: '6'
            cancellationLetterId:
              maxLength: 3
              type: string
              description: Code that identifies the letter in the CTA system or LTS
                system that is sent upon cancellation of a deferment or Interest Table
                Override (ITO).
              example: ''
            cancellationRollOverPlanId:
              maximum: 99999
              maxLength: 5
              type: integer
              description: Number that identifies the Credit Plan Master entity that
                generates the rollover credit plan upon cancellation of a deferment
                or Interest Table Override (ITO).
              example: '50002'
            cancellationPlanRollOverMethod:
              maximum: 9
              maxLength: 1
              type: integer
              description: Code that indicates the method for rolling over a deferred
                or ITO credit plan that was canceled due to delinquency or a payment
                not received when due. If the LATE PAYMENT CANCEL ROLL field is 5
                or 6, this field is required.<br/>The values are:<br/>&nbsp; '0' -
                Change the plan number and generate activity recap transactions for
                principal and billed-notpaid components (Default) <br/>&nbsp; '1'
                - Generate individual monetary transactions for each component to
                transfer the plan balance to the new plan <br/>&nbsp; '2' - Generate
                a monetary transaction for the principal balance to transfer the plan
                balance to the new plan
              example: '0'
            expirationRollover:
              maximum: 9
              maxLength: 1
              type: integer
              description: Code that controls rolling of this plan based on expiration
                of a deferred credit plan or an interest table override (ITO).<br/>The
                values are:<br/>&nbsp; '0' - Do not roll over. Upon expiration of
                a deferred credit plan or an interest table override (ITO), the existing
                plan will become a regular revolving plan. (Default) <br/>&nbsp; '1'
                - Upon expiration of a deferred credit plan, the expired deferment
                plan will roll to the expiration plan <br/>&nbsp; '2' - Upon expiration
                of an interest table override (ITO), the existing plan will roll to
                the expiration plan
              example: '1'
            expirationLetter:
              maxLength: 3
              type: string
              description: Code that identifies the letter in the CTA system or LTS
                system that is sent upon expiration of a deferred credit plan.
              example: EXP
            expirationRollOverPlanId:
              maximum: 99999
              maxLength: 5
              type: integer
              description: Number that identifies the Credit Plan Master entity that
                generates the rollover credit plan upon expiration of a deferred credit
                plan.
              example: '50001'
            expirationPlanRollOverMethod:
              maximum: 9
              maxLength: 1
              type: integer
              description: Code that indicates the method for rolling over a deferred
                credit plan that has expired. <br/>The values are:<br/>&nbsp; '0'
                - Change the plan number and generate activity recap transactions
                for principal and billed-notpaid components (Default) <br/>&nbsp;
                '1' - Generate individual monetary transactions for each component
                to transfer the plan balance to the new plan. CMS resets the canceled
                plan balances to zero and retains the old plan for the number of days
                defined in the Product entity (PLAN PURGE DAYS on Products->13-Product
                Processing Controls) <br/>&nbsp; '2' - Generate a monetary transaction
                for the principal balance to transfer the plan balance to the new
                plan. CMS resets the canceled plan balances to zero and retains the
                old plan for the number of days defined in the Product entity (PLAN
                PURGE DAYS on Products->13-Product Processing Controls)
              example: '0'
        multipleSales:
          maxLength: 1
          type: string
          description: Code that indicates whether each sales transaction associated
            with this Credit Plan Segment entity generates a new Credit Plan Segment
            entity or is added to an existing Credit Plan Segment entity. The value
            in this field defaults to Credit Plan Segment entity. <br/>The values
            are:<br/>&nbsp; 'I' - Generate a new Credit Plan Segment entity for each
            sale that posts on any date <br/>&nbsp; 'N' - No, add-on sales are not
            allowed. Do not add subsequent sales to the same Credit Plan Segment entity.
            If multiple sales post on the same effective date, however, generate one
            Credit Plan Segment entity that includes all sales that post on the same
            date <br/>&nbsp; 'Y' - Yes, add-on sales are allowed. Add subsequent sales
            to the same Credit Plan Segment entity (Default)
          example: Y
  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
